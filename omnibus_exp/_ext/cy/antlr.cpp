/* Generated by Cython 0.29.22 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "extra_compile_args": [
            "-std=c++14",
            "-march=native"
        ],
        "language": "c++",
        "name": "omnibus._ext.cy.antlr",
        "sources": [
            "omnibus/_ext/cy/antlr.pyx"
        ]
    },
    "module_name": "omnibus._ext.cy.antlr"
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_22"
#define CYTHON_HEX_VERSION 0x001D16F0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#if PY_VERSION_HEX >= 0x030800A4 && PY_VERSION_HEX < 0x030800B2
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__omnibus___ext__cy__antlr
#define __PYX_HAVE_API__omnibus___ext__cy__antlr
/* Early includes */
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "omnibus/_ext/cy/antlr.pyx",
  "stringsource",
};

/*--- Type declarations ---*/
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig;
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig;
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet;
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet;
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd;
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr;
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates;
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr;
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates;
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr;

/* "omnibus/_ext/cy/antlr.pyx":184
 * 
 * 
 * cdef class CyATNConfig:             # <<<<<<<<<<<<<<
 * 
 *     cdef object state  # type: ATNStat
 */
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig {
  PyObject_HEAD
  struct __pyx_vtabstruct_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_vtab;
  PyObject *state;
  int alt;
  PyObject *context;
  PyObject *semantic;
  int reachesIntoOuterContext;
  bool precedenceFilterSuppressed;
};


/* "omnibus/_ext/cy/antlr.pyx":277
 * 
 * 
 * cdef class CyLexerATNConfig(CyATNConfig):             # <<<<<<<<<<<<<<
 * 
 *     cdef object lexerActionExecutor  # type: LexerActionExecutor
 */
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig __pyx_base;
  PyObject *lexerActionExecutor;
  bool passedThroughNonGreedyDecision;
};


/* "omnibus/_ext/cy/antlr.pyx":332
 * 
 * 
 * cdef class CyATNConfigSet:             # <<<<<<<<<<<<<<
 * 
 *     cdef object configLookup
 */
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet {
  PyObject_HEAD
  PyObject *configLookup;
  PyObject *fullCtx;
  PyObject *readonly_;
  PyObject *configs;
  PyObject *uniqueAlt;
  PyObject *conflictingAlts;
  PyObject *hasSemanticContext;
  PyObject *dipsIntoOuterContext;
  PyObject *cachedHashCode;
};


/* "omnibus/_ext/cy/antlr.pyx":501
 * 
 * 
 * cdef class CyOrderedATNConfigSet(CyATNConfigSet):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self):
 */
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet __pyx_base;
};


/* "omnibus/_ext/cy/antlr.pyx":392
 *         return True
 * 
 *     def getOrAdd(self, config: ATNConfig):             # <<<<<<<<<<<<<<
 *         h = config.hashCodeForConfigSet()
 *         l = self.configLookup.get(h, None)
 */
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd {
  PyObject_HEAD
  PyObject *__pyx_v_config;
  PyObject *__pyx_v_l;
};


/* "omnibus/_ext/cy/antlr.pyx":396
 *         l = self.configLookup.get(h, None)
 *         if l is not None:
 *             r = next((cfg for cfg in l if config.equalsForConfigSet(cfg)), None)             # <<<<<<<<<<<<<<
 *             if r is not None:
 *                 return r
 */
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr {
  PyObject_HEAD
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd *__pyx_outer_scope;
  PyObject *__pyx_v_cfg;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};


/* "omnibus/_ext/cy/antlr.pyx":406
 *         return config
 * 
 *     def getStates(self):             # <<<<<<<<<<<<<<
 *         return set(c.state for c in self.configs)
 * 
 */
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates {
  PyObject_HEAD
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self;
};


/* "omnibus/_ext/cy/antlr.pyx":407
 * 
 *     def getStates(self):
 *         return set(c.state for c in self.configs)             # <<<<<<<<<<<<<<
 * 
 *     def getPredicates(self):
 */
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr {
  PyObject_HEAD
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates *__pyx_outer_scope;
  PyObject *__pyx_v_c;
};


/* "omnibus/_ext/cy/antlr.pyx":409
 *         return set(c.state for c in self.configs)
 * 
 *     def getPredicates(self):             # <<<<<<<<<<<<<<
 *         return list(cfg.semanticContext for cfg in self.configs if cfg.semanticContext != SemanticContext.NONE)
 * 
 */
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates {
  PyObject_HEAD
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self;
};


/* "omnibus/_ext/cy/antlr.pyx":410
 * 
 *     def getPredicates(self):
 *         return list(cfg.semanticContext for cfg in self.configs if cfg.semanticContext != SemanticContext.NONE)             # <<<<<<<<<<<<<<
 * 
 *     def get(self, i: int):
 */
struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr {
  PyObject_HEAD
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates *__pyx_outer_scope;
  PyObject *__pyx_v_cfg;
};



/* "omnibus/_ext/cy/antlr.pyx":184
 * 
 * 
 * cdef class CyATNConfig:             # <<<<<<<<<<<<<<
 * 
 *     cdef object state  # type: ATNStat
 */

struct __pyx_vtabstruct_7omnibus_4_ext_2cy_5antlr_CyATNConfig {
  PyObject *(*hashCodeForConfigSet)(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *, int __pyx_skip_dispatch);
  PyObject *(*equalsForConfigSet)(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_vtabptr_7omnibus_4_ext_2cy_5antlr_CyATNConfig;


/* "omnibus/_ext/cy/antlr.pyx":277
 * 
 * 
 * cdef class CyLexerATNConfig(CyATNConfig):             # <<<<<<<<<<<<<<
 * 
 *     cdef object lexerActionExecutor  # type: LexerActionExecutor
 */

struct __pyx_vtabstruct_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig {
  struct __pyx_vtabstruct_7omnibus_4_ext_2cy_5antlr_CyATNConfig __pyx_base;
  PyObject *(*checkNonGreedyDecision)(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *, PyObject *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_vtabptr_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyIntCompare.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* PyObjectLookupSpecial.proto */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name) {
    PyObject *res;
    PyTypeObject *tp = Py_TYPE(obj);
#if PY_MAJOR_VERSION < 3
    if (unlikely(PyInstance_Check(obj)))
        return __Pyx_PyObject_GetAttrStr(obj, attr_name);
#endif
    res = _PyType_Lookup(tp, attr_name);
    if (likely(res)) {
        descrgetfunc f = Py_TYPE(res)->tp_descr_get;
        if (!f) {
            Py_INCREF(res);
        } else {
            res = f(res, obj, (PyObject *)tp);
        }
    } else {
        PyErr_SetObject(PyExc_AttributeError, attr_name);
    }
    return res;
}
#else
#define __Pyx_PyObject_LookupSpecial(o,n) __Pyx_PyObject_GetAttrStr(o,n)
#endif

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* GetAttr3.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *, PyObject *, PyObject *);

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* append.proto */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x);

/* None.proto */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);

/* IterNext.proto */
#define __Pyx_PyIter_Next(obj) __Pyx_PyIter_Next2(obj, NULL)
static CYTHON_INLINE PyObject *__Pyx_PyIter_Next2(PyObject *, PyObject *);

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely((Py_TYPE(obj) == type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED 1
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f)\
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj;
    void *defaults;
    int defaults_pyobjects;
    size_t defaults_size;  // used by FusedFunction for copying defaults
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
} __pyx_CyFunctionObject;
static PyTypeObject *__pyx_CyFunctionType = 0;
#define __Pyx_CyFunction_Check(obj)  (__Pyx_TypeCheck(obj, __pyx_CyFunctionType))
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *self,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(void);

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* HasAttr.proto */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);

/* IncludeStringH.proto */
#include <string.h>

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* SetupReduce.proto */
static int __Pyx_setup_reduce(PyObject* type_obj);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* GCCDiagnostics.proto */
#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* Globals.proto */
static PyObject* __Pyx_Globals(void);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* SwapException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* CoroutineBase.proto */
typedef PyObject *(*__pyx_coroutine_body_t)(PyObject *, PyThreadState *, PyObject *);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_ExcInfoStruct  _PyErr_StackItem
#else
typedef struct {
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
} __Pyx_ExcInfoStruct;
#endif
typedef struct {
    PyObject_HEAD
    __pyx_coroutine_body_t body;
    PyObject *closure;
    __Pyx_ExcInfoStruct gi_exc_state;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    PyObject *gi_modulename;
    PyObject *gi_code;
    int resume_label;
    char is_running;
} __pyx_CoroutineObject;
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
    PyTypeObject *type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
    PyObject *name, PyObject *qualname, PyObject *module_name);
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name);
static CYTHON_INLINE void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *self);
static int __Pyx_Coroutine_clear(PyObject *self);
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Coroutine_Close(PyObject *self);
static PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_Coroutine_SwapException(self)
#define __Pyx_Coroutine_ResetAndClearException(self)  __Pyx_Coroutine_ExceptionClear(&(self)->gi_exc_state)
#else
#define __Pyx_Coroutine_SwapException(self) {\
    __Pyx_ExceptionSwap(&(self)->gi_exc_state.exc_type, &(self)->gi_exc_state.exc_value, &(self)->gi_exc_state.exc_traceback);\
    __Pyx_Coroutine_ResetFrameBackpointer(&(self)->gi_exc_state);\
    }
#define __Pyx_Coroutine_ResetAndClearException(self) {\
    __Pyx_ExceptionReset((self)->gi_exc_state.exc_type, (self)->gi_exc_state.exc_value, (self)->gi_exc_state.exc_traceback);\
    (self)->gi_exc_state.exc_type = (self)->gi_exc_state.exc_value = (self)->gi_exc_state.exc_traceback = NULL;\
    }
#endif
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__pyx_tstate, pvalue)
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, pvalue)
#endif
static int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *tstate, PyObject **pvalue);
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state);

/* PatchModuleWithCoroutine.proto */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);

/* PatchGeneratorABC.proto */
static int __Pyx_patch_abc(void);

/* Generator.proto */
#define __Pyx_Generator_USED
static PyTypeObject *__pyx_GeneratorType = 0;
#define __Pyx_Generator_CheckExact(obj) (Py_TYPE(obj) == __pyx_GeneratorType)
#define __Pyx_Generator_New(body, code, closure, name, qualname, module_name)\
    __Pyx__Coroutine_New(__pyx_GeneratorType, body, code, closure, name, qualname, module_name)
static PyObject *__Pyx_Generator_Next(PyObject *self);
static int __pyx_Generator_init(void);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_hashCodeForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_equalsForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_hashCodeForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_equalsForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_checkNonGreedyDecision(CYTHON_UNUSED struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v_source, PyObject *__pyx_v_target, int __pyx_skip_dispatch); /* proto*/

/* Module declarations from 'libcpp' */

/* Module declarations from 'omnibus._ext.cy.antlr' */
static PyTypeObject *__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig = 0;
static PyTypeObject *__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig = 0;
static PyTypeObject *__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet = 0;
static PyTypeObject *__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet = 0;
static PyTypeObject *__pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd = 0;
static PyTypeObject *__pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr = 0;
static PyTypeObject *__pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates = 0;
static PyTypeObject *__pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr = 0;
static PyTypeObject *__pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates = 0;
static PyTypeObject *__pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr = 0;
static bool __pyx_f_7omnibus_4_ext_2cy_5antlr_LexerATNSimulator__closure(PyObject *, PyObject *, PyObject *, PyObject *, bool, bool, bool, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyATNConfig__set_state(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *, PyObject *); /*proto*/
static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyLexerATNConfig__set_state(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *, PyObject *); /*proto*/
static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyATNConfigSet__set_state(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *, PyObject *); /*proto*/
static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyOrderedATNConfigSet__set_state(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet *, PyObject *); /*proto*/
#define __Pyx_MODULE_NAME "omnibus._ext.cy.antlr"
extern int __pyx_module_is_main_omnibus___ext__cy__antlr;
int __pyx_module_is_main_omnibus___ext__cy__antlr = 0;

/* Implementation of 'omnibus._ext.cy.antlr' */
static PyObject *__pyx_builtin_eval;
static PyObject *__pyx_builtin_ImportError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_super;
static const char __pyx_k_[] = "(";
static const char __pyx_k_c[] = "c";
static const char __pyx_k_h[] = "h";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_l[] = "l";
static const char __pyx_k_p[] = "p";
static const char __pyx_k_r[] = "r";
static const char __pyx_k__2[] = ",";
static const char __pyx_k__3[] = ",[";
static const char __pyx_k__4[] = "]";
static const char __pyx_k__5[] = ")";
static const char __pyx_k_eq[] = "__eq__";
static const char __pyx_k_io[] = "io";
static const char __pyx_k_up[] = ",up=";
static const char __pyx_k_ATN[] = "ATN";
static const char __pyx_k_EOF[] = "EOF";
static const char __pyx_k_add[] = "add";
static const char __pyx_k_alt[] = "alt";
static const char __pyx_k_atn[] = "atn";
static const char __pyx_k_cfg[] = "cfg";
static const char __pyx_k_get[] = "get";
static const char __pyx_k_int[] = "int";
static const char __pyx_k_new[] = "__new__";
static const char __pyx_k_NONE[] = "NONE";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_bool[] = "bool";
static const char __pyx_k_coll[] = "coll";
static const char __pyx_k_dict[] = "__dict__";
static const char __pyx_k_eval[] = "eval";
static const char __pyx_k_exit[] = "__exit__";
static const char __pyx_k_init[] = "__init__";
static const char __pyx_k_iter[] = "__iter__";
static const char __pyx_k_list[] = "list";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_self[] = "self";
static const char __pyx_k_send[] = "send";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_EMPTY[] = "EMPTY";
static const char __pyx_k_Lexer[] = "Lexer";
static const char __pyx_k_Token[] = "Token";
static const char __pyx_k_check[] = "_check";
static const char __pyx_k_class[] = "__class__";
static const char __pyx_k_clear[] = "clear";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_enter[] = "__enter__";
static const char __pyx_k_input[] = "input";
static const char __pyx_k_merge[] = "merge";
static const char __pyx_k_other[] = "other";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_state[] = "state";
static const char __pyx_k_super[] = "super";
static const char __pyx_k_throw[] = "throw";
static const char __pyx_k_write[] = "write";
static const char __pyx_k_addAll[] = "addAll";
static const char __pyx_k_append[] = "append";
static const char __pyx_k_config[] = "config";
static const char __pyx_k_create[] = "create";
static const char __pyx_k_dict_2[] = "_dict";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_merged[] = "merged";
static const char __pyx_k_pickle[] = "pickle";
static const char __pyx_k_reduce[] = "reduce";
static const char __pyx_k_source[] = "source";
static const char __pyx_k_states[] = "states";
static const char __pyx_k_target[] = "target";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_configs[] = "configs";
static const char __pyx_k_context[] = "context";
static const char __pyx_k_fullCtx[] = "fullCtx";
static const char __pyx_k_genexpr[] = "genexpr";
static const char __pyx_k_isEmpty[] = "isEmpty";
static const char __pyx_k_matches[] = "matches";
static const char __pyx_k_ATNState[] = "ATNState";
static const char __pyx_k_StringIO[] = "StringIO";
static const char __pyx_k_existing[] = "existing";
static const char __pyx_k_getOrAdd[] = "getOrAdd";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_getvalue[] = "getvalue";
static const char __pyx_k_pyx_type[] = "__pyx_type";
static const char __pyx_k_readonly[] = "readonly";
static const char __pyx_k_reduce_2[] = "__reduce__";
static const char __pyx_k_semantic[] = "semantic";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_str_list[] = "str_list";
static const char __pyx_k_ATNConfig[] = "ATNConfig";
static const char __pyx_k_functools[] = "functools";
static const char __pyx_k_getParent[] = "getParent";
static const char __pyx_k_getStates[] = "getStates";
static const char __pyx_k_nonGreedy[] = "nonGreedy";
static const char __pyx_k_predIndex[] = "predIndex";
static const char __pyx_k_pyx_state[] = "__pyx_state";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_ruleIndex[] = "ruleIndex";
static const char __pyx_k_uniqueAlt[] = "uniqueAlt";
static const char __pyx_k_Transition[] = "Transition";
static const char __pyx_k_mergeCache[] = "mergeCache";
static const char __pyx_k_pyx_result[] = "__pyx_result";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_CyATNConfig[] = "CyATNConfig";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_InputStream[] = "InputStream";
static const char __pyx_k_PickleError[] = "PickleError";
static const char __pyx_k_actionIndex[] = "actionIndex";
static const char __pyx_k_followState[] = "followState";
static const char __pyx_k_hashConfigs[] = "hashConfigs";
static const char __pyx_k_interpreter[] = "interpreter";
static const char __pyx_k_setReadonly[] = "setReadonly";
static const char __pyx_k_speculative[] = "speculative";
static const char __pyx_k_stateNumber[] = "stateNumber";
static const char __pyx_k_transitions[] = "transitions";
static const char __pyx_k_uniqueAlt_2[] = ",uniqueAlt=";
static const char __pyx_k_ATNConfigSet[] = "ATNConfigSet";
static const char __pyx_k_ATNSimulator[] = "ATNSimulator";
static const char __pyx_k_hasEmptyPath[] = "hasEmptyPath";
static const char __pyx_k_lexerActions[] = "lexerActions";
static const char __pyx_k_pyx_checksum[] = "__pyx_checksum";
static const char __pyx_k_stringsource[] = "stringsource";
static const char __pyx_k_use_setstate[] = "use_setstate";
static const char __pyx_k_DecisionState[] = "DecisionState";
static const char __pyx_k_RuleStopState[] = "RuleStopState";
static const char __pyx_k_getPredicates[] = "getPredicates";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_vendor_antlr4[] = "_vendor.antlr4";
static const char __pyx_k_CyATNConfigSet[] = "CyATNConfigSet";
static const char __pyx_k_LexerATNConfig[] = "LexerATNConfig";
static const char __pyx_k_MAX_CHAR_VALUE[] = "MAX_CHAR_VALUE";
static const char __pyx_k_getReturnState[] = "getReturnState";
static const char __pyx_k_initialContext[] = "initialContext";
static const char __pyx_k_rootIsWildcard[] = "rootIsWildcard";
static const char __pyx_k_SemanticContext[] = "SemanticContext";
static const char __pyx_k_conflictingAlts[] = "conflictingAlts";
static const char __pyx_k_optimizeConfigs[] = "optimizeConfigs";
static const char __pyx_k_pyx_PickleError[] = "__pyx_PickleError";
static const char __pyx_k_semanticContext[] = "semanticContext";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_7_Transition_SET[] = "7         == Transition.SET";
static const char __pyx_k_CyLexerATNConfig[] = "CyLexerATNConfig";
static const char __pyx_k_getCachedContext[] = "getCachedContext";
static const char __pyx_k_3_Transition_RULE[] = "3        == Transition.RULE";
static const char __pyx_k_5_Transition_ATOM[] = "5        == Transition.ATOM";
static const char __pyx_k_LexerATNSimulator[] = "LexerATNSimulator";
static const char __pyx_k_PredictionContext[] = "PredictionContext";
static const char __pyx_k_conflictingAlts_2[] = ",conflictingAlts=";
static const char __pyx_k_evaluatePredicate[] = "evaluatePredicate";
static const char __pyx_k_serializationType[] = "serializationType";
static const char __pyx_k_treatEofAsEpsilon[] = "treatEofAsEpsilon";
static const char __pyx_k_2_Transition_RANGE[] = "2       == Transition.RANGE";
static const char __pyx_k_CyATNConfigSet_add[] = "CyATNConfigSet.add";
static const char __pyx_k_CyATNConfigSet_get[] = "CyATNConfigSet.get";
static const char __pyx_k_EMPTY_RETURN_STATE[] = "EMPTY_RETURN_STATE";
static const char __pyx_k_INVALID_ALT_NUMBER[] = "INVALID_ALT_NUMBER";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_equalsForConfigSet[] = "equalsForConfigSet";
static const char __pyx_k_hasSemanticContext[] = "hasSemanticContext";
static const char __pyx_k_6_Transition_ACTION[] = "6      == Transition.ACTION";
static const char __pyx_k_LexerActionExecutor[] = "LexerActionExecutor";
static const char __pyx_k_lexerActionExecutor[] = "lexerActionExecutor";
static const char __pyx_k_vendor_antlr4_Utils[] = "_vendor.antlr4.Utils";
static const char __pyx_k_1_Transition_EPSILON[] = "1     == Transition.EPSILON";
static const char __pyx_k_8_Transition_NOT_SET[] = "8     == Transition.NOT_SET";
static const char __pyx_k_CyATNConfigSet_clear[] = "CyATNConfigSet.clear";
static const char __pyx_k_This_set_is_readonly[] = "This set is readonly";
static const char __pyx_k_dipsIntoOuterContext[] = "dipsIntoOuterContext";
static const char __pyx_k_hasSemanticContext_2[] = ",hasSemanticContext=";
static const char __pyx_k_hashCodeForConfigSet[] = "hashCodeForConfigSet";
static const char __pyx_k_9_Transition_WILDCARD[] = "9    == Transition.WILDCARD";
static const char __pyx_k_CyATNConfigSet_addAll[] = "CyATNConfigSet.addAll";
static const char __pyx_k_CyOrderedATNConfigSet[] = "CyOrderedATNConfigSet";
static const char __pyx_k_IllegalStateException[] = "IllegalStateException";
static const char __pyx_k_omnibus__ext_cy_antlr[] = "omnibus._ext.cy.antlr";
static const char __pyx_k_vendor_antlr4_atn_ATN[] = "_vendor.antlr4.atn.ATN";
static const char __pyx_k_4_Transition_PREDICATE[] = "4   == Transition.PREDICATE";
static const char __pyx_k_CyATNConfigSet_isEmpty[] = "CyATNConfigSet.isEmpty";
static const char __pyx_k_checkNonGreedyDecision[] = "checkNonGreedyDecision";
static const char __pyx_k_dipsIntoOuterContext_2[] = ",dipsIntoOuterContext";
static const char __pyx_k_epsilonOnlyTransitions[] = "epsilonOnlyTransitions";
static const char __pyx_k_CyATNConfigSet_getOrAdd[] = "CyATNConfigSet.getOrAdd";
static const char __pyx_k_getOrAdd_locals_genexpr[] = "getOrAdd.<locals>.genexpr";
static const char __pyx_k_reachesIntoOuterContext[] = "reachesIntoOuterContext";
static const char __pyx_k_10_Transition_PRECEDENCE[] = "10  == Transition.PRECEDENCE";
static const char __pyx_k_CyATNConfigSet_getStates[] = "CyATNConfigSet.getStates";
static const char __pyx_k_getStates_locals_genexpr[] = "getStates.<locals>.genexpr";
static const char __pyx_k_pyx_unpickle_CyATNConfig[] = "__pyx_unpickle_CyATNConfig";
static const char __pyx_k_hashConfigs_locals_lambda[] = "hashConfigs.<locals>.<lambda>";
static const char __pyx_k_omnibus__ext_cy_antlr_pyx[] = "omnibus/_ext/cy/antlr.pyx";
static const char __pyx_k_CyATNConfigSet_hashConfigs[] = "CyATNConfigSet.hashConfigs";
static const char __pyx_k_CyATNConfigSet_setReadonly[] = "CyATNConfigSet.setReadonly";
static const char __pyx_k_LexerATNSimulator__closure[] = "LexerATNSimulator__closure";
static const char __pyx_k_SingletonPredictionContext[] = "SingletonPredictionContext";
static const char __pyx_k_precedenceFilterSuppressed[] = "precedenceFilterSuppressed";
static const char __pyx_k_vendor_antlr4_atn_ATNState[] = "_vendor.antlr4.atn.ATNState";
static const char __pyx_k_vendor_antlr4_error_Errors[] = "_vendor.antlr4.error.Errors";
static const char __pyx_k_CyATNConfig___reduce_cython[] = "CyATNConfig.__reduce_cython__";
static const char __pyx_k_pyx_unpickle_CyATNConfigSet[] = "__pyx_unpickle_CyATNConfigSet";
static const char __pyx_k_vendor_antlr4_atn_ATNConfig[] = "_vendor.antlr4.atn.ATNConfig";
static const char __pyx_k_CyATNConfigSet_getPredicates[] = "CyATNConfigSet.getPredicates";
static const char __pyx_k_currentAltReachedAcceptState[] = "currentAltReachedAcceptState";
static const char __pyx_k_getPredicates_locals_genexpr[] = "getPredicates.<locals>.genexpr";
static const char __pyx_k_vendor_antlr4_atn_Transition[] = "_vendor.antlr4.atn.Transition";
static const char __pyx_k_CyATNConfig___setstate_cython[] = "CyATNConfig.__setstate_cython__";
static const char __pyx_k_UnsupportedOperationException[] = "UnsupportedOperationException";
static const char __pyx_k_pyx_unpickle_CyLexerATNConfig[] = "__pyx_unpickle_CyLexerATNConfig";
static const char __pyx_k_CyATNConfigSet___reduce_cython[] = "CyATNConfigSet.__reduce_cython__";
static const char __pyx_k_CyATNConfigSet_optimizeConfigs[] = "CyATNConfigSet.optimizeConfigs";
static const char __pyx_k_CyATNConfig_equalsForConfigSet[] = "CyATNConfig.equalsForConfigSet";
static const char __pyx_k_not_RuleStopState___subclasses[] = "not RuleStopState.__subclasses__()";
static const char __pyx_k_passedThroughNonGreedyDecision[] = "passedThroughNonGreedyDecision";
static const char __pyx_k_pyx_unpickle_CyOrderedATNConfi[] = "__pyx_unpickle_CyOrderedATNConfigSet";
static const char __pyx_k_vendor_antlr4_atn_ATNConfigSet[] = "_vendor.antlr4.atn.ATNConfigSet";
static const char __pyx_k_vendor_antlr4_atn_ATNSimulator[] = "_vendor.antlr4.atn.ATNSimulator";
static const char __pyx_k_not_LexerATNConfig___subclasses[] = "not LexerATNConfig.__subclasses__()";
static const char __pyx_k_vendor_antlr4_PredictionContext[] = "_vendor.antlr4.PredictionContext";
static const char __pyx_k_vendor_antlr4_atn_LexerActionEx[] = "_vendor.antlr4.atn.LexerActionExecutor";
static const char __pyx_k_vendor_antlr4_atn_SemanticConte[] = "_vendor.antlr4.atn.SemanticContext";
static const char __pyx_k_ATNConfig___subclasses___LexerAT[] = "ATNConfig.__subclasses__() == [LexerATNConfig]";
static const char __pyx_k_CyATNConfigSet___setstate_cython[] = "CyATNConfigSet.__setstate_cython__";
static const char __pyx_k_CyATNConfig_hashCodeForConfigSet[] = "CyATNConfig.hashCodeForConfigSet";
static const char __pyx_k_CyLexerATNConfig___reduce_cython[] = "CyLexerATNConfig.__reduce_cython__";
static const char __pyx_k_CyLexerATNConfig___setstate_cyth[] = "CyLexerATNConfig.__setstate_cython__";
static const char __pyx_k_CyLexerATNConfig_checkNonGreedyD[] = "CyLexerATNConfig.checkNonGreedyDecision";
static const char __pyx_k_CyLexerATNConfig_equalsForConfig[] = "CyLexerATNConfig.equalsForConfigSet";
static const char __pyx_k_CyLexerATNConfig_hashCodeForConf[] = "CyLexerATNConfig.hashCodeForConfigSet";
static const char __pyx_k_CyOrderedATNConfigSet___reduce_c[] = "CyOrderedATNConfigSet.__reduce_cython__";
static const char __pyx_k_CyOrderedATNConfigSet___setstate[] = "CyOrderedATNConfigSet.__setstate_cython__";
static const char __pyx_k_Incompatible_checksums_s_vs_0x1c[] = "Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))";
static const char __pyx_k_Incompatible_checksums_s_vs_0x52[] = "Incompatible checksums (%s vs 0x52fdf41 = (alt, context, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))";
static const char __pyx_k_Incompatible_checksums_s_vs_0x55[] = "Incompatible checksums (%s vs 0x55e4a68 = (alt, context, lexerActionExecutor, passedThroughNonGreedyDecision, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))";
static const char __pyx_k_LexerATNSimulator__computeStartS[] = "LexerATNSimulator__computeStartState";
static const char __pyx_k_Precedence_predicates_are_not_su[] = "Precedence predicates are not supported in lexers.";
static const char __pyx_k_This_method_is_not_implemented_f[] = "This method is not implemented for readonly sets.";
static PyObject *__pyx_kp_u_;
static PyObject *__pyx_kp_u_10_Transition_PRECEDENCE;
static PyObject *__pyx_kp_u_1_Transition_EPSILON;
static PyObject *__pyx_kp_u_2_Transition_RANGE;
static PyObject *__pyx_kp_u_3_Transition_RULE;
static PyObject *__pyx_kp_u_4_Transition_PREDICATE;
static PyObject *__pyx_kp_u_5_Transition_ATOM;
static PyObject *__pyx_kp_u_6_Transition_ACTION;
static PyObject *__pyx_kp_u_7_Transition_SET;
static PyObject *__pyx_kp_u_8_Transition_NOT_SET;
static PyObject *__pyx_kp_u_9_Transition_WILDCARD;
static PyObject *__pyx_n_s_ATN;
static PyObject *__pyx_n_s_ATNConfig;
static PyObject *__pyx_n_s_ATNConfigSet;
static PyObject *__pyx_kp_u_ATNConfig___subclasses___LexerAT;
static PyObject *__pyx_n_s_ATNSimulator;
static PyObject *__pyx_n_s_ATNState;
static PyObject *__pyx_n_s_CyATNConfig;
static PyObject *__pyx_n_s_CyATNConfigSet;
static PyObject *__pyx_n_s_CyATNConfigSet___reduce_cython;
static PyObject *__pyx_n_s_CyATNConfigSet___setstate_cython;
static PyObject *__pyx_n_s_CyATNConfigSet_add;
static PyObject *__pyx_n_s_CyATNConfigSet_addAll;
static PyObject *__pyx_n_s_CyATNConfigSet_clear;
static PyObject *__pyx_n_s_CyATNConfigSet_get;
static PyObject *__pyx_n_s_CyATNConfigSet_getOrAdd;
static PyObject *__pyx_n_s_CyATNConfigSet_getPredicates;
static PyObject *__pyx_n_s_CyATNConfigSet_getStates;
static PyObject *__pyx_n_s_CyATNConfigSet_hashConfigs;
static PyObject *__pyx_n_s_CyATNConfigSet_isEmpty;
static PyObject *__pyx_n_s_CyATNConfigSet_optimizeConfigs;
static PyObject *__pyx_n_s_CyATNConfigSet_setReadonly;
static PyObject *__pyx_n_s_CyATNConfig___reduce_cython;
static PyObject *__pyx_n_s_CyATNConfig___setstate_cython;
static PyObject *__pyx_n_s_CyATNConfig_equalsForConfigSet;
static PyObject *__pyx_n_s_CyATNConfig_hashCodeForConfigSet;
static PyObject *__pyx_n_s_CyLexerATNConfig;
static PyObject *__pyx_n_s_CyLexerATNConfig___reduce_cython;
static PyObject *__pyx_n_s_CyLexerATNConfig___setstate_cyth;
static PyObject *__pyx_n_s_CyLexerATNConfig_checkNonGreedyD;
static PyObject *__pyx_n_s_CyLexerATNConfig_equalsForConfig;
static PyObject *__pyx_n_s_CyLexerATNConfig_hashCodeForConf;
static PyObject *__pyx_n_s_CyOrderedATNConfigSet;
static PyObject *__pyx_n_s_CyOrderedATNConfigSet___reduce_c;
static PyObject *__pyx_n_s_CyOrderedATNConfigSet___setstate;
static PyObject *__pyx_n_s_DecisionState;
static PyObject *__pyx_n_s_EMPTY;
static PyObject *__pyx_n_s_EMPTY_RETURN_STATE;
static PyObject *__pyx_n_s_EOF;
static PyObject *__pyx_n_s_INVALID_ALT_NUMBER;
static PyObject *__pyx_n_s_IllegalStateException;
static PyObject *__pyx_n_s_ImportError;
static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x1c;
static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x52;
static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x55;
static PyObject *__pyx_n_s_InputStream;
static PyObject *__pyx_n_s_Lexer;
static PyObject *__pyx_n_s_LexerATNConfig;
static PyObject *__pyx_n_s_LexerATNSimulator;
static PyObject *__pyx_n_s_LexerATNSimulator__closure;
static PyObject *__pyx_n_s_LexerATNSimulator__computeStartS;
static PyObject *__pyx_n_s_LexerActionExecutor;
static PyObject *__pyx_n_s_MAX_CHAR_VALUE;
static PyObject *__pyx_n_s_NONE;
static PyObject *__pyx_n_s_PickleError;
static PyObject *__pyx_kp_u_Precedence_predicates_are_not_su;
static PyObject *__pyx_n_s_PredictionContext;
static PyObject *__pyx_n_s_RuleStopState;
static PyObject *__pyx_n_s_SemanticContext;
static PyObject *__pyx_n_s_SingletonPredictionContext;
static PyObject *__pyx_n_s_StringIO;
static PyObject *__pyx_kp_u_This_method_is_not_implemented_f;
static PyObject *__pyx_kp_u_This_set_is_readonly;
static PyObject *__pyx_n_s_Token;
static PyObject *__pyx_n_s_Transition;
static PyObject *__pyx_n_s_UnsupportedOperationException;
static PyObject *__pyx_kp_u__2;
static PyObject *__pyx_kp_u__3;
static PyObject *__pyx_kp_u__4;
static PyObject *__pyx_kp_u__5;
static PyObject *__pyx_n_s_actionIndex;
static PyObject *__pyx_n_s_add;
static PyObject *__pyx_n_s_addAll;
static PyObject *__pyx_n_s_alt;
static PyObject *__pyx_n_s_append;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_atn;
static PyObject *__pyx_n_u_bool;
static PyObject *__pyx_n_s_c;
static PyObject *__pyx_n_s_cfg;
static PyObject *__pyx_n_s_check;
static PyObject *__pyx_n_s_checkNonGreedyDecision;
static PyObject *__pyx_n_s_class;
static PyObject *__pyx_n_s_clear;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_close;
static PyObject *__pyx_n_s_coll;
static PyObject *__pyx_n_s_config;
static PyObject *__pyx_n_s_configs;
static PyObject *__pyx_n_s_conflictingAlts;
static PyObject *__pyx_kp_u_conflictingAlts_2;
static PyObject *__pyx_n_s_context;
static PyObject *__pyx_n_s_create;
static PyObject *__pyx_n_s_currentAltReachedAcceptState;
static PyObject *__pyx_n_s_dict;
static PyObject *__pyx_n_s_dict_2;
static PyObject *__pyx_n_s_dipsIntoOuterContext;
static PyObject *__pyx_kp_u_dipsIntoOuterContext_2;
static PyObject *__pyx_n_s_enter;
static PyObject *__pyx_n_s_epsilonOnlyTransitions;
static PyObject *__pyx_n_s_eq;
static PyObject *__pyx_n_s_equalsForConfigSet;
static PyObject *__pyx_n_s_eval;
static PyObject *__pyx_n_s_evaluatePredicate;
static PyObject *__pyx_n_s_existing;
static PyObject *__pyx_n_s_exit;
static PyObject *__pyx_n_s_followState;
static PyObject *__pyx_n_s_fullCtx;
static PyObject *__pyx_n_s_functools;
static PyObject *__pyx_n_s_genexpr;
static PyObject *__pyx_n_s_get;
static PyObject *__pyx_n_s_getCachedContext;
static PyObject *__pyx_n_s_getOrAdd;
static PyObject *__pyx_n_s_getOrAdd_locals_genexpr;
static PyObject *__pyx_n_s_getParent;
static PyObject *__pyx_n_s_getPredicates;
static PyObject *__pyx_n_s_getPredicates_locals_genexpr;
static PyObject *__pyx_n_s_getReturnState;
static PyObject *__pyx_n_s_getStates;
static PyObject *__pyx_n_s_getStates_locals_genexpr;
static PyObject *__pyx_n_s_getstate;
static PyObject *__pyx_n_s_getvalue;
static PyObject *__pyx_n_s_h;
static PyObject *__pyx_n_s_hasEmptyPath;
static PyObject *__pyx_n_s_hasSemanticContext;
static PyObject *__pyx_kp_u_hasSemanticContext_2;
static PyObject *__pyx_n_s_hashCodeForConfigSet;
static PyObject *__pyx_n_s_hashConfigs;
static PyObject *__pyx_n_s_hashConfigs_locals_lambda;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_init;
static PyObject *__pyx_n_s_initialContext;
static PyObject *__pyx_n_s_input;
static PyObject *__pyx_n_u_int;
static PyObject *__pyx_n_s_interpreter;
static PyObject *__pyx_n_s_io;
static PyObject *__pyx_n_s_isEmpty;
static PyObject *__pyx_n_s_iter;
static PyObject *__pyx_n_s_l;
static PyObject *__pyx_n_s_lexerActionExecutor;
static PyObject *__pyx_n_s_lexerActions;
static PyObject *__pyx_n_u_list;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_matches;
static PyObject *__pyx_n_s_merge;
static PyObject *__pyx_n_s_mergeCache;
static PyObject *__pyx_n_s_merged;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_new;
static PyObject *__pyx_n_s_nonGreedy;
static PyObject *__pyx_kp_u_not_LexerATNConfig___subclasses;
static PyObject *__pyx_kp_u_not_RuleStopState___subclasses;
static PyObject *__pyx_n_s_omnibus__ext_cy_antlr;
static PyObject *__pyx_kp_s_omnibus__ext_cy_antlr_pyx;
static PyObject *__pyx_n_s_optimizeConfigs;
static PyObject *__pyx_n_s_other;
static PyObject *__pyx_n_s_p;
static PyObject *__pyx_n_s_passedThroughNonGreedyDecision;
static PyObject *__pyx_n_s_pickle;
static PyObject *__pyx_n_s_precedenceFilterSuppressed;
static PyObject *__pyx_n_s_predIndex;
static PyObject *__pyx_n_s_pyx_PickleError;
static PyObject *__pyx_n_s_pyx_checksum;
static PyObject *__pyx_n_s_pyx_result;
static PyObject *__pyx_n_s_pyx_state;
static PyObject *__pyx_n_s_pyx_type;
static PyObject *__pyx_n_s_pyx_unpickle_CyATNConfig;
static PyObject *__pyx_n_s_pyx_unpickle_CyATNConfigSet;
static PyObject *__pyx_n_s_pyx_unpickle_CyLexerATNConfig;
static PyObject *__pyx_n_s_pyx_unpickle_CyOrderedATNConfi;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_r;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_reachesIntoOuterContext;
static PyObject *__pyx_n_s_readonly;
static PyObject *__pyx_n_s_reduce;
static PyObject *__pyx_n_s_reduce_2;
static PyObject *__pyx_n_s_reduce_cython;
static PyObject *__pyx_n_s_reduce_ex;
static PyObject *__pyx_n_s_rootIsWildcard;
static PyObject *__pyx_n_s_ruleIndex;
static PyObject *__pyx_n_s_self;
static PyObject *__pyx_n_s_semantic;
static PyObject *__pyx_n_s_semanticContext;
static PyObject *__pyx_n_s_send;
static PyObject *__pyx_n_s_serializationType;
static PyObject *__pyx_n_s_setReadonly;
static PyObject *__pyx_n_s_setstate;
static PyObject *__pyx_n_s_setstate_cython;
static PyObject *__pyx_n_s_source;
static PyObject *__pyx_n_s_speculative;
static PyObject *__pyx_n_s_state;
static PyObject *__pyx_n_s_stateNumber;
static PyObject *__pyx_n_s_states;
static PyObject *__pyx_n_s_str_list;
static PyObject *__pyx_kp_s_stringsource;
static PyObject *__pyx_n_s_super;
static PyObject *__pyx_n_s_target;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_throw;
static PyObject *__pyx_n_s_transitions;
static PyObject *__pyx_n_s_treatEofAsEpsilon;
static PyObject *__pyx_n_s_uniqueAlt;
static PyObject *__pyx_kp_u_uniqueAlt_2;
static PyObject *__pyx_kp_u_up;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_use_setstate;
static PyObject *__pyx_n_s_vendor_antlr4;
static PyObject *__pyx_n_s_vendor_antlr4_PredictionContext;
static PyObject *__pyx_n_s_vendor_antlr4_Utils;
static PyObject *__pyx_n_s_vendor_antlr4_atn_ATN;
static PyObject *__pyx_n_s_vendor_antlr4_atn_ATNConfig;
static PyObject *__pyx_n_s_vendor_antlr4_atn_ATNConfigSet;
static PyObject *__pyx_n_s_vendor_antlr4_atn_ATNSimulator;
static PyObject *__pyx_n_s_vendor_antlr4_atn_ATNState;
static PyObject *__pyx_n_s_vendor_antlr4_atn_LexerActionEx;
static PyObject *__pyx_n_s_vendor_antlr4_atn_SemanticConte;
static PyObject *__pyx_n_s_vendor_antlr4_atn_Transition;
static PyObject *__pyx_n_s_vendor_antlr4_error_Errors;
static PyObject *__pyx_n_s_write;
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_LexerATNSimulator__computeStartState(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_input, PyObject *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_2LexerATNSimulator__closure(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_input, PyObject *__pyx_v_config, PyObject *__pyx_v_configs, bool __pyx_v_currentAltReachedAcceptState, bool __pyx_v_speculative, bool __pyx_v_treatEofAsEpsilon); /* proto */
static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig___init__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self, PyObject *__pyx_v_state, PyObject *__pyx_v_alt, PyObject *__pyx_v_context, PyObject *__pyx_v_semantic, PyObject *__pyx_v_config); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_2__eq__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static Py_hash_t __pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_4__hash__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_6hashCodeForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_8equalsForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_10__str__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_12__reduce_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_14__setstate_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig___init__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v_state, PyObject *__pyx_v_alt, PyObject *__pyx_v_context, PyObject *__pyx_v_semantic, PyObject *__pyx_v_lexerActionExecutor, PyObject *__pyx_v_config); /* proto */
static Py_hash_t __pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_2__hash__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_4__eq__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_6hashCodeForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_8equalsForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_10checkNonGreedyDecision(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v_source, PyObject *__pyx_v_target); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_12__reduce_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_14__setstate_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet___init__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, bool __pyx_v_fullCtx); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_2__iter__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_4add(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_config, PyObject *__pyx_v_mergeCache); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_8getOrAdd_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_6getOrAdd(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_config); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_9getStates_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_8getStates(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_13getPredicates_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_10getPredicates(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_12get(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_14optimizeConfigs(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_interpreter); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_16addAll(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_coll); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18__eq__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static Py_hash_t __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_20__hash__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self); /* proto */
static PyObject *__pyx_lambda_funcdef_lambda3(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_h, PyObject *__pyx_v_cfg); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_22hashConfigs(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self); /* proto */
static Py_ssize_t __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_24__len__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_26isEmpty(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self); /* proto */
static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_28__contains__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_config); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_30clear(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_32setReadonly(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, bool __pyx_v_readonly); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_34__str__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext___get__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self); /* proto */
static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_2__set__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_4__del__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_36__reduce_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_38__setstate_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet___init__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_2__reduce_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_4__setstate_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_4__pyx_unpickle_CyATNConfig(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_6__pyx_unpickle_CyLexerATNConfig(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_8__pyx_unpickle_CyATNConfigSet(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_10__pyx_unpickle_CyOrderedATNConfigSet(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyATNConfig(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_5;
static PyObject *__pyx_int_6;
static PyObject *__pyx_int_7;
static PyObject *__pyx_int_10;
static PyObject *__pyx_int_29681709;
static PyObject *__pyx_int_87023425;
static PyObject *__pyx_int_90065512;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_k__7;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__40;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__54;
static PyObject *__pyx_tuple__56;
static PyObject *__pyx_tuple__58;
static PyObject *__pyx_tuple__60;
static PyObject *__pyx_tuple__62;
static PyObject *__pyx_tuple__64;
static PyObject *__pyx_tuple__66;
static PyObject *__pyx_tuple__68;
static PyObject *__pyx_codeobj__11;
static PyObject *__pyx_codeobj__13;
static PyObject *__pyx_codeobj__15;
static PyObject *__pyx_codeobj__17;
static PyObject *__pyx_codeobj__19;
static PyObject *__pyx_codeobj__21;
static PyObject *__pyx_codeobj__23;
static PyObject *__pyx_codeobj__25;
static PyObject *__pyx_codeobj__27;
static PyObject *__pyx_codeobj__29;
static PyObject *__pyx_codeobj__31;
static PyObject *__pyx_codeobj__33;
static PyObject *__pyx_codeobj__35;
static PyObject *__pyx_codeobj__37;
static PyObject *__pyx_codeobj__39;
static PyObject *__pyx_codeobj__41;
static PyObject *__pyx_codeobj__43;
static PyObject *__pyx_codeobj__45;
static PyObject *__pyx_codeobj__47;
static PyObject *__pyx_codeobj__49;
static PyObject *__pyx_codeobj__51;
static PyObject *__pyx_codeobj__53;
static PyObject *__pyx_codeobj__55;
static PyObject *__pyx_codeobj__57;
static PyObject *__pyx_codeobj__59;
static PyObject *__pyx_codeobj__61;
static PyObject *__pyx_codeobj__63;
static PyObject *__pyx_codeobj__65;
static PyObject *__pyx_codeobj__67;
static PyObject *__pyx_codeobj__69;
/* Late includes */

/* "omnibus/_ext/cy/antlr.pyx":60
 * 
 * 
 * def LexerATNSimulator__computeStartState(self, input: InputStream, p: ATNState):             # <<<<<<<<<<<<<<
 *     initialContext = PredictionContext.EMPTY
 *     configs = CyATNConfigSet()
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_1LexerATNSimulator__computeStartState(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_LexerATNSimulator__computeStartState[] = "LexerATNSimulator__computeStartState(self, input: InputStream, p: ATNState)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_1LexerATNSimulator__computeStartState = {"LexerATNSimulator__computeStartState", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7omnibus_4_ext_2cy_5antlr_1LexerATNSimulator__computeStartState, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_LexerATNSimulator__computeStartState};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_1LexerATNSimulator__computeStartState(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_input = 0;
  PyObject *__pyx_v_p = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LexerATNSimulator__computeStartState (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_input,&__pyx_n_s_p,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_input)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("LexerATNSimulator__computeStartState", 1, 3, 3, 1); __PYX_ERR(0, 60, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("LexerATNSimulator__computeStartState", 1, 3, 3, 2); __PYX_ERR(0, 60, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "LexerATNSimulator__computeStartState") < 0)) __PYX_ERR(0, 60, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_self = values[0];
    __pyx_v_input = values[1];
    __pyx_v_p = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LexerATNSimulator__computeStartState", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 60, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.LexerATNSimulator__computeStartState", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_LexerATNSimulator__computeStartState(__pyx_self, __pyx_v_self, __pyx_v_input, __pyx_v_p);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_LexerATNSimulator__computeStartState(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_input, PyObject *__pyx_v_p) {
  PyObject *__pyx_v_initialContext = NULL;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_configs = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_target = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LexerATNSimulator__computeStartState", 0);

  /* "omnibus/_ext/cy/antlr.pyx":61
 * 
 * def LexerATNSimulator__computeStartState(self, input: InputStream, p: ATNState):
 *     initialContext = PredictionContext.EMPTY             # <<<<<<<<<<<<<<
 *     configs = CyATNConfigSet()
 *     for i in range(0,len(p.transitions)):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_PredictionContext); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_EMPTY); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_initialContext = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":62
 * def LexerATNSimulator__computeStartState(self, input: InputStream, p: ATNState):
 *     initialContext = PredictionContext.EMPTY
 *     configs = CyATNConfigSet()             # <<<<<<<<<<<<<<
 *     for i in range(0,len(p.transitions)):
 *         target = p.transitions[i].target
 */
  __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_configs = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":63
 *     initialContext = PredictionContext.EMPTY
 *     configs = CyATNConfigSet()
 *     for i in range(0,len(p.transitions)):             # <<<<<<<<<<<<<<
 *         target = p.transitions[i].target
 *         c = LexerATNConfig(state=target, alt=i+1, context=initialContext)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_p, __pyx_n_s_transitions); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 63, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 63, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 63, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 63, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 63, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 63, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_4(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 63, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "omnibus/_ext/cy/antlr.pyx":64
 *     configs = CyATNConfigSet()
 *     for i in range(0,len(p.transitions)):
 *         target = p.transitions[i].target             # <<<<<<<<<<<<<<
 *         c = LexerATNConfig(state=target, alt=i+1, context=initialContext)
 *         LexerATNSimulator__closure(self, input, c, configs, False, False, False)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_p, __pyx_n_s_transitions); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 64, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_v_i); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 64, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_target); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 64, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_target, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "omnibus/_ext/cy/antlr.pyx":65
 *     for i in range(0,len(p.transitions)):
 *         target = p.transitions[i].target
 *         c = LexerATNConfig(state=target, alt=i+1, context=initialContext)             # <<<<<<<<<<<<<<
 *         LexerATNSimulator__closure(self, input, c, configs, False, False, False)
 *     return configs
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_LexerATNConfig); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 65, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 65, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_state, __pyx_v_target) < 0) __PYX_ERR(0, 65, __pyx_L1_error)
    __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_v_i, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 65, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_alt, __pyx_t_6) < 0) __PYX_ERR(0, 65, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_context, __pyx_v_initialContext) < 0) __PYX_ERR(0, 65, __pyx_L1_error)
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 65, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "omnibus/_ext/cy/antlr.pyx":66
 *         target = p.transitions[i].target
 *         c = LexerATNConfig(state=target, alt=i+1, context=initialContext)
 *         LexerATNSimulator__closure(self, input, c, configs, False, False, False)             # <<<<<<<<<<<<<<
 *     return configs
 * 
 */
    (void)(__pyx_f_7omnibus_4_ext_2cy_5antlr_LexerATNSimulator__closure(__pyx_v_self, __pyx_v_input, __pyx_v_c, ((PyObject *)__pyx_v_configs), 0, 0, 0, 0));

    /* "omnibus/_ext/cy/antlr.pyx":63
 *     initialContext = PredictionContext.EMPTY
 *     configs = CyATNConfigSet()
 *     for i in range(0,len(p.transitions)):             # <<<<<<<<<<<<<<
 *         target = p.transitions[i].target
 *         c = LexerATNConfig(state=target, alt=i+1, context=initialContext)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":67
 *         c = LexerATNConfig(state=target, alt=i+1, context=initialContext)
 *         LexerATNSimulator__closure(self, input, c, configs, False, False, False)
 *     return configs             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_configs));
  __pyx_r = ((PyObject *)__pyx_v_configs);
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":60
 * 
 * 
 * def LexerATNSimulator__computeStartState(self, input: InputStream, p: ATNState):             # <<<<<<<<<<<<<<
 *     initialContext = PredictionContext.EMPTY
 *     configs = CyATNConfigSet()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.LexerATNSimulator__computeStartState", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_initialContext);
  __Pyx_XDECREF((PyObject *)__pyx_v_configs);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_target);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":70
 * 
 * 
 * cpdef bool LexerATNSimulator__closure(             # <<<<<<<<<<<<<<
 *         self: LexerATNSimulator,
 *         input: InputStream,
 */

static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_3LexerATNSimulator__closure(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static bool __pyx_f_7omnibus_4_ext_2cy_5antlr_LexerATNSimulator__closure(PyObject *__pyx_v_self, PyObject *__pyx_v_input, PyObject *__pyx_v_config, PyObject *__pyx_v_configs, bool __pyx_v_currentAltReachedAcceptState, bool __pyx_v_speculative, bool __pyx_v_treatEofAsEpsilon, CYTHON_UNUSED int __pyx_skip_dispatch) {
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_newContext = NULL;
  PyObject *__pyx_v_returnState = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_v_t = NULL;
  PyObject *__pyx_v_lexerActionExecutor = NULL;
  bool __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  PyObject *(*__pyx_t_13)(PyObject *);
  int __pyx_t_14;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LexerATNSimulator__closure", 0);

  /* "omnibus/_ext/cy/antlr.pyx":79
 *         treatEofAsEpsilon: bool
 * ):
 *     if config.state.__class__ is RuleStopState:             # <<<<<<<<<<<<<<
 *         if config.context is None or config.context.hasEmptyPath():
 *             if config.context is None or config.context.isEmpty():
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_state); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_class); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_RuleStopState); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__pyx_t_2 == __pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "omnibus/_ext/cy/antlr.pyx":80
 * ):
 *     if config.state.__class__ is RuleStopState:
 *         if config.context is None or config.context.hasEmptyPath():             # <<<<<<<<<<<<<<
 *             if config.context is None or config.context.isEmpty():
 *                 configs.add(config)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 80, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = (__pyx_t_1 == Py_None);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_5 = (__pyx_t_3 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_4 = __pyx_t_5;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 80, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_hasEmptyPath); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 80, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 80, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 80, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_4 = __pyx_t_5;
    __pyx_L5_bool_binop_done:;
    if (__pyx_t_4) {

      /* "omnibus/_ext/cy/antlr.pyx":81
 *     if config.state.__class__ is RuleStopState:
 *         if config.context is None or config.context.hasEmptyPath():
 *             if config.context is None or config.context.isEmpty():             # <<<<<<<<<<<<<<
 *                 configs.add(config)
 *                 return True
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 81, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = (__pyx_t_1 == Py_None);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_3 = (__pyx_t_5 != 0);
      if (!__pyx_t_3) {
      } else {
        __pyx_t_4 = __pyx_t_3;
        goto __pyx_L8_bool_binop_done;
      }
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 81, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_isEmpty); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 81, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 81, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 81, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_4 = __pyx_t_3;
      __pyx_L8_bool_binop_done:;
      if (__pyx_t_4) {

        /* "omnibus/_ext/cy/antlr.pyx":82
 *         if config.context is None or config.context.hasEmptyPath():
 *             if config.context is None or config.context.isEmpty():
 *                 configs.add(config)             # <<<<<<<<<<<<<<
 *                 return True
 * 
 */
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_configs, __pyx_n_s_add); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 82, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
          }
        }
        __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_v_config) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_config);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 82, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "omnibus/_ext/cy/antlr.pyx":83
 *             if config.context is None or config.context.isEmpty():
 *                 configs.add(config)
 *                 return True             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_r = 1;
        goto __pyx_L0;

        /* "omnibus/_ext/cy/antlr.pyx":81
 *     if config.state.__class__ is RuleStopState:
 *         if config.context is None or config.context.hasEmptyPath():
 *             if config.context is None or config.context.isEmpty():             # <<<<<<<<<<<<<<
 *                 configs.add(config)
 *                 return True
 */
      }

      /* "omnibus/_ext/cy/antlr.pyx":86
 * 
 *             else:
 *                 configs.add(LexerATNConfig(             # <<<<<<<<<<<<<<
 *                     state=config.state,
 *                     config=config,
 */
      /*else*/ {
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_configs, __pyx_n_s_add); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 86, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_LexerATNConfig); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 86, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);

        /* "omnibus/_ext/cy/antlr.pyx":87
 *             else:
 *                 configs.add(LexerATNConfig(
 *                     state=config.state,             # <<<<<<<<<<<<<<
 *                     config=config,
 *                     context=PredictionContext.EMPTY,
 */
        __pyx_t_7 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 87, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_state); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 87, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_state, __pyx_t_8) < 0) __PYX_ERR(0, 87, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

        /* "omnibus/_ext/cy/antlr.pyx":88
 *                 configs.add(LexerATNConfig(
 *                     state=config.state,
 *                     config=config,             # <<<<<<<<<<<<<<
 *                     context=PredictionContext.EMPTY,
 *                 ))
 */
        if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_config, __pyx_v_config) < 0) __PYX_ERR(0, 87, __pyx_L1_error)

        /* "omnibus/_ext/cy/antlr.pyx":89
 *                     state=config.state,
 *                     config=config,
 *                     context=PredictionContext.EMPTY,             # <<<<<<<<<<<<<<
 *                 ))
 *                 currentAltReachedAcceptState = True
 */
        __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_PredictionContext); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 89, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_EMPTY); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 89, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_context, __pyx_t_9) < 0) __PYX_ERR(0, 87, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "omnibus/_ext/cy/antlr.pyx":86
 * 
 *             else:
 *                 configs.add(LexerATNConfig(             # <<<<<<<<<<<<<<
 *                     state=config.state,
 *                     config=config,
 */
        __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_empty_tuple, __pyx_t_7); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 86, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
          }
        }
        __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_9);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 86, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "omnibus/_ext/cy/antlr.pyx":91
 *                     context=PredictionContext.EMPTY,
 *                 ))
 *                 currentAltReachedAcceptState = True             # <<<<<<<<<<<<<<
 * 
 *         if config.context is not None and not config.context.isEmpty():
 */
        __pyx_v_currentAltReachedAcceptState = 1;
      }

      /* "omnibus/_ext/cy/antlr.pyx":80
 * ):
 *     if config.state.__class__ is RuleStopState:
 *         if config.context is None or config.context.hasEmptyPath():             # <<<<<<<<<<<<<<
 *             if config.context is None or config.context.isEmpty():
 *                 configs.add(config)
 */
    }

    /* "omnibus/_ext/cy/antlr.pyx":93
 *                 currentAltReachedAcceptState = True
 * 
 *         if config.context is not None and not config.context.isEmpty():             # <<<<<<<<<<<<<<
 *             for i in range(0, len(config.context)):
 *                 if config.context.getReturnState(i) != PredictionContext.EMPTY_RETURN_STATE:
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 93, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = (__pyx_t_1 != Py_None);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_5 = (__pyx_t_3 != 0);
    if (__pyx_t_5) {
    } else {
      __pyx_t_4 = __pyx_t_5;
      goto __pyx_L11_bool_binop_done;
    }
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 93, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_isEmpty); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 93, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_9);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 93, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 93, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = ((!__pyx_t_5) != 0);
    __pyx_t_4 = __pyx_t_3;
    __pyx_L11_bool_binop_done:;
    if (__pyx_t_4) {

      /* "omnibus/_ext/cy/antlr.pyx":94
 * 
 *         if config.context is not None and not config.context.isEmpty():
 *             for i in range(0, len(config.context)):             # <<<<<<<<<<<<<<
 *                 if config.context.getReturnState(i) != PredictionContext.EMPTY_RETURN_STATE:
 *                     newContext = config.context.getParent(i)  # "pop" return state
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 94, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_10 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_10 == ((Py_ssize_t)-1))) __PYX_ERR(0, 94, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_11 = __pyx_t_10;
      for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
        __pyx_v_i = __pyx_t_12;

        /* "omnibus/_ext/cy/antlr.pyx":95
 *         if config.context is not None and not config.context.isEmpty():
 *             for i in range(0, len(config.context)):
 *                 if config.context.getReturnState(i) != PredictionContext.EMPTY_RETURN_STATE:             # <<<<<<<<<<<<<<
 *                     newContext = config.context.getParent(i)  # "pop" return state
 *                     returnState = self.atn.states[config.context.getReturnState(i)]
 */
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 95, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_getReturnState); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 95, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyInt_FromSsize_t(__pyx_v_i); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 95, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_7 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
          }
        }
        __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_9);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 95, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_PredictionContext); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 95, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_EMPTY_RETURN_STATE); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 95, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_t_9, Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 95, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 95, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (__pyx_t_4) {

          /* "omnibus/_ext/cy/antlr.pyx":96
 *             for i in range(0, len(config.context)):
 *                 if config.context.getReturnState(i) != PredictionContext.EMPTY_RETURN_STATE:
 *                     newContext = config.context.getParent(i)  # "pop" return state             # <<<<<<<<<<<<<<
 *                     returnState = self.atn.states[config.context.getReturnState(i)]
 * 
 */
          __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 96, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_getParent); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 96, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __pyx_t_9 = PyInt_FromSsize_t(__pyx_v_i); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 96, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_7, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_9);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 96, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF_SET(__pyx_v_newContext, __pyx_t_2);
          __pyx_t_2 = 0;

          /* "omnibus/_ext/cy/antlr.pyx":97
 *                 if config.context.getReturnState(i) != PredictionContext.EMPTY_RETURN_STATE:
 *                     newContext = config.context.getParent(i)  # "pop" return state
 *                     returnState = self.atn.states[config.context.getReturnState(i)]             # <<<<<<<<<<<<<<
 * 
 *                     c = LexerATNConfig(
 */
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_atn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 97, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_states); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 97, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 97, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_getReturnState); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 97, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __pyx_t_9 = PyInt_FromSsize_t(__pyx_v_i); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 97, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_9);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 97, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 97, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF_SET(__pyx_v_returnState, __pyx_t_7);
          __pyx_t_7 = 0;

          /* "omnibus/_ext/cy/antlr.pyx":99
 *                     returnState = self.atn.states[config.context.getReturnState(i)]
 * 
 *                     c = LexerATNConfig(             # <<<<<<<<<<<<<<
 *                         state=returnState,
 *                         config=config,
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_LexerATNConfig); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 99, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);

          /* "omnibus/_ext/cy/antlr.pyx":100
 * 
 *                     c = LexerATNConfig(
 *                         state=returnState,             # <<<<<<<<<<<<<<
 *                         config=config,
 *                         context=newContext,
 */
          __pyx_t_2 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 100, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_state, __pyx_v_returnState) < 0) __PYX_ERR(0, 100, __pyx_L1_error)

          /* "omnibus/_ext/cy/antlr.pyx":101
 *                     c = LexerATNConfig(
 *                         state=returnState,
 *                         config=config,             # <<<<<<<<<<<<<<
 *                         context=newContext,
 *                     )
 */
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_config, __pyx_v_config) < 0) __PYX_ERR(0, 100, __pyx_L1_error)

          /* "omnibus/_ext/cy/antlr.pyx":102
 *                         state=returnState,
 *                         config=config,
 *                         context=newContext,             # <<<<<<<<<<<<<<
 *                     )
 * 
 */
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_context, __pyx_v_newContext) < 0) __PYX_ERR(0, 100, __pyx_L1_error)

          /* "omnibus/_ext/cy/antlr.pyx":99
 *                     returnState = self.atn.states[config.context.getReturnState(i)]
 * 
 *                     c = LexerATNConfig(             # <<<<<<<<<<<<<<
 *                         state=returnState,
 *                         config=config,
 */
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 99, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_1);
          __pyx_t_1 = 0;

          /* "omnibus/_ext/cy/antlr.pyx":105
 *                     )
 * 
 *                     currentAltReachedAcceptState = LexerATNSimulator__closure(             # <<<<<<<<<<<<<<
 *                         self,
 *                         input,
 */
          __pyx_v_currentAltReachedAcceptState = __pyx_f_7omnibus_4_ext_2cy_5antlr_LexerATNSimulator__closure(__pyx_v_self, __pyx_v_input, __pyx_v_c, __pyx_v_configs, __pyx_v_currentAltReachedAcceptState, __pyx_v_speculative, __pyx_v_treatEofAsEpsilon, 0);

          /* "omnibus/_ext/cy/antlr.pyx":95
 *         if config.context is not None and not config.context.isEmpty():
 *             for i in range(0, len(config.context)):
 *                 if config.context.getReturnState(i) != PredictionContext.EMPTY_RETURN_STATE:             # <<<<<<<<<<<<<<
 *                     newContext = config.context.getParent(i)  # "pop" return state
 *                     returnState = self.atn.states[config.context.getReturnState(i)]
 */
        }
      }

      /* "omnibus/_ext/cy/antlr.pyx":93
 *                 currentAltReachedAcceptState = True
 * 
 *         if config.context is not None and not config.context.isEmpty():             # <<<<<<<<<<<<<<
 *             for i in range(0, len(config.context)):
 *                 if config.context.getReturnState(i) != PredictionContext.EMPTY_RETURN_STATE:
 */
    }

    /* "omnibus/_ext/cy/antlr.pyx":115
 *                     )
 * 
 *         return currentAltReachedAcceptState             # <<<<<<<<<<<<<<
 * 
 *     # optimization
 */
    __pyx_r = __pyx_v_currentAltReachedAcceptState;
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":79
 *         treatEofAsEpsilon: bool
 * ):
 *     if config.state.__class__ is RuleStopState:             # <<<<<<<<<<<<<<
 *         if config.context is None or config.context.hasEmptyPath():
 *             if config.context is None or config.context.isEmpty():
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":118
 * 
 *     # optimization
 *     if not config.state.epsilonOnlyTransitions:             # <<<<<<<<<<<<<<
 *         if not currentAltReachedAcceptState or not config.passedThroughNonGreedyDecision:
 *             configs.add(config)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_state); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_epsilonOnlyTransitions); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = ((!__pyx_t_4) != 0);
  if (__pyx_t_3) {

    /* "omnibus/_ext/cy/antlr.pyx":119
 *     # optimization
 *     if not config.state.epsilonOnlyTransitions:
 *         if not currentAltReachedAcceptState or not config.passedThroughNonGreedyDecision:             # <<<<<<<<<<<<<<
 *             configs.add(config)
 * 
 */
    __pyx_t_4 = ((!(__pyx_v_currentAltReachedAcceptState != 0)) != 0);
    if (!__pyx_t_4) {
    } else {
      __pyx_t_3 = __pyx_t_4;
      goto __pyx_L18_bool_binop_done;
    }
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_passedThroughNonGreedyDecision); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 119, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 119, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_5 = ((!__pyx_t_4) != 0);
    __pyx_t_3 = __pyx_t_5;
    __pyx_L18_bool_binop_done:;
    if (__pyx_t_3) {

      /* "omnibus/_ext/cy/antlr.pyx":120
 *     if not config.state.epsilonOnlyTransitions:
 *         if not currentAltReachedAcceptState or not config.passedThroughNonGreedyDecision:
 *             configs.add(config)             # <<<<<<<<<<<<<<
 * 
 *     for t in config.state.transitions:
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_configs, __pyx_n_s_add); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 120, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_1, function);
        }
      }
      __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_7, __pyx_v_config) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_config);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 120, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "omnibus/_ext/cy/antlr.pyx":119
 *     # optimization
 *     if not config.state.epsilonOnlyTransitions:
 *         if not currentAltReachedAcceptState or not config.passedThroughNonGreedyDecision:             # <<<<<<<<<<<<<<
 *             configs.add(config)
 * 
 */
    }

    /* "omnibus/_ext/cy/antlr.pyx":118
 * 
 *     # optimization
 *     if not config.state.epsilonOnlyTransitions:             # <<<<<<<<<<<<<<
 *         if not currentAltReachedAcceptState or not config.passedThroughNonGreedyDecision:
 *             configs.add(config)
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":122
 *             configs.add(config)
 * 
 *     for t in config.state.transitions:             # <<<<<<<<<<<<<<
 *         c = None
 *         if t.serializationType == Transition__RULE:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_state); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_transitions); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_10 = 0;
    __pyx_t_13 = NULL;
  } else {
    __pyx_t_10 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_13 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 122, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_13)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_10); __Pyx_INCREF(__pyx_t_1); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 122, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_10); __Pyx_INCREF(__pyx_t_1); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 122, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_13(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 122, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "omnibus/_ext/cy/antlr.pyx":123
 * 
 *     for t in config.state.transitions:
 *         c = None             # <<<<<<<<<<<<<<
 *         if t.serializationType == Transition__RULE:
 *             newContext = SingletonPredictionContext.create(config.context, t.followState.stateNumber)
 */
    __Pyx_INCREF(Py_None);
    __Pyx_XDECREF_SET(__pyx_v_c, Py_None);

    /* "omnibus/_ext/cy/antlr.pyx":124
 *     for t in config.state.transitions:
 *         c = None
 *         if t.serializationType == Transition__RULE:             # <<<<<<<<<<<<<<
 *             newContext = SingletonPredictionContext.create(config.context, t.followState.stateNumber)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_serializationType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 124, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_3, 3, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 124, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 124, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (__pyx_t_3) {

      /* "omnibus/_ext/cy/antlr.pyx":125
 *         c = None
 *         if t.serializationType == Transition__RULE:
 *             newContext = SingletonPredictionContext.create(config.context, t.followState.stateNumber)             # <<<<<<<<<<<<<<
 * 
 *             c = LexerATNConfig(
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_SingletonPredictionContext); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 125, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_create); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 125, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 125, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_followState); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 125, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_stateNumber); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 125, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      __pyx_t_14 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
          __pyx_t_14 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_9)) {
        PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_1, __pyx_t_8};
        __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 125, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
        PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_1, __pyx_t_8};
        __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 125, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      } else
      #endif
      {
        __pyx_t_15 = PyTuple_New(2+__pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 125, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        if (__pyx_t_6) {
          __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_6); __pyx_t_6 = NULL;
        }
        __Pyx_GIVEREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_15, 0+__pyx_t_14, __pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_8);
        PyTuple_SET_ITEM(__pyx_t_15, 1+__pyx_t_14, __pyx_t_8);
        __pyx_t_1 = 0;
        __pyx_t_8 = 0;
        __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_15, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 125, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_XDECREF_SET(__pyx_v_newContext, __pyx_t_7);
      __pyx_t_7 = 0;

      /* "omnibus/_ext/cy/antlr.pyx":127
 *             newContext = SingletonPredictionContext.create(config.context, t.followState.stateNumber)
 * 
 *             c = LexerATNConfig(             # <<<<<<<<<<<<<<
 *                 state=t.target,
 *                 config=config,
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_LexerATNConfig); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 127, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);

      /* "omnibus/_ext/cy/antlr.pyx":128
 * 
 *             c = LexerATNConfig(
 *                 state=t.target,             # <<<<<<<<<<<<<<
 *                 config=config,
 *                 context=newContext,
 */
      __pyx_t_9 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 128, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_target); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 128, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_state, __pyx_t_15) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

      /* "omnibus/_ext/cy/antlr.pyx":129
 *             c = LexerATNConfig(
 *                 state=t.target,
 *                 config=config,             # <<<<<<<<<<<<<<
 *                 context=newContext,
 *             )
 */
      if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_config, __pyx_v_config) < 0) __PYX_ERR(0, 128, __pyx_L1_error)

      /* "omnibus/_ext/cy/antlr.pyx":130
 *                 state=t.target,
 *                 config=config,
 *                 context=newContext,             # <<<<<<<<<<<<<<
 *             )
 * 
 */
      if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_context, __pyx_v_newContext) < 0) __PYX_ERR(0, 128, __pyx_L1_error)

      /* "omnibus/_ext/cy/antlr.pyx":127
 *             newContext = SingletonPredictionContext.create(config.context, t.followState.stateNumber)
 * 
 *             c = LexerATNConfig(             # <<<<<<<<<<<<<<
 *                 state=t.target,
 *                 config=config,
 */
      __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_empty_tuple, __pyx_t_9); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 127, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF_SET(__pyx_v_c, __pyx_t_15);
      __pyx_t_15 = 0;

      /* "omnibus/_ext/cy/antlr.pyx":124
 *     for t in config.state.transitions:
 *         c = None
 *         if t.serializationType == Transition__RULE:             # <<<<<<<<<<<<<<
 *             newContext = SingletonPredictionContext.create(config.context, t.followState.stateNumber)
 * 
 */
      goto __pyx_L22;
    }

    /* "omnibus/_ext/cy/antlr.pyx":133
 *             )
 * 
 *         elif t.serializationType == Transition__PRECEDENCE:             # <<<<<<<<<<<<<<
 *             raise UnsupportedOperationException("Precedence predicates are not supported in lexers.")
 * 
 */
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_serializationType); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __pyx_t_9 = __Pyx_PyInt_EqObjC(__pyx_t_15, __pyx_int_10, 10, 0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 133, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(__pyx_t_3)) {

      /* "omnibus/_ext/cy/antlr.pyx":134
 * 
 *         elif t.serializationType == Transition__PRECEDENCE:
 *             raise UnsupportedOperationException("Precedence predicates are not supported in lexers.")             # <<<<<<<<<<<<<<
 * 
 *         elif t.serializationType == Transition__PREDICATE:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_UnsupportedOperationException); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 134, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_15))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_15);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_15, function);
        }
      }
      __pyx_t_9 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_15, __pyx_t_7, __pyx_kp_u_Precedence_predicates_are_not_su) : __Pyx_PyObject_CallOneArg(__pyx_t_15, __pyx_kp_u_Precedence_predicates_are_not_su);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 134, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(0, 134, __pyx_L1_error)

      /* "omnibus/_ext/cy/antlr.pyx":133
 *             )
 * 
 *         elif t.serializationType == Transition__PRECEDENCE:             # <<<<<<<<<<<<<<
 *             raise UnsupportedOperationException("Precedence predicates are not supported in lexers.")
 * 
 */
    }

    /* "omnibus/_ext/cy/antlr.pyx":136
 *             raise UnsupportedOperationException("Precedence predicates are not supported in lexers.")
 * 
 *         elif t.serializationType == Transition__PREDICATE:             # <<<<<<<<<<<<<<
 *             configs.hasSemanticContext = True
 *             if self.evaluatePredicate(input, t.ruleIndex, t.predIndex, speculative):
 */
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_serializationType); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 136, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_15 = __Pyx_PyInt_EqObjC(__pyx_t_9, __pyx_int_4, 4, 0); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 136, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_15); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 136, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    if (__pyx_t_3) {

      /* "omnibus/_ext/cy/antlr.pyx":137
 * 
 *         elif t.serializationType == Transition__PREDICATE:
 *             configs.hasSemanticContext = True             # <<<<<<<<<<<<<<
 *             if self.evaluatePredicate(input, t.ruleIndex, t.predIndex, speculative):
 *                 c = LexerATNConfig(state=t.target, config=config)
 */
      if (__Pyx_PyObject_SetAttrStr(__pyx_v_configs, __pyx_n_s_hasSemanticContext, Py_True) < 0) __PYX_ERR(0, 137, __pyx_L1_error)

      /* "omnibus/_ext/cy/antlr.pyx":138
 *         elif t.serializationType == Transition__PREDICATE:
 *             configs.hasSemanticContext = True
 *             if self.evaluatePredicate(input, t.ruleIndex, t.predIndex, speculative):             # <<<<<<<<<<<<<<
 *                 c = LexerATNConfig(state=t.target, config=config)
 * 
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_evaluatePredicate); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 138, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_ruleIndex); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 138, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_predIndex); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 138, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_speculative); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = NULL;
      __pyx_t_14 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
          __pyx_t_14 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_9)) {
        PyObject *__pyx_temp[5] = {__pyx_t_6, __pyx_v_input, __pyx_t_7, __pyx_t_8, __pyx_t_1};
        __pyx_t_15 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_14, 4+__pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 138, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
        PyObject *__pyx_temp[5] = {__pyx_t_6, __pyx_v_input, __pyx_t_7, __pyx_t_8, __pyx_t_1};
        __pyx_t_15 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_14, 4+__pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 138, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      } else
      #endif
      {
        __pyx_t_16 = PyTuple_New(4+__pyx_t_14); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 138, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        if (__pyx_t_6) {
          __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_t_6); __pyx_t_6 = NULL;
        }
        __Pyx_INCREF(__pyx_v_input);
        __Pyx_GIVEREF(__pyx_v_input);
        PyTuple_SET_ITEM(__pyx_t_16, 0+__pyx_t_14, __pyx_v_input);
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_16, 1+__pyx_t_14, __pyx_t_7);
        __Pyx_GIVEREF(__pyx_t_8);
        PyTuple_SET_ITEM(__pyx_t_16, 2+__pyx_t_14, __pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_16, 3+__pyx_t_14, __pyx_t_1);
        __pyx_t_7 = 0;
        __pyx_t_8 = 0;
        __pyx_t_1 = 0;
        __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_16, NULL); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 138, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_15); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 138, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      if (__pyx_t_3) {

        /* "omnibus/_ext/cy/antlr.pyx":139
 *             configs.hasSemanticContext = True
 *             if self.evaluatePredicate(input, t.ruleIndex, t.predIndex, speculative):
 *                 c = LexerATNConfig(state=t.target, config=config)             # <<<<<<<<<<<<<<
 * 
 *         elif t.serializationType == Transition__ACTION:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_LexerATNConfig); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 139, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_9 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 139, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_target); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 139, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_state, __pyx_t_16) < 0) __PYX_ERR(0, 139, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_config, __pyx_v_config) < 0) __PYX_ERR(0, 139, __pyx_L1_error)
        __pyx_t_16 = __Pyx_PyObject_Call(__pyx_t_15, __pyx_empty_tuple, __pyx_t_9); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 139, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF_SET(__pyx_v_c, __pyx_t_16);
        __pyx_t_16 = 0;

        /* "omnibus/_ext/cy/antlr.pyx":138
 *         elif t.serializationType == Transition__PREDICATE:
 *             configs.hasSemanticContext = True
 *             if self.evaluatePredicate(input, t.ruleIndex, t.predIndex, speculative):             # <<<<<<<<<<<<<<
 *                 c = LexerATNConfig(state=t.target, config=config)
 * 
 */
      }

      /* "omnibus/_ext/cy/antlr.pyx":136
 *             raise UnsupportedOperationException("Precedence predicates are not supported in lexers.")
 * 
 *         elif t.serializationType == Transition__PREDICATE:             # <<<<<<<<<<<<<<
 *             configs.hasSemanticContext = True
 *             if self.evaluatePredicate(input, t.ruleIndex, t.predIndex, speculative):
 */
      goto __pyx_L22;
    }

    /* "omnibus/_ext/cy/antlr.pyx":141
 *                 c = LexerATNConfig(state=t.target, config=config)
 * 
 *         elif t.serializationType == Transition__ACTION:             # <<<<<<<<<<<<<<
 *             if config.context is None or config.context.hasEmptyPath():
 *                 lexerActionExecutor = LexerActionExecutor.append(
 */
    __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_serializationType); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __pyx_t_9 = __Pyx_PyInt_EqObjC(__pyx_t_16, __pyx_int_6, 6, 0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 141, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (__pyx_t_3) {

      /* "omnibus/_ext/cy/antlr.pyx":142
 * 
 *         elif t.serializationType == Transition__ACTION:
 *             if config.context is None or config.context.hasEmptyPath():             # <<<<<<<<<<<<<<
 *                 lexerActionExecutor = LexerActionExecutor.append(
 *                     config.lexerActionExecutor,
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 142, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_5 = (__pyx_t_9 == Py_None);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_4 = (__pyx_t_5 != 0);
      if (!__pyx_t_4) {
      } else {
        __pyx_t_3 = __pyx_t_4;
        goto __pyx_L25_bool_binop_done;
      }
      __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 142, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_16, __pyx_n_s_hasEmptyPath); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 142, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      __pyx_t_16 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_15))) {
        __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_15);
        if (likely(__pyx_t_16)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
          __Pyx_INCREF(__pyx_t_16);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_15, function);
        }
      }
      __pyx_t_9 = (__pyx_t_16) ? __Pyx_PyObject_CallOneArg(__pyx_t_15, __pyx_t_16) : __Pyx_PyObject_CallNoArg(__pyx_t_15);
      __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
      if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 142, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 142, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_3 = __pyx_t_4;
      __pyx_L25_bool_binop_done:;
      if (__pyx_t_3) {

        /* "omnibus/_ext/cy/antlr.pyx":143
 *         elif t.serializationType == Transition__ACTION:
 *             if config.context is None or config.context.hasEmptyPath():
 *                 lexerActionExecutor = LexerActionExecutor.append(             # <<<<<<<<<<<<<<
 *                     config.lexerActionExecutor,
 *                     self.atn.lexerActions[t.actionIndex],
 */
        __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_LexerActionExecutor); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 143, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_append); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 143, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

        /* "omnibus/_ext/cy/antlr.pyx":144
 *             if config.context is None or config.context.hasEmptyPath():
 *                 lexerActionExecutor = LexerActionExecutor.append(
 *                     config.lexerActionExecutor,             # <<<<<<<<<<<<<<
 *                     self.atn.lexerActions[t.actionIndex],
 *                 )
 */
        __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_lexerActionExecutor); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 144, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);

        /* "omnibus/_ext/cy/antlr.pyx":145
 *                 lexerActionExecutor = LexerActionExecutor.append(
 *                     config.lexerActionExecutor,
 *                     self.atn.lexerActions[t.actionIndex],             # <<<<<<<<<<<<<<
 *                 )
 * 
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_atn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 145, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_lexerActions); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 145, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_actionIndex); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 145, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_t_8, __pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 145, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = NULL;
        __pyx_t_14 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_16))) {
          __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_16);
          if (likely(__pyx_t_1)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
            __Pyx_INCREF(__pyx_t_1);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_16, function);
            __pyx_t_14 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_16)) {
          PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_t_15, __pyx_t_7};
          __pyx_t_9 = __Pyx_PyFunction_FastCall(__pyx_t_16, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 143, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_16)) {
          PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_t_15, __pyx_t_7};
          __pyx_t_9 = __Pyx_PyCFunction_FastCall(__pyx_t_16, __pyx_temp+1-__pyx_t_14, 2+__pyx_t_14); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 143, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        } else
        #endif
        {
          __pyx_t_8 = PyTuple_New(2+__pyx_t_14); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 143, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          if (__pyx_t_1) {
            __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_1); __pyx_t_1 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_15);
          PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_14, __pyx_t_15);
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_14, __pyx_t_7);
          __pyx_t_15 = 0;
          __pyx_t_7 = 0;
          __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_16, __pyx_t_8, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 143, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_XDECREF_SET(__pyx_v_lexerActionExecutor, __pyx_t_9);
        __pyx_t_9 = 0;

        /* "omnibus/_ext/cy/antlr.pyx":148
 *                 )
 * 
 *                 c = LexerATNConfig(             # <<<<<<<<<<<<<<
 *                     state=t.target,
 *                     config=config,
 */
        __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_LexerATNConfig); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 148, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);

        /* "omnibus/_ext/cy/antlr.pyx":149
 * 
 *                 c = LexerATNConfig(
 *                     state=t.target,             # <<<<<<<<<<<<<<
 *                     config=config,
 *                     lexerActionExecutor=lexerActionExecutor,
 */
        __pyx_t_16 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 149, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_target); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 149, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        if (PyDict_SetItem(__pyx_t_16, __pyx_n_s_state, __pyx_t_8) < 0) __PYX_ERR(0, 149, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

        /* "omnibus/_ext/cy/antlr.pyx":150
 *                 c = LexerATNConfig(
 *                     state=t.target,
 *                     config=config,             # <<<<<<<<<<<<<<
 *                     lexerActionExecutor=lexerActionExecutor,
 *                 )
 */
        if (PyDict_SetItem(__pyx_t_16, __pyx_n_s_config, __pyx_v_config) < 0) __PYX_ERR(0, 149, __pyx_L1_error)

        /* "omnibus/_ext/cy/antlr.pyx":151
 *                     state=t.target,
 *                     config=config,
 *                     lexerActionExecutor=lexerActionExecutor,             # <<<<<<<<<<<<<<
 *                 )
 * 
 */
        if (PyDict_SetItem(__pyx_t_16, __pyx_n_s_lexerActionExecutor, __pyx_v_lexerActionExecutor) < 0) __PYX_ERR(0, 149, __pyx_L1_error)

        /* "omnibus/_ext/cy/antlr.pyx":148
 *                 )
 * 
 *                 c = LexerATNConfig(             # <<<<<<<<<<<<<<
 *                     state=t.target,
 *                     config=config,
 */
        __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_empty_tuple, __pyx_t_16); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 148, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF_SET(__pyx_v_c, __pyx_t_8);
        __pyx_t_8 = 0;

        /* "omnibus/_ext/cy/antlr.pyx":142
 * 
 *         elif t.serializationType == Transition__ACTION:
 *             if config.context is None or config.context.hasEmptyPath():             # <<<<<<<<<<<<<<
 *                 lexerActionExecutor = LexerActionExecutor.append(
 *                     config.lexerActionExecutor,
 */
        goto __pyx_L24;
      }

      /* "omnibus/_ext/cy/antlr.pyx":156
 *             else:
 *                 # ignore actions in referenced rules
 *                 c = LexerATNConfig(state=t.target, config=config)             # <<<<<<<<<<<<<<
 * 
 *         elif t.serializationType == Transition__EPSILON:
 */
      /*else*/ {
        __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_LexerATNConfig); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 156, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_16 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 156, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_target); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 156, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        if (PyDict_SetItem(__pyx_t_16, __pyx_n_s_state, __pyx_t_9) < 0) __PYX_ERR(0, 156, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (PyDict_SetItem(__pyx_t_16, __pyx_n_s_config, __pyx_v_config) < 0) __PYX_ERR(0, 156, __pyx_L1_error)
        __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_empty_tuple, __pyx_t_16); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 156, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF_SET(__pyx_v_c, __pyx_t_9);
        __pyx_t_9 = 0;
      }
      __pyx_L24:;

      /* "omnibus/_ext/cy/antlr.pyx":141
 *                 c = LexerATNConfig(state=t.target, config=config)
 * 
 *         elif t.serializationType == Transition__ACTION:             # <<<<<<<<<<<<<<
 *             if config.context is None or config.context.hasEmptyPath():
 *                 lexerActionExecutor = LexerActionExecutor.append(
 */
      goto __pyx_L22;
    }

    /* "omnibus/_ext/cy/antlr.pyx":158
 *                 c = LexerATNConfig(state=t.target, config=config)
 * 
 *         elif t.serializationType == Transition__EPSILON:             # <<<<<<<<<<<<<<
 *             c = LexerATNConfig(state=t.target, config=config)
 * 
 */
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_serializationType); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 158, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_16 = __Pyx_PyInt_EqObjC(__pyx_t_9, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 158, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_16); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 158, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
    if (__pyx_t_3) {

      /* "omnibus/_ext/cy/antlr.pyx":159
 * 
 *         elif t.serializationType == Transition__EPSILON:
 *             c = LexerATNConfig(state=t.target, config=config)             # <<<<<<<<<<<<<<
 * 
 *         elif (
 */
      __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_LexerATNConfig); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __pyx_t_9 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_target); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_state, __pyx_t_8) < 0) __PYX_ERR(0, 159, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_config, __pyx_v_config) < 0) __PYX_ERR(0, 159, __pyx_L1_error)
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_16, __pyx_empty_tuple, __pyx_t_9); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF_SET(__pyx_v_c, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "omnibus/_ext/cy/antlr.pyx":158
 *                 c = LexerATNConfig(state=t.target, config=config)
 * 
 *         elif t.serializationType == Transition__EPSILON:             # <<<<<<<<<<<<<<
 *             c = LexerATNConfig(state=t.target, config=config)
 * 
 */
      goto __pyx_L22;
    }

    /* "omnibus/_ext/cy/antlr.pyx":162
 * 
 *         elif (
 *                 t.serializationType == Transition__ATOM or             # <<<<<<<<<<<<<<
 *                 t.serializationType == Transition__RANGE or
 *                 t.serializationType == Transition__SET
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_serializationType); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyInt_EqObjC(__pyx_t_8, __pyx_int_5, 5, 0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 162, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (!__pyx_t_4) {
    } else {
      __pyx_t_3 = __pyx_t_4;
      goto __pyx_L27_bool_binop_done;
    }

    /* "omnibus/_ext/cy/antlr.pyx":163
 *         elif (
 *                 t.serializationType == Transition__ATOM or
 *                 t.serializationType == Transition__RANGE or             # <<<<<<<<<<<<<<
 *                 t.serializationType == Transition__SET
 *         ):
 */
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_serializationType); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_8 = __Pyx_PyInt_EqObjC(__pyx_t_9, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 163, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (!__pyx_t_4) {
    } else {
      __pyx_t_3 = __pyx_t_4;
      goto __pyx_L27_bool_binop_done;
    }

    /* "omnibus/_ext/cy/antlr.pyx":164
 *                 t.serializationType == Transition__ATOM or
 *                 t.serializationType == Transition__RANGE or
 *                 t.serializationType == Transition__SET             # <<<<<<<<<<<<<<
 *         ):
 *             if treatEofAsEpsilon:
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_serializationType); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyInt_EqObjC(__pyx_t_8, __pyx_int_7, 7, 0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 164, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_3 = __pyx_t_4;
    __pyx_L27_bool_binop_done:;

    /* "omnibus/_ext/cy/antlr.pyx":161
 *             c = LexerATNConfig(state=t.target, config=config)
 * 
 *         elif (             # <<<<<<<<<<<<<<
 *                 t.serializationType == Transition__ATOM or
 *                 t.serializationType == Transition__RANGE or
 */
    if (__pyx_t_3) {

      /* "omnibus/_ext/cy/antlr.pyx":166
 *                 t.serializationType == Transition__SET
 *         ):
 *             if treatEofAsEpsilon:             # <<<<<<<<<<<<<<
 *                 if t.matches(Token.EOF, 0, Lexer.MAX_CHAR_VALUE):
 *                     c = LexerATNConfig(state=t.target, config=config)
 */
      __pyx_t_3 = (__pyx_v_treatEofAsEpsilon != 0);
      if (__pyx_t_3) {

        /* "omnibus/_ext/cy/antlr.pyx":167
 *         ):
 *             if treatEofAsEpsilon:
 *                 if t.matches(Token.EOF, 0, Lexer.MAX_CHAR_VALUE):             # <<<<<<<<<<<<<<
 *                     c = LexerATNConfig(state=t.target, config=config)
 * 
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_matches); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 167, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_Token); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 167, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_16, __pyx_n_s_EOF); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 167, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_Lexer); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 167, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_16, __pyx_n_s_MAX_CHAR_VALUE); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 167, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_16 = NULL;
        __pyx_t_14 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_16)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_16);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
            __pyx_t_14 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_8)) {
          PyObject *__pyx_temp[4] = {__pyx_t_16, __pyx_t_7, __pyx_int_0, __pyx_t_15};
          __pyx_t_9 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_14, 3+__pyx_t_14); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 167, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
          PyObject *__pyx_temp[4] = {__pyx_t_16, __pyx_t_7, __pyx_int_0, __pyx_t_15};
          __pyx_t_9 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_14, 3+__pyx_t_14); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 167, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        } else
        #endif
        {
          __pyx_t_1 = PyTuple_New(3+__pyx_t_14); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 167, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          if (__pyx_t_16) {
            __Pyx_GIVEREF(__pyx_t_16); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_16); __pyx_t_16 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_14, __pyx_t_7);
          __Pyx_INCREF(__pyx_int_0);
          __Pyx_GIVEREF(__pyx_int_0);
          PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_14, __pyx_int_0);
          __Pyx_GIVEREF(__pyx_t_15);
          PyTuple_SET_ITEM(__pyx_t_1, 2+__pyx_t_14, __pyx_t_15);
          __pyx_t_7 = 0;
          __pyx_t_15 = 0;
          __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_1, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 167, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        }
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 167, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (__pyx_t_3) {

          /* "omnibus/_ext/cy/antlr.pyx":168
 *             if treatEofAsEpsilon:
 *                 if t.matches(Token.EOF, 0, Lexer.MAX_CHAR_VALUE):
 *                     c = LexerATNConfig(state=t.target, config=config)             # <<<<<<<<<<<<<<
 * 
 *         if c is not None:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_LexerATNConfig); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 168, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_8 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 168, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_target); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 168, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_state, __pyx_t_1) < 0) __PYX_ERR(0, 168, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_config, __pyx_v_config) < 0) __PYX_ERR(0, 168, __pyx_L1_error)
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_empty_tuple, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 168, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF_SET(__pyx_v_c, __pyx_t_1);
          __pyx_t_1 = 0;

          /* "omnibus/_ext/cy/antlr.pyx":167
 *         ):
 *             if treatEofAsEpsilon:
 *                 if t.matches(Token.EOF, 0, Lexer.MAX_CHAR_VALUE):             # <<<<<<<<<<<<<<
 *                     c = LexerATNConfig(state=t.target, config=config)
 * 
 */
        }

        /* "omnibus/_ext/cy/antlr.pyx":166
 *                 t.serializationType == Transition__SET
 *         ):
 *             if treatEofAsEpsilon:             # <<<<<<<<<<<<<<
 *                 if t.matches(Token.EOF, 0, Lexer.MAX_CHAR_VALUE):
 *                     c = LexerATNConfig(state=t.target, config=config)
 */
      }

      /* "omnibus/_ext/cy/antlr.pyx":161
 *             c = LexerATNConfig(state=t.target, config=config)
 * 
 *         elif (             # <<<<<<<<<<<<<<
 *                 t.serializationType == Transition__ATOM or
 *                 t.serializationType == Transition__RANGE or
 */
    }
    __pyx_L22:;

    /* "omnibus/_ext/cy/antlr.pyx":170
 *                     c = LexerATNConfig(state=t.target, config=config)
 * 
 *         if c is not None:             # <<<<<<<<<<<<<<
 *             currentAltReachedAcceptState = LexerATNSimulator__closure(
 *                 self,
 */
    __pyx_t_3 = (__pyx_v_c != Py_None);
    __pyx_t_4 = (__pyx_t_3 != 0);
    if (__pyx_t_4) {

      /* "omnibus/_ext/cy/antlr.pyx":171
 * 
 *         if c is not None:
 *             currentAltReachedAcceptState = LexerATNSimulator__closure(             # <<<<<<<<<<<<<<
 *                 self,
 *                 input,
 */
      __pyx_v_currentAltReachedAcceptState = __pyx_f_7omnibus_4_ext_2cy_5antlr_LexerATNSimulator__closure(__pyx_v_self, __pyx_v_input, __pyx_v_c, __pyx_v_configs, __pyx_v_currentAltReachedAcceptState, __pyx_v_speculative, __pyx_v_treatEofAsEpsilon, 0);

      /* "omnibus/_ext/cy/antlr.pyx":170
 *                     c = LexerATNConfig(state=t.target, config=config)
 * 
 *         if c is not None:             # <<<<<<<<<<<<<<
 *             currentAltReachedAcceptState = LexerATNSimulator__closure(
 *                 self,
 */
    }

    /* "omnibus/_ext/cy/antlr.pyx":122
 *             configs.add(config)
 * 
 *     for t in config.state.transitions:             # <<<<<<<<<<<<<<
 *         c = None
 *         if t.serializationType == Transition__RULE:
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":181
 *             )
 * 
 *     return currentAltReachedAcceptState             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_currentAltReachedAcceptState;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":70
 * 
 * 
 * cpdef bool LexerATNSimulator__closure(             # <<<<<<<<<<<<<<
 *         self: LexerATNSimulator,
 *         input: InputStream,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_WriteUnraisable("omnibus._ext.cy.antlr.LexerATNSimulator__closure", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_newContext);
  __Pyx_XDECREF(__pyx_v_returnState);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_XDECREF(__pyx_v_lexerActionExecutor);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_3LexerATNSimulator__closure(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_2LexerATNSimulator__closure[] = "LexerATNSimulator__closure(self: LexerATNSimulator, input: InputStream, config: LexerATNConfig, configs: ATNConfigSet, bool currentAltReachedAcceptState: bool, bool speculative: bool, bool treatEofAsEpsilon: bool) -> bool";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_3LexerATNSimulator__closure = {"LexerATNSimulator__closure", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7omnibus_4_ext_2cy_5antlr_3LexerATNSimulator__closure, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_2LexerATNSimulator__closure};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_3LexerATNSimulator__closure(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_input = 0;
  PyObject *__pyx_v_config = 0;
  PyObject *__pyx_v_configs = 0;
  bool __pyx_v_currentAltReachedAcceptState;
  bool __pyx_v_speculative;
  bool __pyx_v_treatEofAsEpsilon;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LexerATNSimulator__closure (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_input,&__pyx_n_s_config,&__pyx_n_s_configs,&__pyx_n_s_currentAltReachedAcceptState,&__pyx_n_s_speculative,&__pyx_n_s_treatEofAsEpsilon,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_input)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("LexerATNSimulator__closure", 1, 7, 7, 1); __PYX_ERR(0, 70, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_config)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("LexerATNSimulator__closure", 1, 7, 7, 2); __PYX_ERR(0, 70, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_configs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("LexerATNSimulator__closure", 1, 7, 7, 3); __PYX_ERR(0, 70, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_currentAltReachedAcceptState)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("LexerATNSimulator__closure", 1, 7, 7, 4); __PYX_ERR(0, 70, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_speculative)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("LexerATNSimulator__closure", 1, 7, 7, 5); __PYX_ERR(0, 70, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_treatEofAsEpsilon)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("LexerATNSimulator__closure", 1, 7, 7, 6); __PYX_ERR(0, 70, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "LexerATNSimulator__closure") < 0)) __PYX_ERR(0, 70, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 7) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
    }
    __pyx_v_self = values[0];
    __pyx_v_input = values[1];
    __pyx_v_config = values[2];
    __pyx_v_configs = values[3];
    __pyx_v_currentAltReachedAcceptState = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_currentAltReachedAcceptState == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 75, __pyx_L3_error)
    __pyx_v_speculative = __Pyx_PyObject_IsTrue(values[5]); if (unlikely((__pyx_v_speculative == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 76, __pyx_L3_error)
    __pyx_v_treatEofAsEpsilon = __Pyx_PyObject_IsTrue(values[6]); if (unlikely((__pyx_v_treatEofAsEpsilon == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 77, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LexerATNSimulator__closure", 1, 7, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 70, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.LexerATNSimulator__closure", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_2LexerATNSimulator__closure(__pyx_self, __pyx_v_self, __pyx_v_input, __pyx_v_config, __pyx_v_configs, __pyx_v_currentAltReachedAcceptState, __pyx_v_speculative, __pyx_v_treatEofAsEpsilon);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_2LexerATNSimulator__closure(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_input, PyObject *__pyx_v_config, PyObject *__pyx_v_configs, bool __pyx_v_currentAltReachedAcceptState, bool __pyx_v_speculative, bool __pyx_v_treatEofAsEpsilon) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LexerATNSimulator__closure", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_7omnibus_4_ext_2cy_5antlr_LexerATNSimulator__closure(__pyx_v_self, __pyx_v_input, __pyx_v_config, __pyx_v_configs, __pyx_v_currentAltReachedAcceptState, __pyx_v_speculative, __pyx_v_treatEofAsEpsilon, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.LexerATNSimulator__closure", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":195
 *     cdef bool precedenceFilterSuppressed
 * 
 *     def __init__(             # <<<<<<<<<<<<<<
 *             self,
 *             state: ATNState = None,
 */

/* Python wrapper */
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v_alt = 0;
  PyObject *__pyx_v_context = 0;
  PyObject *__pyx_v_semantic = 0;
  PyObject *__pyx_v_config = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_state,&__pyx_n_s_alt,&__pyx_n_s_context,&__pyx_n_s_semantic,&__pyx_n_s_config,0};
    PyObject* values[5] = {0,0,0,0,0};

    /* "omnibus/_ext/cy/antlr.pyx":197
 *     def __init__(
 *             self,
 *             state: ATNState = None,             # <<<<<<<<<<<<<<
 *             alt: int = None,
 *             context: PredictionContext = None,
 */
    values[0] = ((PyObject *)Py_None);

    /* "omnibus/_ext/cy/antlr.pyx":198
 *             self,
 *             state: ATNState = None,
 *             alt: int = None,             # <<<<<<<<<<<<<<
 *             context: PredictionContext = None,
 *             semantic: SemanticContext = None,
 */
    values[1] = ((PyObject *)Py_None);

    /* "omnibus/_ext/cy/antlr.pyx":199
 *             state: ATNState = None,
 *             alt: int = None,
 *             context: PredictionContext = None,             # <<<<<<<<<<<<<<
 *             semantic: SemanticContext = None,
 *             config: ATNConfig = None,
 */
    values[2] = ((PyObject *)Py_None);

    /* "omnibus/_ext/cy/antlr.pyx":200
 *             alt: int = None,
 *             context: PredictionContext = None,
 *             semantic: SemanticContext = None,             # <<<<<<<<<<<<<<
 *             config: ATNConfig = None,
 *     ):
 */
    values[3] = ((PyObject *)Py_None);

    /* "omnibus/_ext/cy/antlr.pyx":201
 *             context: PredictionContext = None,
 *             semantic: SemanticContext = None,
 *             config: ATNConfig = None,             # <<<<<<<<<<<<<<
 *     ):
 *         if config is not None:
 */
    values[4] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_state);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alt);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_context);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_semantic);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_config);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 195, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_state = values[0];
    __pyx_v_alt = values[1];
    __pyx_v_context = values[2];
    __pyx_v_semantic = values[3];
    __pyx_v_config = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 195, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfig.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig___init__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *)__pyx_v_self), __pyx_v_state, __pyx_v_alt, __pyx_v_context, __pyx_v_semantic, __pyx_v_config);

  /* "omnibus/_ext/cy/antlr.pyx":195
 *     cdef bool precedenceFilterSuppressed
 * 
 *     def __init__(             # <<<<<<<<<<<<<<
 *             self,
 *             state: ATNState = None,
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig___init__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self, PyObject *__pyx_v_state, PyObject *__pyx_v_alt, PyObject *__pyx_v_context, PyObject *__pyx_v_semantic, PyObject *__pyx_v_config) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  bool __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);
  __Pyx_INCREF(__pyx_v_state);
  __Pyx_INCREF(__pyx_v_alt);
  __Pyx_INCREF(__pyx_v_context);
  __Pyx_INCREF(__pyx_v_semantic);

  /* "omnibus/_ext/cy/antlr.pyx":203
 *             config: ATNConfig = None,
 *     ):
 *         if config is not None:             # <<<<<<<<<<<<<<
 *             if state is None:
 *                 state = config.state
 */
  __pyx_t_1 = (__pyx_v_config != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "omnibus/_ext/cy/antlr.pyx":204
 *     ):
 *         if config is not None:
 *             if state is None:             # <<<<<<<<<<<<<<
 *                 state = config.state
 *             if alt is None:
 */
    __pyx_t_2 = (__pyx_v_state == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "omnibus/_ext/cy/antlr.pyx":205
 *         if config is not None:
 *             if state is None:
 *                 state = config.state             # <<<<<<<<<<<<<<
 *             if alt is None:
 *                 alt = config.alt
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_state); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 205, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_state, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "omnibus/_ext/cy/antlr.pyx":204
 *     ):
 *         if config is not None:
 *             if state is None:             # <<<<<<<<<<<<<<
 *                 state = config.state
 *             if alt is None:
 */
    }

    /* "omnibus/_ext/cy/antlr.pyx":206
 *             if state is None:
 *                 state = config.state
 *             if alt is None:             # <<<<<<<<<<<<<<
 *                 alt = config.alt
 *             if context is None:
 */
    __pyx_t_1 = (__pyx_v_alt == Py_None);
    __pyx_t_2 = (__pyx_t_1 != 0);
    if (__pyx_t_2) {

      /* "omnibus/_ext/cy/antlr.pyx":207
 *                 state = config.state
 *             if alt is None:
 *                 alt = config.alt             # <<<<<<<<<<<<<<
 *             if context is None:
 *                 context = config.context
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_alt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 207, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_alt, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "omnibus/_ext/cy/antlr.pyx":206
 *             if state is None:
 *                 state = config.state
 *             if alt is None:             # <<<<<<<<<<<<<<
 *                 alt = config.alt
 *             if context is None:
 */
    }

    /* "omnibus/_ext/cy/antlr.pyx":208
 *             if alt is None:
 *                 alt = config.alt
 *             if context is None:             # <<<<<<<<<<<<<<
 *                 context = config.context
 *             if semantic is None:
 */
    __pyx_t_2 = (__pyx_v_context == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "omnibus/_ext/cy/antlr.pyx":209
 *                 alt = config.alt
 *             if context is None:
 *                 context = config.context             # <<<<<<<<<<<<<<
 *             if semantic is None:
 *                 semantic = config.semanticContext
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 209, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_context, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "omnibus/_ext/cy/antlr.pyx":208
 *             if alt is None:
 *                 alt = config.alt
 *             if context is None:             # <<<<<<<<<<<<<<
 *                 context = config.context
 *             if semantic is None:
 */
    }

    /* "omnibus/_ext/cy/antlr.pyx":210
 *             if context is None:
 *                 context = config.context
 *             if semantic is None:             # <<<<<<<<<<<<<<
 *                 semantic = config.semanticContext
 * 
 */
    __pyx_t_1 = (__pyx_v_semantic == Py_None);
    __pyx_t_2 = (__pyx_t_1 != 0);
    if (__pyx_t_2) {

      /* "omnibus/_ext/cy/antlr.pyx":211
 *                 context = config.context
 *             if semantic is None:
 *                 semantic = config.semanticContext             # <<<<<<<<<<<<<<
 * 
 *         if semantic is None:
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 211, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_semantic, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "omnibus/_ext/cy/antlr.pyx":210
 *             if context is None:
 *                 context = config.context
 *             if semantic is None:             # <<<<<<<<<<<<<<
 *                 semantic = config.semanticContext
 * 
 */
    }

    /* "omnibus/_ext/cy/antlr.pyx":203
 *             config: ATNConfig = None,
 *     ):
 *         if config is not None:             # <<<<<<<<<<<<<<
 *             if state is None:
 *                 state = config.state
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":213
 *                 semantic = config.semanticContext
 * 
 *         if semantic is None:             # <<<<<<<<<<<<<<
 *             semantic = SemanticContext.NONE
 * 
 */
  __pyx_t_2 = (__pyx_v_semantic == Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "omnibus/_ext/cy/antlr.pyx":214
 * 
 *         if semantic is None:
 *             semantic = SemanticContext.NONE             # <<<<<<<<<<<<<<
 * 
 *         self.state = state
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_SemanticContext); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 214, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_NONE); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 214, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_semantic, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "omnibus/_ext/cy/antlr.pyx":213
 *                 semantic = config.semanticContext
 * 
 *         if semantic is None:             # <<<<<<<<<<<<<<
 *             semantic = SemanticContext.NONE
 * 
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":216
 *             semantic = SemanticContext.NONE
 * 
 *         self.state = state             # <<<<<<<<<<<<<<
 *         self.alt = alt
 * 
 */
  __Pyx_INCREF(__pyx_v_state);
  __Pyx_GIVEREF(__pyx_v_state);
  __Pyx_GOTREF(__pyx_v_self->state);
  __Pyx_DECREF(__pyx_v_self->state);
  __pyx_v_self->state = __pyx_v_state;

  /* "omnibus/_ext/cy/antlr.pyx":217
 * 
 *         self.state = state
 *         self.alt = alt             # <<<<<<<<<<<<<<
 * 
 *         self.context = context
 */
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_alt); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 217, __pyx_L1_error)
  __pyx_v_self->alt = __pyx_t_5;

  /* "omnibus/_ext/cy/antlr.pyx":219
 *         self.alt = alt
 * 
 *         self.context = context             # <<<<<<<<<<<<<<
 *         self.semanticContext = semantic
 * 
 */
  __Pyx_INCREF(__pyx_v_context);
  __Pyx_GIVEREF(__pyx_v_context);
  __Pyx_GOTREF(__pyx_v_self->context);
  __Pyx_DECREF(__pyx_v_self->context);
  __pyx_v_self->context = __pyx_v_context;

  /* "omnibus/_ext/cy/antlr.pyx":220
 * 
 *         self.context = context
 *         self.semanticContext = semantic             # <<<<<<<<<<<<<<
 * 
 *         self.reachesIntoOuterContext = 0 if config is None else config.reachesIntoOuterContext
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_semanticContext, __pyx_v_semantic) < 0) __PYX_ERR(0, 220, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":222
 *         self.semanticContext = semantic
 * 
 *         self.reachesIntoOuterContext = 0 if config is None else config.reachesIntoOuterContext             # <<<<<<<<<<<<<<
 *         self.precedenceFilterSuppressed = False if config is None else config.precedenceFilterSuppressed
 * 
 */
  __pyx_t_1 = (__pyx_v_config == Py_None);
  if ((__pyx_t_1 != 0)) {
    __pyx_t_5 = 0;
  } else {
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_reachesIntoOuterContext); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 222, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 222, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __pyx_t_6;
  }
  __pyx_v_self->reachesIntoOuterContext = __pyx_t_5;

  /* "omnibus/_ext/cy/antlr.pyx":223
 * 
 *         self.reachesIntoOuterContext = 0 if config is None else config.reachesIntoOuterContext
 *         self.precedenceFilterSuppressed = False if config is None else config.precedenceFilterSuppressed             # <<<<<<<<<<<<<<
 * 
 *     def __eq__(self, other):
 */
  __pyx_t_1 = (__pyx_v_config == Py_None);
  if ((__pyx_t_1 != 0)) {
    __pyx_t_4 = ((PyObject *)0);
  } else {
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_precedenceFilterSuppressed); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_7 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 223, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = ((PyObject *)__pyx_t_7);
  }
  __pyx_v_self->precedenceFilterSuppressed = ((bool)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":195
 *     cdef bool precedenceFilterSuppressed
 * 
 *     def __init__(             # <<<<<<<<<<<<<<
 *             self,
 *             state: ATNState = None,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfig.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v_alt);
  __Pyx_XDECREF(__pyx_v_context);
  __Pyx_XDECREF(__pyx_v_semantic);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":225
 *         self.precedenceFilterSuppressed = False if config is None else config.precedenceFilterSuppressed
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         if self is other:
 *             return True
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_3__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_3__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__eq__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_2__eq__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_2__eq__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__eq__", 0);

  /* "omnibus/_ext/cy/antlr.pyx":226
 * 
 *     def __eq__(self, other):
 *         if self is other:             # <<<<<<<<<<<<<<
 *             return True
 *         elif not isinstance(other, CyATNConfig):
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_self) == __pyx_v_other);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "omnibus/_ext/cy/antlr.pyx":227
 *     def __eq__(self, other):
 *         if self is other:
 *             return True             # <<<<<<<<<<<<<<
 *         elif not isinstance(other, CyATNConfig):
 *             return False
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_True);
    __pyx_r = Py_True;
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":226
 * 
 *     def __eq__(self, other):
 *         if self is other:             # <<<<<<<<<<<<<<
 *             return True
 *         elif not isinstance(other, CyATNConfig):
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":228
 *         if self is other:
 *             return True
 *         elif not isinstance(other, CyATNConfig):             # <<<<<<<<<<<<<<
 *             return False
 *         else:
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig); 
  __pyx_t_1 = ((!(__pyx_t_2 != 0)) != 0);
  if (__pyx_t_1) {

    /* "omnibus/_ext/cy/antlr.pyx":229
 *             return True
 *         elif not isinstance(other, CyATNConfig):
 *             return False             # <<<<<<<<<<<<<<
 *         else:
 *             return (
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":228
 *         if self is other:
 *             return True
 *         elif not isinstance(other, CyATNConfig):             # <<<<<<<<<<<<<<
 *             return False
 *         else:
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":231
 *             return False
 *         else:
 *             return (             # <<<<<<<<<<<<<<
 *                     self.state.stateNumber == other.state.stateNumber and
 *                     self.alt == other.alt and
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);

    /* "omnibus/_ext/cy/antlr.pyx":232
 *         else:
 *             return (
 *                     self.state.stateNumber == other.state.stateNumber and             # <<<<<<<<<<<<<<
 *                     self.alt == other.alt and
 *                     ((self.context is other.context) or (self.context == other.context)) and
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->state, __pyx_n_s_stateNumber); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_state); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stateNumber); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_4, __pyx_t_6, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 232, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 232, __pyx_L1_error)
    if (__pyx_t_1) {
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __Pyx_INCREF(__pyx_t_5);
      __pyx_t_3 = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L4_bool_binop_done;
    }

    /* "omnibus/_ext/cy/antlr.pyx":233
 *             return (
 *                     self.state.stateNumber == other.state.stateNumber and
 *                     self.alt == other.alt and             # <<<<<<<<<<<<<<
 *                     ((self.context is other.context) or (self.context == other.context)) and
 *                     self.semanticContext == other.semanticContext and
 */
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->alt); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_alt); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_5, __pyx_t_6, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 233, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 233, __pyx_L1_error)
    if (__pyx_t_1) {
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else {
      __Pyx_INCREF(__pyx_t_4);
      __pyx_t_3 = __pyx_t_4;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L4_bool_binop_done;
    }

    /* "omnibus/_ext/cy/antlr.pyx":234
 *                     self.state.stateNumber == other.state.stateNumber and
 *                     self.alt == other.alt and
 *                     ((self.context is other.context) or (self.context == other.context)) and             # <<<<<<<<<<<<<<
 *                     self.semanticContext == other.semanticContext and
 *                     self.precedenceFilterSuppressed == other.precedenceFilterSuppressed
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_context); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 234, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = (__pyx_v_self->context == __pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!__pyx_t_1) {
    } else {
      goto __pyx_L7_next_and;
    }
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_context); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 234, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyObject_RichCompare(__pyx_v_self->context, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 234, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 234, __pyx_L1_error)
    if (__pyx_t_1) {
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else {
      __Pyx_INCREF(__pyx_t_6);
      __pyx_t_3 = __pyx_t_6;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_L7_next_and:;

    /* "omnibus/_ext/cy/antlr.pyx":235
 *                     self.alt == other.alt and
 *                     ((self.context is other.context) or (self.context == other.context)) and
 *                     self.semanticContext == other.semanticContext and             # <<<<<<<<<<<<<<
 *                     self.precedenceFilterSuppressed == other.precedenceFilterSuppressed
 *             )
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 235, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 235, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_6, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 235, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 235, __pyx_L1_error)
    if (__pyx_t_1) {
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __Pyx_INCREF(__pyx_t_5);
      __pyx_t_3 = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L4_bool_binop_done;
    }

    /* "omnibus/_ext/cy/antlr.pyx":236
 *                     ((self.context is other.context) or (self.context == other.context)) and
 *                     self.semanticContext == other.semanticContext and
 *                     self.precedenceFilterSuppressed == other.precedenceFilterSuppressed             # <<<<<<<<<<<<<<
 *             )
 * 
 */
    __pyx_t_5 = __Pyx_PyBool_FromLong(__pyx_v_self->precedenceFilterSuppressed); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 236, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_precedenceFilterSuppressed); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 236, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_5, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 236, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_INCREF(__pyx_t_6);
    __pyx_t_3 = __pyx_t_6;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_L4_bool_binop_done:;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "omnibus/_ext/cy/antlr.pyx":225
 *         self.precedenceFilterSuppressed = False if config is None else config.precedenceFilterSuppressed
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         if self is other:
 *             return True
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfig.__eq__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":239
 *             )
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return hash((self.state.stateNumber, self.alt, self.context, self.semanticContext))
 * 
 */

/* Python wrapper */
static Py_hash_t __pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_5__hash__(PyObject *__pyx_v_self); /*proto*/
static Py_hash_t __pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_5__hash__(PyObject *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__hash__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_4__hash__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_hash_t __pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_4__hash__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_hash_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__hash__", 0);

  /* "omnibus/_ext/cy/antlr.pyx":240
 * 
 *     def __hash__(self):
 *         return hash((self.state.stateNumber, self.alt, self.context, self.semanticContext))             # <<<<<<<<<<<<<<
 * 
 *     cpdef hashCodeForConfigSet(self):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->state, __pyx_n_s_stateNumber); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->alt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_INCREF(__pyx_v_self->context);
  __Pyx_GIVEREF(__pyx_v_self->context);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_self->context);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_5 = PyObject_Hash(__pyx_t_4); if (unlikely(__pyx_t_5 == ((Py_hash_t)-1))) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":239
 *             )
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return hash((self.state.stateNumber, self.alt, self.context, self.semanticContext))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfig.__hash__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  if (unlikely(__pyx_r == -1) && !PyErr_Occurred()) __pyx_r = -2;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":242
 *         return hash((self.state.stateNumber, self.alt, self.context, self.semanticContext))
 * 
 *     cpdef hashCodeForConfigSet(self):             # <<<<<<<<<<<<<<
 *         return hash((self.state.stateNumber, self.alt, hash(self.semanticContext)))
 * 
 */

static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_7hashCodeForConfigSet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_hashCodeForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_hash_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("hashCodeForConfigSet", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_hashCodeForConfigSet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 242, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_7hashCodeForConfigSet)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 242, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "omnibus/_ext/cy/antlr.pyx":243
 * 
 *     cpdef hashCodeForConfigSet(self):
 *         return hash((self.state.stateNumber, self.alt, hash(self.semanticContext)))             # <<<<<<<<<<<<<<
 * 
 *     cpdef equalsForConfigSet(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->state, __pyx_n_s_stateNumber); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->alt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyObject_Hash(__pyx_t_3); if (unlikely(__pyx_t_5 == ((Py_hash_t)-1))) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyInt_FromHash_t(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_5 = PyObject_Hash(__pyx_t_4); if (unlikely(__pyx_t_5 == ((Py_hash_t)-1))) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyInt_FromHash_t(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":242
 *         return hash((self.state.stateNumber, self.alt, self.context, self.semanticContext))
 * 
 *     cpdef hashCodeForConfigSet(self):             # <<<<<<<<<<<<<<
 *         return hash((self.state.stateNumber, self.alt, hash(self.semanticContext)))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfig.hashCodeForConfigSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_7hashCodeForConfigSet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_6hashCodeForConfigSet[] = "CyATNConfig.hashCodeForConfigSet(self)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_7hashCodeForConfigSet = {"hashCodeForConfigSet", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_7hashCodeForConfigSet, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_6hashCodeForConfigSet};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_7hashCodeForConfigSet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("hashCodeForConfigSet (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_6hashCodeForConfigSet(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_6hashCodeForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("hashCodeForConfigSet", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_hashCodeForConfigSet(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfig.hashCodeForConfigSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":245
 *         return hash((self.state.stateNumber, self.alt, hash(self.semanticContext)))
 * 
 *     cpdef equalsForConfigSet(self, other):             # <<<<<<<<<<<<<<
 *         if self is other:
 *             return True
 */

static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_9equalsForConfigSet(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_equalsForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("equalsForConfigSet", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_equalsForConfigSet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 245, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_9equalsForConfigSet)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_v_other) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_other);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 245, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "omnibus/_ext/cy/antlr.pyx":246
 * 
 *     cpdef equalsForConfigSet(self, other):
 *         if self is other:             # <<<<<<<<<<<<<<
 *             return True
 *         elif not isinstance(other, ATNConfig):
 */
  __pyx_t_5 = (((PyObject *)__pyx_v_self) == __pyx_v_other);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "omnibus/_ext/cy/antlr.pyx":247
 *     cpdef equalsForConfigSet(self, other):
 *         if self is other:
 *             return True             # <<<<<<<<<<<<<<
 *         elif not isinstance(other, ATNConfig):
 *             return False
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_True);
    __pyx_r = Py_True;
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":246
 * 
 *     cpdef equalsForConfigSet(self, other):
 *         if self is other:             # <<<<<<<<<<<<<<
 *             return True
 *         elif not isinstance(other, ATNConfig):
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":248
 *         if self is other:
 *             return True
 *         elif not isinstance(other, ATNConfig):             # <<<<<<<<<<<<<<
 *             return False
 *         else:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_ATNConfig); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyObject_IsInstance(__pyx_v_other, __pyx_t_1); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 248, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_5 = ((!(__pyx_t_6 != 0)) != 0);
  if (__pyx_t_5) {

    /* "omnibus/_ext/cy/antlr.pyx":249
 *             return True
 *         elif not isinstance(other, ATNConfig):
 *             return False             # <<<<<<<<<<<<<<
 *         else:
 *             return (
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":248
 *         if self is other:
 *             return True
 *         elif not isinstance(other, ATNConfig):             # <<<<<<<<<<<<<<
 *             return False
 *         else:
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":251
 *             return False
 *         else:
 *             return (             # <<<<<<<<<<<<<<
 *                     self.state.stateNumber == other.state.stateNumber and
 *                     self.alt == other.alt and
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);

    /* "omnibus/_ext/cy/antlr.pyx":252
 *         else:
 *             return (
 *                     self.state.stateNumber == other.state.stateNumber and             # <<<<<<<<<<<<<<
 *                     self.alt == other.alt and
 *                     self.semanticContext == other.semanticContext
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->state, __pyx_n_s_stateNumber); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_state); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_stateNumber); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 252, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 252, __pyx_L1_error)
    if (__pyx_t_5) {
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      __Pyx_INCREF(__pyx_t_3);
      __pyx_t_1 = __pyx_t_3;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L4_bool_binop_done;
    }

    /* "omnibus/_ext/cy/antlr.pyx":253
 *             return (
 *                     self.state.stateNumber == other.state.stateNumber and
 *                     self.alt == other.alt and             # <<<<<<<<<<<<<<
 *                     self.semanticContext == other.semanticContext
 *             )
 */
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->alt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 253, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_alt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 253, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_3, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 253, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 253, __pyx_L1_error)
    if (__pyx_t_5) {
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      __Pyx_INCREF(__pyx_t_2);
      __pyx_t_1 = __pyx_t_2;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L4_bool_binop_done;
    }

    /* "omnibus/_ext/cy/antlr.pyx":254
 *                     self.state.stateNumber == other.state.stateNumber and
 *                     self.alt == other.alt and
 *                     self.semanticContext == other.semanticContext             # <<<<<<<<<<<<<<
 *             )
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 254, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 254, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 254, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_INCREF(__pyx_t_3);
    __pyx_t_1 = __pyx_t_3;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_L4_bool_binop_done:;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "omnibus/_ext/cy/antlr.pyx":245
 *         return hash((self.state.stateNumber, self.alt, hash(self.semanticContext)))
 * 
 *     cpdef equalsForConfigSet(self, other):             # <<<<<<<<<<<<<<
 *         if self is other:
 *             return True
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfig.equalsForConfigSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_9equalsForConfigSet(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_8equalsForConfigSet[] = "CyATNConfig.equalsForConfigSet(self, other)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_9equalsForConfigSet = {"equalsForConfigSet", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_9equalsForConfigSet, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_8equalsForConfigSet};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_9equalsForConfigSet(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("equalsForConfigSet (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_8equalsForConfigSet(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_8equalsForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("equalsForConfigSet", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_equalsForConfigSet(__pyx_v_self, __pyx_v_other, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfig.equalsForConfigSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":257
 *             )
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         with io.StringIO() as buf:
 *             buf.write('(')
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_11__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_11__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_10__str__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_10__str__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self) {
  PyObject *__pyx_v_buf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "omnibus/_ext/cy/antlr.pyx":258
 * 
 *     def __str__(self):
 *         with io.StringIO() as buf:             # <<<<<<<<<<<<<<
 *             buf.write('(')
 *             buf.write(str(self.state))
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_io); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_StringIO); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_enter); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 258, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 258, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __pyx_t_3;
    __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {
          __pyx_v_buf = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "omnibus/_ext/cy/antlr.pyx":259
 *     def __str__(self):
 *         with io.StringIO() as buf:
 *             buf.write('(')             # <<<<<<<<<<<<<<
 *             buf.write(str(self.state))
 *             buf.write(",")
 */
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 259, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_3, __pyx_kp_u_) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_kp_u_);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 259, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "omnibus/_ext/cy/antlr.pyx":260
 *         with io.StringIO() as buf:
 *             buf.write('(')
 *             buf.write(str(self.state))             # <<<<<<<<<<<<<<
 *             buf.write(",")
 *             buf.write(str(self.alt))
 */
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 260, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_self->state); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 260, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 260, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "omnibus/_ext/cy/antlr.pyx":261
 *             buf.write('(')
 *             buf.write(str(self.state))
 *             buf.write(",")             # <<<<<<<<<<<<<<
 *             buf.write(str(self.alt))
 *             if self.context is not None:
 */
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 261, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_3, __pyx_kp_u__2) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_kp_u__2);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 261, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "omnibus/_ext/cy/antlr.pyx":262
 *             buf.write(str(self.state))
 *             buf.write(",")
 *             buf.write(str(self.alt))             # <<<<<<<<<<<<<<
 *             if self.context is not None:
 *                 buf.write(",[")
 */
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 262, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->alt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 262, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 262, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 262, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "omnibus/_ext/cy/antlr.pyx":263
 *             buf.write(",")
 *             buf.write(str(self.alt))
 *             if self.context is not None:             # <<<<<<<<<<<<<<
 *                 buf.write(",[")
 *                 buf.write(str(self.context))
 */
          __pyx_t_9 = (__pyx_v_self->context != Py_None);
          __pyx_t_10 = (__pyx_t_9 != 0);
          if (__pyx_t_10) {

            /* "omnibus/_ext/cy/antlr.pyx":264
 *             buf.write(str(self.alt))
 *             if self.context is not None:
 *                 buf.write(",[")             # <<<<<<<<<<<<<<
 *                 buf.write(str(self.context))
 *                 buf.write("]")
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 264, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_1, function);
              }
            }
            __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_kp_u__3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_kp_u__3);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 264, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":265
 *             if self.context is not None:
 *                 buf.write(",[")
 *                 buf.write(str(self.context))             # <<<<<<<<<<<<<<
 *                 buf.write("]")
 *             if self.semanticContext is not None and self.semanticContext is not SemanticContext.NONE:
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 265, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_self->context); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 265, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_1, function);
              }
            }
            __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 265, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":266
 *                 buf.write(",[")
 *                 buf.write(str(self.context))
 *                 buf.write("]")             # <<<<<<<<<<<<<<
 *             if self.semanticContext is not None and self.semanticContext is not SemanticContext.NONE:
 *                 buf.write(",")
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 266, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_1, function);
              }
            }
            __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_kp_u__4) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_kp_u__4);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 266, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":263
 *             buf.write(",")
 *             buf.write(str(self.alt))
 *             if self.context is not None:             # <<<<<<<<<<<<<<
 *                 buf.write(",[")
 *                 buf.write(str(self.context))
 */
          }

          /* "omnibus/_ext/cy/antlr.pyx":267
 *                 buf.write(str(self.context))
 *                 buf.write("]")
 *             if self.semanticContext is not None and self.semanticContext is not SemanticContext.NONE:             # <<<<<<<<<<<<<<
 *                 buf.write(",")
 *                 buf.write(str(self.semanticContext))
 */
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 267, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_9 = (__pyx_t_2 != Py_None);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_11 = (__pyx_t_9 != 0);
          if (__pyx_t_11) {
          } else {
            __pyx_t_10 = __pyx_t_11;
            goto __pyx_L15_bool_binop_done;
          }
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 267, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_SemanticContext); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 267, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_NONE); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 267, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_11 = (__pyx_t_2 != __pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_9 = (__pyx_t_11 != 0);
          __pyx_t_10 = __pyx_t_9;
          __pyx_L15_bool_binop_done:;
          if (__pyx_t_10) {

            /* "omnibus/_ext/cy/antlr.pyx":268
 *                 buf.write("]")
 *             if self.semanticContext is not None and self.semanticContext is not SemanticContext.NONE:
 *                 buf.write(",")             # <<<<<<<<<<<<<<
 *                 buf.write(str(self.semanticContext))
 *             if self.reachesIntoOuterContext > 0:
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 268, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_1 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_1)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_1);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_kp_u__2) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_u__2);
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 268, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":269
 *             if self.semanticContext is not None and self.semanticContext is not SemanticContext.NONE:
 *                 buf.write(",")
 *                 buf.write(str(self.semanticContext))             # <<<<<<<<<<<<<<
 *             if self.reachesIntoOuterContext > 0:
 *                 buf.write(",up=")
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 269, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 269, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 269, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_1 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_1)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_1);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 269, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":267
 *                 buf.write(str(self.context))
 *                 buf.write("]")
 *             if self.semanticContext is not None and self.semanticContext is not SemanticContext.NONE:             # <<<<<<<<<<<<<<
 *                 buf.write(",")
 *                 buf.write(str(self.semanticContext))
 */
          }

          /* "omnibus/_ext/cy/antlr.pyx":270
 *                 buf.write(",")
 *                 buf.write(str(self.semanticContext))
 *             if self.reachesIntoOuterContext > 0:             # <<<<<<<<<<<<<<
 *                 buf.write(",up=")
 *                 buf.write(str(self.reachesIntoOuterContext))
 */
          __pyx_t_10 = ((__pyx_v_self->reachesIntoOuterContext > 0) != 0);
          if (__pyx_t_10) {

            /* "omnibus/_ext/cy/antlr.pyx":271
 *                 buf.write(str(self.semanticContext))
 *             if self.reachesIntoOuterContext > 0:
 *                 buf.write(",up=")             # <<<<<<<<<<<<<<
 *                 buf.write(str(self.reachesIntoOuterContext))
 *             buf.write(')')
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 271, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_u_up) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_u_up);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 271, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":272
 *             if self.reachesIntoOuterContext > 0:
 *                 buf.write(",up=")
 *                 buf.write(str(self.reachesIntoOuterContext))             # <<<<<<<<<<<<<<
 *             buf.write(')')
 *             return buf.getvalue()
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 272, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->reachesIntoOuterContext); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 272, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 272, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 272, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":270
 *                 buf.write(",")
 *                 buf.write(str(self.semanticContext))
 *             if self.reachesIntoOuterContext > 0:             # <<<<<<<<<<<<<<
 *                 buf.write(",up=")
 *                 buf.write(str(self.reachesIntoOuterContext))
 */
          }

          /* "omnibus/_ext/cy/antlr.pyx":273
 *                 buf.write(",up=")
 *                 buf.write(str(self.reachesIntoOuterContext))
 *             buf.write(')')             # <<<<<<<<<<<<<<
 *             return buf.getvalue()
 * 
 */
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 273, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_kp_u__5) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_u__5);
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 273, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "omnibus/_ext/cy/antlr.pyx":274
 *                 buf.write(str(self.reachesIntoOuterContext))
 *             buf.write(')')
 *             return buf.getvalue()             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __Pyx_XDECREF(__pyx_r);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_getvalue); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 274, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 274, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_r = __pyx_t_5;
          __pyx_t_5 = 0;
          goto __pyx_L11_try_return;

          /* "omnibus/_ext/cy/antlr.pyx":258
 * 
 *     def __str__(self):
 *         with io.StringIO() as buf:             # <<<<<<<<<<<<<<
 *             buf.write('(')
 *             buf.write(str(self.state))
 */
        }
        __pyx_L7_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfig.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_2, &__pyx_t_1) < 0) __PYX_ERR(0, 258, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = PyTuple_Pack(3, __pyx_t_5, __pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 258, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 258, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_12);
          __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          if (__pyx_t_10 < 0) __PYX_ERR(0, 258, __pyx_L9_except_error)
          __pyx_t_9 = ((!(__pyx_t_10 != 0)) != 0);
          if (__pyx_t_9) {
            __Pyx_GIVEREF(__pyx_t_5);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_XGIVEREF(__pyx_t_1);
            __Pyx_ErrRestoreWithState(__pyx_t_5, __pyx_t_2, __pyx_t_1);
            __pyx_t_5 = 0; __pyx_t_2 = 0; __pyx_t_1 = 0; 
            __PYX_ERR(0, 258, __pyx_L9_except_error)
          }
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          goto __pyx_L8_exception_handled;
        }
        __pyx_L9_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L1_error;
        __pyx_L11_try_return:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L4_return;
        __pyx_L8_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__6, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 258, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L6;
      }
      __pyx_L4_return: {
        __pyx_t_8 = __pyx_r;
        __pyx_r = 0;
        if (__pyx_t_4) {
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__6, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 258, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        __pyx_r = __pyx_t_8;
        __pyx_t_8 = 0;
        goto __pyx_L0;
      }
      __pyx_L6:;
    }
    goto __pyx_L21;
    __pyx_L3_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L21:;
  }

  /* "omnibus/_ext/cy/antlr.pyx":257
 *             )
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         with io.StringIO() as buf:
 *             buf.write('(')
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfig.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_buf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_13__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_12__reduce_cython__[] = "CyATNConfig.__reduce_cython__(self)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_13__reduce_cython__ = {"__reduce_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_13__reduce_cython__, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_12__reduce_cython__};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_13__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_12__reduce_cython__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_12__reduce_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.alt, self.context, self.precedenceFilterSuppressed, self.reachesIntoOuterContext, self.semantic, self.state)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->alt); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_self->precedenceFilterSuppressed); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->reachesIntoOuterContext); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(6); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->context);
  __Pyx_GIVEREF(__pyx_v_self->context);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_v_self->context);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_self->semantic);
  __Pyx_GIVEREF(__pyx_v_self->semantic);
  PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_v_self->semantic);
  __Pyx_INCREF(__pyx_v_self->state);
  __Pyx_GIVEREF(__pyx_v_self->state);
  PyTuple_SET_ITEM(__pyx_t_4, 5, __pyx_v_self->state);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.alt, self.context, self.precedenceFilterSuppressed, self.reachesIntoOuterContext, self.semantic, self.state)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_4 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_v__dict = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":7
 *     state = (self.alt, self.context, self.precedenceFilterSuppressed, self.reachesIntoOuterContext, self.semantic, self.state)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_5 = (__pyx_v__dict != Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v__dict);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.context is not None or self.semantic is not None or self.state is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.alt, self.context, self.precedenceFilterSuppressed, self.reachesIntoOuterContext, self.semantic, self.state)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.context is not None or self.semantic is not None or self.state is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_CyATNConfig, (type(self), 0x52fdf41, None), state
 */
  /*else*/ {
    __pyx_t_5 = (__pyx_v_self->context != Py_None);
    __pyx_t_7 = (__pyx_t_5 != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_7 = (__pyx_v_self->semantic != Py_None);
    __pyx_t_5 = (__pyx_t_7 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_6 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->state != Py_None);
    __pyx_t_7 = (__pyx_t_5 != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_6;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.context is not None or self.semantic is not None or self.state is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_CyATNConfig, (type(self), 0x52fdf41, None), state
 *     else:
 */
  __pyx_t_6 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":13
 *         use_setstate = self.context is not None or self.semantic is not None or self.state is not None
 *     if use_setstate:
 *         return __pyx_unpickle_CyATNConfig, (type(self), 0x52fdf41, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_CyATNConfig, (type(self), 0x52fdf41, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_CyATNConfig); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_87023425);
    __Pyx_GIVEREF(__pyx_int_87023425);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_int_87023425);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_4, 2, Py_None);
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_state);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.context is not None or self.semantic is not None or self.state is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_CyATNConfig, (type(self), 0x52fdf41, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_CyATNConfig, (type(self), 0x52fdf41, None), state
 *     else:
 *         return __pyx_unpickle_CyATNConfig, (type(self), 0x52fdf41, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_CyATNConfig__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_pyx_unpickle_CyATNConfig); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_87023425);
    __Pyx_GIVEREF(__pyx_int_87023425);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_int_87023425);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_4);
    __pyx_t_2 = 0;
    __pyx_t_4 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfig.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyATNConfig, (type(self), 0x52fdf41, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyATNConfig__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_15__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_14__setstate_cython__[] = "CyATNConfig.__setstate_cython__(self, __pyx_state)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_15__setstate_cython__ = {"__setstate_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_15__setstate_cython__, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_14__setstate_cython__};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_15__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_14__setstate_cython__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_14__setstate_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_CyATNConfig, (type(self), 0x52fdf41, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_CyATNConfig__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyATNConfig__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyATNConfig, (type(self), 0x52fdf41, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyATNConfig__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfig.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":282
 *     cdef bool passedThroughNonGreedyDecision
 * 
 *     def __init__(             # <<<<<<<<<<<<<<
 *             self,
 *             state: ATNState,
 */

/* Python wrapper */
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v_alt = 0;
  PyObject *__pyx_v_context = 0;
  PyObject *__pyx_v_semantic = 0;
  PyObject *__pyx_v_lexerActionExecutor = 0;
  PyObject *__pyx_v_config = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_state,&__pyx_n_s_alt,&__pyx_n_s_context,&__pyx_n_s_semantic,&__pyx_n_s_lexerActionExecutor,&__pyx_n_s_config,0};
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "omnibus/_ext/cy/antlr.pyx":285
 *             self,
 *             state: ATNState,
 *             alt: int = None,             # <<<<<<<<<<<<<<
 *             context: PredictionContext = None,
 *             semantic: SemanticContext = SemanticContext.NONE,
 */
    values[1] = ((PyObject *)Py_None);

    /* "omnibus/_ext/cy/antlr.pyx":286
 *             state: ATNState,
 *             alt: int = None,
 *             context: PredictionContext = None,             # <<<<<<<<<<<<<<
 *             semantic: SemanticContext = SemanticContext.NONE,
 *             lexerActionExecutor: LexerActionExecutor = None,
 */
    values[2] = ((PyObject *)Py_None);
    values[3] = __pyx_k__7;

    /* "omnibus/_ext/cy/antlr.pyx":288
 *             context: PredictionContext = None,
 *             semantic: SemanticContext = SemanticContext.NONE,
 *             lexerActionExecutor: LexerActionExecutor = None,             # <<<<<<<<<<<<<<
 *             config: LexerATNConfig = None,
 *     ):
 */
    values[4] = ((PyObject *)Py_None);

    /* "omnibus/_ext/cy/antlr.pyx":289
 *             semantic: SemanticContext = SemanticContext.NONE,
 *             lexerActionExecutor: LexerActionExecutor = None,
 *             config: LexerATNConfig = None,             # <<<<<<<<<<<<<<
 *     ):
 *         CyATNConfig.__init__(state=state, alt=alt, context=context, semantic=semantic, config=config)
 */
    values[5] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_state)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alt);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_context);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_semantic);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lexerActionExecutor);
          if (value) { values[4] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_config);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 282, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_state = values[0];
    __pyx_v_alt = values[1];
    __pyx_v_context = values[2];
    __pyx_v_semantic = values[3];
    __pyx_v_lexerActionExecutor = values[4];
    __pyx_v_config = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 282, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyLexerATNConfig.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig___init__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)__pyx_v_self), __pyx_v_state, __pyx_v_alt, __pyx_v_context, __pyx_v_semantic, __pyx_v_lexerActionExecutor, __pyx_v_config);

  /* "omnibus/_ext/cy/antlr.pyx":282
 *     cdef bool passedThroughNonGreedyDecision
 * 
 *     def __init__(             # <<<<<<<<<<<<<<
 *             self,
 *             state: ATNState,
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig___init__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v_state, PyObject *__pyx_v_alt, PyObject *__pyx_v_context, PyObject *__pyx_v_semantic, PyObject *__pyx_v_lexerActionExecutor, PyObject *__pyx_v_config) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  bool __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);
  __Pyx_INCREF(__pyx_v_lexerActionExecutor);

  /* "omnibus/_ext/cy/antlr.pyx":291
 *             config: LexerATNConfig = None,
 *     ):
 *         CyATNConfig.__init__(state=state, alt=alt, context=context, semantic=semantic, config=config)             # <<<<<<<<<<<<<<
 * 
 *         if config is not None:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig), __pyx_n_s_init); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_NewPresized(5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_state, __pyx_v_state) < 0) __PYX_ERR(0, 291, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_alt, __pyx_v_alt) < 0) __PYX_ERR(0, 291, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_context, __pyx_v_context) < 0) __PYX_ERR(0, 291, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_semantic, __pyx_v_semantic) < 0) __PYX_ERR(0, 291, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_config, __pyx_v_config) < 0) __PYX_ERR(0, 291, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":293
 *         CyATNConfig.__init__(state=state, alt=alt, context=context, semantic=semantic, config=config)
 * 
 *         if config is not None:             # <<<<<<<<<<<<<<
 *             if lexerActionExecutor is None:
 *                 lexerActionExecutor = config.lexerActionExecutor
 */
  __pyx_t_4 = (__pyx_v_config != Py_None);
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "omnibus/_ext/cy/antlr.pyx":294
 * 
 *         if config is not None:
 *             if lexerActionExecutor is None:             # <<<<<<<<<<<<<<
 *                 lexerActionExecutor = config.lexerActionExecutor
 * 
 */
    __pyx_t_5 = (__pyx_v_lexerActionExecutor == Py_None);
    __pyx_t_4 = (__pyx_t_5 != 0);
    if (__pyx_t_4) {

      /* "omnibus/_ext/cy/antlr.pyx":295
 *         if config is not None:
 *             if lexerActionExecutor is None:
 *                 lexerActionExecutor = config.lexerActionExecutor             # <<<<<<<<<<<<<<
 * 
 *         # This is the backing field for {@link #getLexerActionExecutor}.
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_lexerActionExecutor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 295, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_lexerActionExecutor, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "omnibus/_ext/cy/antlr.pyx":294
 * 
 *         if config is not None:
 *             if lexerActionExecutor is None:             # <<<<<<<<<<<<<<
 *                 lexerActionExecutor = config.lexerActionExecutor
 * 
 */
    }

    /* "omnibus/_ext/cy/antlr.pyx":293
 *         CyATNConfig.__init__(state=state, alt=alt, context=context, semantic=semantic, config=config)
 * 
 *         if config is not None:             # <<<<<<<<<<<<<<
 *             if lexerActionExecutor is None:
 *                 lexerActionExecutor = config.lexerActionExecutor
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":298
 * 
 *         # This is the backing field for {@link #getLexerActionExecutor}.
 *         self.lexerActionExecutor = lexerActionExecutor             # <<<<<<<<<<<<<<
 *         self.passedThroughNonGreedyDecision = False if config is None else self.checkNonGreedyDecision(config, state)
 * 
 */
  __Pyx_INCREF(__pyx_v_lexerActionExecutor);
  __Pyx_GIVEREF(__pyx_v_lexerActionExecutor);
  __Pyx_GOTREF(__pyx_v_self->lexerActionExecutor);
  __Pyx_DECREF(__pyx_v_self->lexerActionExecutor);
  __pyx_v_self->lexerActionExecutor = __pyx_v_lexerActionExecutor;

  /* "omnibus/_ext/cy/antlr.pyx":299
 *         # This is the backing field for {@link #getLexerActionExecutor}.
 *         self.lexerActionExecutor = lexerActionExecutor
 *         self.passedThroughNonGreedyDecision = False if config is None else self.checkNonGreedyDecision(config, state)             # <<<<<<<<<<<<<<
 * 
 *     def __hash__(self):
 */
  __pyx_t_4 = (__pyx_v_config == Py_None);
  if ((__pyx_t_4 != 0)) {
    __pyx_t_3 = ((PyObject *)0);
  } else {
    __pyx_t_2 = ((struct __pyx_vtabstruct_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)__pyx_v_self->__pyx_base.__pyx_vtab)->checkNonGreedyDecision(__pyx_v_self, __pyx_v_config, __pyx_v_state, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 299, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_6 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 299, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = ((PyObject *)__pyx_t_6);
  }
  __pyx_v_self->passedThroughNonGreedyDecision = ((bool)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":282
 *     cdef bool passedThroughNonGreedyDecision
 * 
 *     def __init__(             # <<<<<<<<<<<<<<
 *             self,
 *             state: ATNState,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyLexerATNConfig.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_lexerActionExecutor);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":301
 *         self.passedThroughNonGreedyDecision = False if config is None else self.checkNonGreedyDecision(config, state)
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return hash((
 *             self.state.stateNumber,
 */

/* Python wrapper */
static Py_hash_t __pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_3__hash__(PyObject *__pyx_v_self); /*proto*/
static Py_hash_t __pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_3__hash__(PyObject *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__hash__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_2__hash__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_hash_t __pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_2__hash__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_hash_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__hash__", 0);

  /* "omnibus/_ext/cy/antlr.pyx":303
 *     def __hash__(self):
 *         return hash((
 *             self.state.stateNumber,             # <<<<<<<<<<<<<<
 *             self.alt,
 *             self.context,
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->__pyx_base.state, __pyx_n_s_stateNumber); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "omnibus/_ext/cy/antlr.pyx":304
 *         return hash((
 *             self.state.stateNumber,
 *             self.alt,             # <<<<<<<<<<<<<<
 *             self.context,
 *             self.semanticContext,
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx_base.alt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "omnibus/_ext/cy/antlr.pyx":306
 *             self.alt,
 *             self.context,
 *             self.semanticContext,             # <<<<<<<<<<<<<<
 *             self.passedThroughNonGreedyDecision,
 *             self.lexerActionExecutor,
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "omnibus/_ext/cy/antlr.pyx":307
 *             self.context,
 *             self.semanticContext,
 *             self.passedThroughNonGreedyDecision,             # <<<<<<<<<<<<<<
 *             self.lexerActionExecutor,
 *         ))
 */
  __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_v_self->passedThroughNonGreedyDecision); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "omnibus/_ext/cy/antlr.pyx":303
 *     def __hash__(self):
 *         return hash((
 *             self.state.stateNumber,             # <<<<<<<<<<<<<<
 *             self.alt,
 *             self.context,
 */
  __pyx_t_5 = PyTuple_New(6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_2);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.context);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.context);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_self->__pyx_base.context);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 4, __pyx_t_4);
  __Pyx_INCREF(__pyx_v_self->lexerActionExecutor);
  __Pyx_GIVEREF(__pyx_v_self->lexerActionExecutor);
  PyTuple_SET_ITEM(__pyx_t_5, 5, __pyx_v_self->lexerActionExecutor);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":302
 * 
 *     def __hash__(self):
 *         return hash((             # <<<<<<<<<<<<<<
 *             self.state.stateNumber,
 *             self.alt,
 */
  __pyx_t_6 = PyObject_Hash(__pyx_t_5); if (unlikely(__pyx_t_6 == ((Py_hash_t)-1))) __PYX_ERR(0, 302, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_6;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":301
 *         self.passedThroughNonGreedyDecision = False if config is None else self.checkNonGreedyDecision(config, state)
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return hash((
 *             self.state.stateNumber,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyLexerATNConfig.__hash__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  if (unlikely(__pyx_r == -1) && !PyErr_Occurred()) __pyx_r = -2;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":311
 *         ))
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         if self is other:
 *             return True
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_5__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_5__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__eq__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_4__eq__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_4__eq__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__eq__", 0);

  /* "omnibus/_ext/cy/antlr.pyx":312
 * 
 *     def __eq__(self, other):
 *         if self is other:             # <<<<<<<<<<<<<<
 *             return True
 *         elif not isinstance(other, LexerATNConfig):
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_self) == __pyx_v_other);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "omnibus/_ext/cy/antlr.pyx":313
 *     def __eq__(self, other):
 *         if self is other:
 *             return True             # <<<<<<<<<<<<<<
 *         elif not isinstance(other, LexerATNConfig):
 *             return False
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_True);
    __pyx_r = Py_True;
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":312
 * 
 *     def __eq__(self, other):
 *         if self is other:             # <<<<<<<<<<<<<<
 *             return True
 *         elif not isinstance(other, LexerATNConfig):
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":314
 *         if self is other:
 *             return True
 *         elif not isinstance(other, LexerATNConfig):             # <<<<<<<<<<<<<<
 *             return False
 *         if self.passedThroughNonGreedyDecision != other.passedThroughNonGreedyDecision:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_LexerATNConfig); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyObject_IsInstance(__pyx_v_other, __pyx_t_3); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_1 = ((!(__pyx_t_2 != 0)) != 0);
  if (__pyx_t_1) {

    /* "omnibus/_ext/cy/antlr.pyx":315
 *             return True
 *         elif not isinstance(other, LexerATNConfig):
 *             return False             # <<<<<<<<<<<<<<
 *         if self.passedThroughNonGreedyDecision != other.passedThroughNonGreedyDecision:
 *             return False
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":314
 *         if self is other:
 *             return True
 *         elif not isinstance(other, LexerATNConfig):             # <<<<<<<<<<<<<<
 *             return False
 *         if self.passedThroughNonGreedyDecision != other.passedThroughNonGreedyDecision:
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":316
 *         elif not isinstance(other, LexerATNConfig):
 *             return False
 *         if self.passedThroughNonGreedyDecision != other.passedThroughNonGreedyDecision:             # <<<<<<<<<<<<<<
 *             return False
 *         if not (self.lexerActionExecutor == other.lexerActionExecutor):
 */
  __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_self->passedThroughNonGreedyDecision); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_passedThroughNonGreedyDecision); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_3, __pyx_t_4, Py_NE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_1) {

    /* "omnibus/_ext/cy/antlr.pyx":317
 *             return False
 *         if self.passedThroughNonGreedyDecision != other.passedThroughNonGreedyDecision:
 *             return False             # <<<<<<<<<<<<<<
 *         if not (self.lexerActionExecutor == other.lexerActionExecutor):
 *             return False
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":316
 *         elif not isinstance(other, LexerATNConfig):
 *             return False
 *         if self.passedThroughNonGreedyDecision != other.passedThroughNonGreedyDecision:             # <<<<<<<<<<<<<<
 *             return False
 *         if not (self.lexerActionExecutor == other.lexerActionExecutor):
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":318
 *         if self.passedThroughNonGreedyDecision != other.passedThroughNonGreedyDecision:
 *             return False
 *         if not (self.lexerActionExecutor == other.lexerActionExecutor):             # <<<<<<<<<<<<<<
 *             return False
 *         return CyATNConfig.__eq__(other)
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_lexerActionExecutor); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyObject_RichCompare(__pyx_v_self->lexerActionExecutor, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 318, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 318, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_2 = ((!__pyx_t_1) != 0);
  if (__pyx_t_2) {

    /* "omnibus/_ext/cy/antlr.pyx":319
 *             return False
 *         if not (self.lexerActionExecutor == other.lexerActionExecutor):
 *             return False             # <<<<<<<<<<<<<<
 *         return CyATNConfig.__eq__(other)
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":318
 *         if self.passedThroughNonGreedyDecision != other.passedThroughNonGreedyDecision:
 *             return False
 *         if not (self.lexerActionExecutor == other.lexerActionExecutor):             # <<<<<<<<<<<<<<
 *             return False
 *         return CyATNConfig.__eq__(other)
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":320
 *         if not (self.lexerActionExecutor == other.lexerActionExecutor):
 *             return False
 *         return CyATNConfig.__eq__(other)             # <<<<<<<<<<<<<<
 * 
 *     cpdef hashCodeForConfigSet(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig), __pyx_n_s_eq); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_v_other) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_other);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":311
 *         ))
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         if self is other:
 *             return True
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyLexerATNConfig.__eq__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":322
 *         return CyATNConfig.__eq__(other)
 * 
 *     cpdef hashCodeForConfigSet(self):             # <<<<<<<<<<<<<<
 *         return hash(self)
 * 
 */

static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_7hashCodeForConfigSet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_hashCodeForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_hash_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("hashCodeForConfigSet", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_hashCodeForConfigSet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 322, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_7hashCodeForConfigSet)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 322, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "omnibus/_ext/cy/antlr.pyx":323
 * 
 *     cpdef hashCodeForConfigSet(self):
 *         return hash(self)             # <<<<<<<<<<<<<<
 * 
 *     cpdef equalsForConfigSet(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = PyObject_Hash(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == ((Py_hash_t)-1))) __PYX_ERR(0, 323, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyInt_FromHash_t(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":322
 *         return CyATNConfig.__eq__(other)
 * 
 *     cpdef hashCodeForConfigSet(self):             # <<<<<<<<<<<<<<
 *         return hash(self)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyLexerATNConfig.hashCodeForConfigSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_7hashCodeForConfigSet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_6hashCodeForConfigSet[] = "CyLexerATNConfig.hashCodeForConfigSet(self)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_7hashCodeForConfigSet = {"hashCodeForConfigSet", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_7hashCodeForConfigSet, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_6hashCodeForConfigSet};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_7hashCodeForConfigSet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("hashCodeForConfigSet (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_6hashCodeForConfigSet(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_6hashCodeForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("hashCodeForConfigSet", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_hashCodeForConfigSet(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyLexerATNConfig.hashCodeForConfigSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":325
 *         return hash(self)
 * 
 *     cpdef equalsForConfigSet(self, other):             # <<<<<<<<<<<<<<
 *         return self == other
 * 
 */

static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_9equalsForConfigSet(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_equalsForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("equalsForConfigSet", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_equalsForConfigSet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 325, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_9equalsForConfigSet)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_v_other) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_other);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 325, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "omnibus/_ext/cy/antlr.pyx":326
 * 
 *     cpdef equalsForConfigSet(self, other):
 *         return self == other             # <<<<<<<<<<<<<<
 * 
 *     cpdef checkNonGreedyDecision(self, source: LexerATNConfig, target: ATNState):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_RichCompare(((PyObject *)__pyx_v_self), __pyx_v_other, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 326, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":325
 *         return hash(self)
 * 
 *     cpdef equalsForConfigSet(self, other):             # <<<<<<<<<<<<<<
 *         return self == other
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyLexerATNConfig.equalsForConfigSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_9equalsForConfigSet(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_8equalsForConfigSet[] = "CyLexerATNConfig.equalsForConfigSet(self, other)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_9equalsForConfigSet = {"equalsForConfigSet", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_9equalsForConfigSet, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_8equalsForConfigSet};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_9equalsForConfigSet(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("equalsForConfigSet (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_8equalsForConfigSet(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_8equalsForConfigSet(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("equalsForConfigSet", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_equalsForConfigSet(__pyx_v_self, __pyx_v_other, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyLexerATNConfig.equalsForConfigSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":328
 *         return self == other
 * 
 *     cpdef checkNonGreedyDecision(self, source: LexerATNConfig, target: ATNState):             # <<<<<<<<<<<<<<
 *         return source.passedThroughNonGreedyDecision or isinstance(target, DecisionState) and target.nonGreedy
 * 
 */

static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_11checkNonGreedyDecision(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_checkNonGreedyDecision(CYTHON_UNUSED struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v_source, PyObject *__pyx_v_target, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("checkNonGreedyDecision", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkNonGreedyDecision); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 328, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_11checkNonGreedyDecision)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_source, __pyx_v_target};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 328, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_source, __pyx_v_target};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 328, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        {
          __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 328, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_INCREF(__pyx_v_source);
          __Pyx_GIVEREF(__pyx_v_source);
          PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_source);
          __Pyx_INCREF(__pyx_v_target);
          __Pyx_GIVEREF(__pyx_v_target);
          PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_target);
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 328, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "omnibus/_ext/cy/antlr.pyx":329
 * 
 *     cpdef checkNonGreedyDecision(self, source: LexerATNConfig, target: ATNState):
 *         return source.passedThroughNonGreedyDecision or isinstance(target, DecisionState) and target.nonGreedy             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_source, __pyx_n_s_passedThroughNonGreedyDecision); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 329, __pyx_L1_error)
  if (!__pyx_t_7) {
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3_bool_binop_done;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_DecisionState); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = PyObject_IsInstance(__pyx_v_target, __pyx_t_2); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 329, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_7) {
  } else {
    __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 329, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_target, __pyx_n_s_nonGreedy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_1 = __pyx_t_2;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_L3_bool_binop_done:;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":328
 *         return self == other
 * 
 *     cpdef checkNonGreedyDecision(self, source: LexerATNConfig, target: ATNState):             # <<<<<<<<<<<<<<
 *         return source.passedThroughNonGreedyDecision or isinstance(target, DecisionState) and target.nonGreedy
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyLexerATNConfig.checkNonGreedyDecision", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_11checkNonGreedyDecision(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_10checkNonGreedyDecision[] = "CyLexerATNConfig.checkNonGreedyDecision(self, source: LexerATNConfig, target: ATNState)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_11checkNonGreedyDecision = {"checkNonGreedyDecision", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_11checkNonGreedyDecision, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_10checkNonGreedyDecision};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_11checkNonGreedyDecision(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_source = 0;
  PyObject *__pyx_v_target = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("checkNonGreedyDecision (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_source,&__pyx_n_s_target,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_source)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_target)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("checkNonGreedyDecision", 1, 2, 2, 1); __PYX_ERR(0, 328, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "checkNonGreedyDecision") < 0)) __PYX_ERR(0, 328, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_source = values[0];
    __pyx_v_target = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("checkNonGreedyDecision", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 328, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyLexerATNConfig.checkNonGreedyDecision", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_10checkNonGreedyDecision(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)__pyx_v_self), __pyx_v_source, __pyx_v_target);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_10checkNonGreedyDecision(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v_source, PyObject *__pyx_v_target) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("checkNonGreedyDecision", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_checkNonGreedyDecision(__pyx_v_self, __pyx_v_source, __pyx_v_target, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyLexerATNConfig.checkNonGreedyDecision", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_13__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_12__reduce_cython__[] = "CyLexerATNConfig.__reduce_cython__(self)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_13__reduce_cython__ = {"__reduce_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_13__reduce_cython__, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_12__reduce_cython__};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_13__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_12__reduce_cython__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_12__reduce_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.alt, self.context, self.lexerActionExecutor, self.passedThroughNonGreedyDecision, self.precedenceFilterSuppressed, self.reachesIntoOuterContext, self.semantic, self.state)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx_base.alt); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_self->passedThroughNonGreedyDecision); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_self->__pyx_base.precedenceFilterSuppressed); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->__pyx_base.reachesIntoOuterContext); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(8); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.context);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.context);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_self->__pyx_base.context);
  __Pyx_INCREF(__pyx_v_self->lexerActionExecutor);
  __Pyx_GIVEREF(__pyx_v_self->lexerActionExecutor);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_self->lexerActionExecutor);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 4, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 5, __pyx_t_4);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.semantic);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.semantic);
  PyTuple_SET_ITEM(__pyx_t_5, 6, __pyx_v_self->__pyx_base.semantic);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.state);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.state);
  PyTuple_SET_ITEM(__pyx_t_5, 7, __pyx_v_self->__pyx_base.state);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.alt, self.context, self.lexerActionExecutor, self.passedThroughNonGreedyDecision, self.precedenceFilterSuppressed, self.reachesIntoOuterContext, self.semantic, self.state)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_5 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_v__dict = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "(tree fragment)":7
 *     state = (self.alt, self.context, self.lexerActionExecutor, self.passedThroughNonGreedyDecision, self.precedenceFilterSuppressed, self.reachesIntoOuterContext, self.semantic, self.state)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_6 = (__pyx_v__dict != Py_None);
  __pyx_t_7 = (__pyx_t_6 != 0);
  if (__pyx_t_7) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v__dict);
    __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.context is not None or self.lexerActionExecutor is not None or self.semantic is not None or self.state is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.alt, self.context, self.lexerActionExecutor, self.passedThroughNonGreedyDecision, self.precedenceFilterSuppressed, self.reachesIntoOuterContext, self.semantic, self.state)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.context is not None or self.lexerActionExecutor is not None or self.semantic is not None or self.state is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_CyLexerATNConfig, (type(self), 0x55e4a68, None), state
 */
  /*else*/ {
    __pyx_t_6 = (__pyx_v_self->__pyx_base.context != Py_None);
    __pyx_t_8 = (__pyx_t_6 != 0);
    if (!__pyx_t_8) {
    } else {
      __pyx_t_7 = __pyx_t_8;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_8 = (__pyx_v_self->lexerActionExecutor != Py_None);
    __pyx_t_6 = (__pyx_t_8 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_7 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->__pyx_base.semantic != Py_None);
    __pyx_t_8 = (__pyx_t_6 != 0);
    if (!__pyx_t_8) {
    } else {
      __pyx_t_7 = __pyx_t_8;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_8 = (__pyx_v_self->__pyx_base.state != Py_None);
    __pyx_t_6 = (__pyx_t_8 != 0);
    __pyx_t_7 = __pyx_t_6;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_7;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.context is not None or self.lexerActionExecutor is not None or self.semantic is not None or self.state is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_CyLexerATNConfig, (type(self), 0x55e4a68, None), state
 *     else:
 */
  __pyx_t_7 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_7) {

    /* "(tree fragment)":13
 *         use_setstate = self.context is not None or self.lexerActionExecutor is not None or self.semantic is not None or self.state is not None
 *     if use_setstate:
 *         return __pyx_unpickle_CyLexerATNConfig, (type(self), 0x55e4a68, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_CyLexerATNConfig, (type(self), 0x55e4a68, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_CyLexerATNConfig); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_90065512);
    __Pyx_GIVEREF(__pyx_int_90065512);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_int_90065512);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_5, 2, Py_None);
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_state);
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.context is not None or self.lexerActionExecutor is not None or self.semantic is not None or self.state is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_CyLexerATNConfig, (type(self), 0x55e4a68, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_CyLexerATNConfig, (type(self), 0x55e4a68, None), state
 *     else:
 *         return __pyx_unpickle_CyLexerATNConfig, (type(self), 0x55e4a68, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_CyLexerATNConfig__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_CyLexerATNConfig); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_90065512);
    __Pyx_GIVEREF(__pyx_int_90065512);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_int_90065512);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_state);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
    __pyx_t_3 = 0;
    __pyx_t_5 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyLexerATNConfig.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyLexerATNConfig, (type(self), 0x55e4a68, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyLexerATNConfig__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_15__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_14__setstate_cython__[] = "CyLexerATNConfig.__setstate_cython__(self, __pyx_state)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_15__setstate_cython__ = {"__setstate_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_15__setstate_cython__, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_14__setstate_cython__};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_15__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_14__setstate_cython__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_14__setstate_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_CyLexerATNConfig, (type(self), 0x55e4a68, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_CyLexerATNConfig__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyLexerATNConfig__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyLexerATNConfig, (type(self), 0x55e4a68, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyLexerATNConfig__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyLexerATNConfig.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":347
 *     cdef object cachedHashCode
 * 
 *     def __init__(self, fullCtx: bool = True):             # <<<<<<<<<<<<<<
 *         self.configLookup = dict()
 *         self.fullCtx = fullCtx
 */

/* Python wrapper */
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  bool __pyx_v_fullCtx;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_fullCtx,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fullCtx);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 347, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_fullCtx = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_fullCtx == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 347, __pyx_L3_error)
    } else {
      __pyx_v_fullCtx = ((bool)1);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 347, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet___init__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self), __pyx_v_fullCtx);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet___init__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, bool __pyx_v_fullCtx) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "omnibus/_ext/cy/antlr.pyx":348
 * 
 *     def __init__(self, fullCtx: bool = True):
 *         self.configLookup = dict()             # <<<<<<<<<<<<<<
 *         self.fullCtx = fullCtx
 *         self.readonly_ = False
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->configLookup);
  __Pyx_DECREF(__pyx_v_self->configLookup);
  __pyx_v_self->configLookup = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":349
 *     def __init__(self, fullCtx: bool = True):
 *         self.configLookup = dict()
 *         self.fullCtx = fullCtx             # <<<<<<<<<<<<<<
 *         self.readonly_ = False
 *         self.configs = []
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_fullCtx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->fullCtx);
  __Pyx_DECREF(__pyx_v_self->fullCtx);
  __pyx_v_self->fullCtx = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":350
 *         self.configLookup = dict()
 *         self.fullCtx = fullCtx
 *         self.readonly_ = False             # <<<<<<<<<<<<<<
 *         self.configs = []
 * 
 */
  __Pyx_INCREF(Py_False);
  __Pyx_GIVEREF(Py_False);
  __Pyx_GOTREF(__pyx_v_self->readonly_);
  __Pyx_DECREF(__pyx_v_self->readonly_);
  __pyx_v_self->readonly_ = Py_False;

  /* "omnibus/_ext/cy/antlr.pyx":351
 *         self.fullCtx = fullCtx
 *         self.readonly_ = False
 *         self.configs = []             # <<<<<<<<<<<<<<
 * 
 *         self.uniqueAlt = 0
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->configs);
  __Pyx_DECREF(__pyx_v_self->configs);
  __pyx_v_self->configs = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":353
 *         self.configs = []
 * 
 *         self.uniqueAlt = 0             # <<<<<<<<<<<<<<
 *         self.conflictingAlts = None
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GOTREF(__pyx_v_self->uniqueAlt);
  __Pyx_DECREF(__pyx_v_self->uniqueAlt);
  __pyx_v_self->uniqueAlt = __pyx_int_0;

  /* "omnibus/_ext/cy/antlr.pyx":354
 * 
 *         self.uniqueAlt = 0
 *         self.conflictingAlts = None             # <<<<<<<<<<<<<<
 * 
 *         self.hasSemanticContext = False
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->conflictingAlts);
  __Pyx_DECREF(__pyx_v_self->conflictingAlts);
  __pyx_v_self->conflictingAlts = Py_None;

  /* "omnibus/_ext/cy/antlr.pyx":356
 *         self.conflictingAlts = None
 * 
 *         self.hasSemanticContext = False             # <<<<<<<<<<<<<<
 *         self.dipsIntoOuterContext = False
 * 
 */
  __Pyx_INCREF(Py_False);
  __Pyx_GIVEREF(Py_False);
  __Pyx_GOTREF(__pyx_v_self->hasSemanticContext);
  __Pyx_DECREF(__pyx_v_self->hasSemanticContext);
  __pyx_v_self->hasSemanticContext = Py_False;

  /* "omnibus/_ext/cy/antlr.pyx":357
 * 
 *         self.hasSemanticContext = False
 *         self.dipsIntoOuterContext = False             # <<<<<<<<<<<<<<
 * 
 *         self.cachedHashCode = -1
 */
  __Pyx_INCREF(Py_False);
  __Pyx_GIVEREF(Py_False);
  __Pyx_GOTREF(__pyx_v_self->dipsIntoOuterContext);
  __Pyx_DECREF(__pyx_v_self->dipsIntoOuterContext);
  __pyx_v_self->dipsIntoOuterContext = Py_False;

  /* "omnibus/_ext/cy/antlr.pyx":359
 *         self.dipsIntoOuterContext = False
 * 
 *         self.cachedHashCode = -1             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __Pyx_INCREF(__pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_int_neg_1);
  __Pyx_GOTREF(__pyx_v_self->cachedHashCode);
  __Pyx_DECREF(__pyx_v_self->cachedHashCode);
  __pyx_v_self->cachedHashCode = __pyx_int_neg_1;

  /* "omnibus/_ext/cy/antlr.pyx":347
 *     cdef object cachedHashCode
 * 
 *     def __init__(self, fullCtx: bool = True):             # <<<<<<<<<<<<<<
 *         self.configLookup = dict()
 *         self.fullCtx = fullCtx
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":361
 *         self.cachedHashCode = -1
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self.configs.__iter__()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_3__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_3__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_2__iter__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_2__iter__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "omnibus/_ext/cy/antlr.pyx":362
 * 
 *     def __iter__(self):
 *         return self.configs.__iter__()             # <<<<<<<<<<<<<<
 * 
 *     def add(self, config: ATNConfig, mergeCache=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->configs, __pyx_n_s_iter); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":361
 *         self.cachedHashCode = -1
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self.configs.__iter__()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":364
 *         return self.configs.__iter__()
 * 
 *     def add(self, config: ATNConfig, mergeCache=None):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             raise Exception("This set is readonly")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_5add(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_4add[] = "CyATNConfigSet.add(self, config: ATNConfig, mergeCache=None)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_5add = {"add", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_5add, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_4add};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_5add(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_config = 0;
  PyObject *__pyx_v_mergeCache = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_config,&__pyx_n_s_mergeCache,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_config)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_mergeCache);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "add") < 0)) __PYX_ERR(0, 364, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_config = values[0];
    __pyx_v_mergeCache = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("add", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 364, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_4add(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self), __pyx_v_config, __pyx_v_mergeCache);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_4add(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_config, PyObject *__pyx_v_mergeCache) {
  PyObject *__pyx_v_existing = NULL;
  int __pyx_v_rootIsWildcard;
  PyObject *__pyx_v_merged = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("add", 0);

  /* "omnibus/_ext/cy/antlr.pyx":365
 * 
 *     def add(self, config: ATNConfig, mergeCache=None):
 *         if self.readonly_:             # <<<<<<<<<<<<<<
 *             raise Exception("This set is readonly")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->readonly_); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 365, __pyx_L1_error)
  if (unlikely(__pyx_t_1)) {

    /* "omnibus/_ext/cy/antlr.pyx":366
 *     def add(self, config: ATNConfig, mergeCache=None):
 *         if self.readonly_:
 *             raise Exception("This set is readonly")             # <<<<<<<<<<<<<<
 * 
 *         if config.semanticContext is not SemanticContext.NONE:
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 366, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 366, __pyx_L1_error)

    /* "omnibus/_ext/cy/antlr.pyx":365
 * 
 *     def add(self, config: ATNConfig, mergeCache=None):
 *         if self.readonly_:             # <<<<<<<<<<<<<<
 *             raise Exception("This set is readonly")
 * 
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":368
 *             raise Exception("This set is readonly")
 * 
 *         if config.semanticContext is not SemanticContext.NONE:             # <<<<<<<<<<<<<<
 *             self.hasSemanticContext = True
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_SemanticContext); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_NONE); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_1 = (__pyx_t_2 != __pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_5 = (__pyx_t_1 != 0);
  if (__pyx_t_5) {

    /* "omnibus/_ext/cy/antlr.pyx":369
 * 
 *         if config.semanticContext is not SemanticContext.NONE:
 *             self.hasSemanticContext = True             # <<<<<<<<<<<<<<
 * 
 *         if config.reachesIntoOuterContext > 0:
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->hasSemanticContext);
    __Pyx_DECREF(__pyx_v_self->hasSemanticContext);
    __pyx_v_self->hasSemanticContext = Py_True;

    /* "omnibus/_ext/cy/antlr.pyx":368
 *             raise Exception("This set is readonly")
 * 
 *         if config.semanticContext is not SemanticContext.NONE:             # <<<<<<<<<<<<<<
 *             self.hasSemanticContext = True
 * 
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":371
 *             self.hasSemanticContext = True
 * 
 *         if config.reachesIntoOuterContext > 0:             # <<<<<<<<<<<<<<
 *             self.dipsIntoOuterContext = True
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_reachesIntoOuterContext); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 371, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_4, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 371, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 371, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_5) {

    /* "omnibus/_ext/cy/antlr.pyx":372
 * 
 *         if config.reachesIntoOuterContext > 0:
 *             self.dipsIntoOuterContext = True             # <<<<<<<<<<<<<<
 * 
 *         existing = self.getOrAdd(config)
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->dipsIntoOuterContext);
    __Pyx_DECREF(__pyx_v_self->dipsIntoOuterContext);
    __pyx_v_self->dipsIntoOuterContext = Py_True;

    /* "omnibus/_ext/cy/antlr.pyx":371
 *             self.hasSemanticContext = True
 * 
 *         if config.reachesIntoOuterContext > 0:             # <<<<<<<<<<<<<<
 *             self.dipsIntoOuterContext = True
 * 
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":374
 *             self.dipsIntoOuterContext = True
 * 
 *         existing = self.getOrAdd(config)             # <<<<<<<<<<<<<<
 *         if existing is config:
 *             self.cachedHashCode = -1
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getOrAdd); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 374, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_v_config) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_config);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 374, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_existing = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":375
 * 
 *         existing = self.getOrAdd(config)
 *         if existing is config:             # <<<<<<<<<<<<<<
 *             self.cachedHashCode = -1
 *             self.configs.append(config)
 */
  __pyx_t_5 = (__pyx_v_existing == __pyx_v_config);
  __pyx_t_1 = (__pyx_t_5 != 0);
  if (__pyx_t_1) {

    /* "omnibus/_ext/cy/antlr.pyx":376
 *         existing = self.getOrAdd(config)
 *         if existing is config:
 *             self.cachedHashCode = -1             # <<<<<<<<<<<<<<
 *             self.configs.append(config)
 *             return True
 */
    __Pyx_INCREF(__pyx_int_neg_1);
    __Pyx_GIVEREF(__pyx_int_neg_1);
    __Pyx_GOTREF(__pyx_v_self->cachedHashCode);
    __Pyx_DECREF(__pyx_v_self->cachedHashCode);
    __pyx_v_self->cachedHashCode = __pyx_int_neg_1;

    /* "omnibus/_ext/cy/antlr.pyx":377
 *         if existing is config:
 *             self.cachedHashCode = -1
 *             self.configs.append(config)             # <<<<<<<<<<<<<<
 *             return True
 * 
 */
    __pyx_t_6 = __Pyx_PyObject_Append(__pyx_v_self->configs, __pyx_v_config); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 377, __pyx_L1_error)

    /* "omnibus/_ext/cy/antlr.pyx":378
 *             self.cachedHashCode = -1
 *             self.configs.append(config)
 *             return True             # <<<<<<<<<<<<<<
 * 
 *         rootIsWildcard = not self.fullCtx
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_True);
    __pyx_r = Py_True;
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":375
 * 
 *         existing = self.getOrAdd(config)
 *         if existing is config:             # <<<<<<<<<<<<<<
 *             self.cachedHashCode = -1
 *             self.configs.append(config)
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":380
 *             return True
 * 
 *         rootIsWildcard = not self.fullCtx             # <<<<<<<<<<<<<<
 *         merged = merge(existing.context, config.context, rootIsWildcard, mergeCache)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->fullCtx); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 380, __pyx_L1_error)
  __pyx_v_rootIsWildcard = (!__pyx_t_1);

  /* "omnibus/_ext/cy/antlr.pyx":381
 * 
 *         rootIsWildcard = not self.fullCtx
 *         merged = merge(existing.context, config.context, rootIsWildcard, mergeCache)             # <<<<<<<<<<<<<<
 * 
 *         existing.reachesIntoOuterContext = max(existing.reachesIntoOuterContext, config.reachesIntoOuterContext)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_merge); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_existing, __pyx_n_s_context); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_PyBool_FromLong(__pyx_v_rootIsWildcard); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = NULL;
  __pyx_t_10 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_10 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_4)) {
    PyObject *__pyx_temp[5] = {__pyx_t_9, __pyx_t_3, __pyx_t_7, __pyx_t_8, __pyx_v_mergeCache};
    __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_10, 4+__pyx_t_10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 381, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
    PyObject *__pyx_temp[5] = {__pyx_t_9, __pyx_t_3, __pyx_t_7, __pyx_t_8, __pyx_v_mergeCache};
    __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_10, 4+__pyx_t_10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 381, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else
  #endif
  {
    __pyx_t_11 = PyTuple_New(4+__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    if (__pyx_t_9) {
      __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_11, 2+__pyx_t_10, __pyx_t_8);
    __Pyx_INCREF(__pyx_v_mergeCache);
    __Pyx_GIVEREF(__pyx_v_mergeCache);
    PyTuple_SET_ITEM(__pyx_t_11, 3+__pyx_t_10, __pyx_v_mergeCache);
    __pyx_t_3 = 0;
    __pyx_t_7 = 0;
    __pyx_t_8 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_11, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_merged = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":383
 *         merged = merge(existing.context, config.context, rootIsWildcard, mergeCache)
 * 
 *         existing.reachesIntoOuterContext = max(existing.reachesIntoOuterContext, config.reachesIntoOuterContext)             # <<<<<<<<<<<<<<
 * 
 *         if config.precedenceFilterSuppressed:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_reachesIntoOuterContext); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_existing, __pyx_n_s_reachesIntoOuterContext); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_8 = PyObject_RichCompare(__pyx_t_2, __pyx_t_4, Py_GT); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 383, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 383, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (__pyx_t_1) {
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_11 = __pyx_t_2;
  } else {
    __Pyx_INCREF(__pyx_t_4);
    __pyx_t_11 = __pyx_t_4;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __pyx_t_11;
  __Pyx_INCREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_existing, __pyx_n_s_reachesIntoOuterContext, __pyx_t_2) < 0) __PYX_ERR(0, 383, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":385
 *         existing.reachesIntoOuterContext = max(existing.reachesIntoOuterContext, config.reachesIntoOuterContext)
 * 
 *         if config.precedenceFilterSuppressed:             # <<<<<<<<<<<<<<
 *             existing.precedenceFilterSuppressed = True
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_precedenceFilterSuppressed); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 385, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_1) {

    /* "omnibus/_ext/cy/antlr.pyx":386
 * 
 *         if config.precedenceFilterSuppressed:
 *             existing.precedenceFilterSuppressed = True             # <<<<<<<<<<<<<<
 * 
 *         existing.context = merged
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_existing, __pyx_n_s_precedenceFilterSuppressed, Py_True) < 0) __PYX_ERR(0, 386, __pyx_L1_error)

    /* "omnibus/_ext/cy/antlr.pyx":385
 *         existing.reachesIntoOuterContext = max(existing.reachesIntoOuterContext, config.reachesIntoOuterContext)
 * 
 *         if config.precedenceFilterSuppressed:             # <<<<<<<<<<<<<<
 *             existing.precedenceFilterSuppressed = True
 * 
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":388
 *             existing.precedenceFilterSuppressed = True
 * 
 *         existing.context = merged             # <<<<<<<<<<<<<<
 * 
 *         return True
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_existing, __pyx_n_s_context, __pyx_v_merged) < 0) __PYX_ERR(0, 388, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":390
 *         existing.context = merged
 * 
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     def getOrAdd(self, config: ATNConfig):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":364
 *         return self.configs.__iter__()
 * 
 *     def add(self, config: ATNConfig, mergeCache=None):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             raise Exception("This set is readonly")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_existing);
  __Pyx_XDECREF(__pyx_v_merged);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":392
 *         return True
 * 
 *     def getOrAdd(self, config: ATNConfig):             # <<<<<<<<<<<<<<
 *         h = config.hashCodeForConfigSet()
 *         l = self.configLookup.get(h, None)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_7getOrAdd(PyObject *__pyx_v_self, PyObject *__pyx_v_config); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_6getOrAdd[] = "CyATNConfigSet.getOrAdd(self, config: ATNConfig)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_7getOrAdd = {"getOrAdd", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_7getOrAdd, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_6getOrAdd};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_7getOrAdd(PyObject *__pyx_v_self, PyObject *__pyx_v_config) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getOrAdd (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_6getOrAdd(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self), ((PyObject *)__pyx_v_config));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_8getOrAdd_2generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "omnibus/_ext/cy/antlr.pyx":396
 *         l = self.configLookup.get(h, None)
 *         if l is not None:
 *             r = next((cfg for cfg in l if config.equalsForConfigSet(cfg)), None)             # <<<<<<<<<<<<<<
 *             if r is not None:
 *                 return r
 */

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_8getOrAdd_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr *)__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr(__pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 396, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_8getOrAdd_2generator, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_getOrAdd_locals_genexpr, __pyx_n_s_omnibus__ext_cy_antlr); if (unlikely(!gen)) __PYX_ERR(0, 396, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.getOrAdd.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_8getOrAdd_2generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr *__pyx_cur_scope = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L7_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 396, __pyx_L1_error)
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_l)) { __Pyx_RaiseClosureNameError("l"); __PYX_ERR(0, 396, __pyx_L1_error) }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_l)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_l)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_outer_scope->__pyx_v_l; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_l); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 396, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 396, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 396, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 396, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 396, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 396, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 396, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_cfg);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_cfg, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_config)) { __Pyx_RaiseClosureNameError("config"); __PYX_ERR(0, 396, __pyx_L1_error) }
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_config, __pyx_n_s_equalsForConfigSet); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 396, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_cur_scope->__pyx_v_cfg) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_cur_scope->__pyx_v_cfg);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 396, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 396, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_7) {
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_cfg);
      __pyx_r = __pyx_cur_scope->__pyx_v_cfg;
      __Pyx_XGIVEREF(__pyx_t_1);
      __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
      __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
      __pyx_cur_scope->__pyx_t_2 = __pyx_t_3;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L7_resume_from_yield:;
      __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
      __pyx_cur_scope->__pyx_t_0 = 0;
      __Pyx_XGOTREF(__pyx_t_1);
      __pyx_t_2 = __pyx_cur_scope->__pyx_t_1;
      __pyx_t_3 = __pyx_cur_scope->__pyx_t_2;
      if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 396, __pyx_L1_error)
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":392
 *         return True
 * 
 *     def getOrAdd(self, config: ATNConfig):             # <<<<<<<<<<<<<<
 *         h = config.hashCodeForConfigSet()
 *         l = self.configLookup.get(h, None)
 */

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_6getOrAdd(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_config) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd *__pyx_cur_scope;
  PyObject *__pyx_v_h = NULL;
  PyObject *__pyx_v_r = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getOrAdd", 0);
  __pyx_cur_scope = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd *)__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd(__pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 392, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_config = __pyx_v_config;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_config);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_config);

  /* "omnibus/_ext/cy/antlr.pyx":393
 * 
 *     def getOrAdd(self, config: ATNConfig):
 *         h = config.hashCodeForConfigSet()             # <<<<<<<<<<<<<<
 *         l = self.configLookup.get(h, None)
 *         if l is not None:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_config, __pyx_n_s_hashCodeForConfigSet); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_h = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":394
 *     def getOrAdd(self, config: ATNConfig):
 *         h = config.hashCodeForConfigSet()
 *         l = self.configLookup.get(h, None)             # <<<<<<<<<<<<<<
 *         if l is not None:
 *             r = next((cfg for cfg in l if config.equalsForConfigSet(cfg)), None)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->configLookup, __pyx_n_s_get); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_h, Py_None};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 394, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_h, Py_None};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 394, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else
  #endif
  {
    __pyx_t_5 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 394, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_INCREF(__pyx_v_h);
    __Pyx_GIVEREF(__pyx_v_h);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_v_h);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, Py_None);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 394, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_l = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":395
 *         h = config.hashCodeForConfigSet()
 *         l = self.configLookup.get(h, None)
 *         if l is not None:             # <<<<<<<<<<<<<<
 *             r = next((cfg for cfg in l if config.equalsForConfigSet(cfg)), None)
 *             if r is not None:
 */
  __pyx_t_6 = (__pyx_cur_scope->__pyx_v_l != Py_None);
  __pyx_t_7 = (__pyx_t_6 != 0);
  if (__pyx_t_7) {

    /* "omnibus/_ext/cy/antlr.pyx":396
 *         l = self.configLookup.get(h, None)
 *         if l is not None:
 *             r = next((cfg for cfg in l if config.equalsForConfigSet(cfg)), None)             # <<<<<<<<<<<<<<
 *             if r is not None:
 *                 return r
 */
    __pyx_t_1 = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_8getOrAdd_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 396, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyIter_Next2(__pyx_t_1, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 396, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_r = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "omnibus/_ext/cy/antlr.pyx":397
 *         if l is not None:
 *             r = next((cfg for cfg in l if config.equalsForConfigSet(cfg)), None)
 *             if r is not None:             # <<<<<<<<<<<<<<
 *                 return r
 *         if l is None:
 */
    __pyx_t_7 = (__pyx_v_r != Py_None);
    __pyx_t_6 = (__pyx_t_7 != 0);
    if (__pyx_t_6) {

      /* "omnibus/_ext/cy/antlr.pyx":398
 *             r = next((cfg for cfg in l if config.equalsForConfigSet(cfg)), None)
 *             if r is not None:
 *                 return r             # <<<<<<<<<<<<<<
 *         if l is None:
 *             l = [config]
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_r);
      __pyx_r = __pyx_v_r;
      goto __pyx_L0;

      /* "omnibus/_ext/cy/antlr.pyx":397
 *         if l is not None:
 *             r = next((cfg for cfg in l if config.equalsForConfigSet(cfg)), None)
 *             if r is not None:             # <<<<<<<<<<<<<<
 *                 return r
 *         if l is None:
 */
    }

    /* "omnibus/_ext/cy/antlr.pyx":395
 *         h = config.hashCodeForConfigSet()
 *         l = self.configLookup.get(h, None)
 *         if l is not None:             # <<<<<<<<<<<<<<
 *             r = next((cfg for cfg in l if config.equalsForConfigSet(cfg)), None)
 *             if r is not None:
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":399
 *             if r is not None:
 *                 return r
 *         if l is None:             # <<<<<<<<<<<<<<
 *             l = [config]
 *             self.configLookup[h] = l
 */
  __pyx_t_6 = (__pyx_cur_scope->__pyx_v_l == Py_None);
  __pyx_t_7 = (__pyx_t_6 != 0);
  if (__pyx_t_7) {

    /* "omnibus/_ext/cy/antlr.pyx":400
 *                 return r
 *         if l is None:
 *             l = [config]             # <<<<<<<<<<<<<<
 *             self.configLookup[h] = l
 *         else:
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 400, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_cur_scope->__pyx_v_config);
    __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_config);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_cur_scope->__pyx_v_config);
    __Pyx_GOTREF(__pyx_cur_scope->__pyx_v_l);
    __Pyx_DECREF_SET(__pyx_cur_scope->__pyx_v_l, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;

    /* "omnibus/_ext/cy/antlr.pyx":401
 *         if l is None:
 *             l = [config]
 *             self.configLookup[h] = l             # <<<<<<<<<<<<<<
 *         else:
 *             l.append(config)
 */
    if (unlikely(PyObject_SetItem(__pyx_v_self->configLookup, __pyx_v_h, __pyx_cur_scope->__pyx_v_l) < 0)) __PYX_ERR(0, 401, __pyx_L1_error)

    /* "omnibus/_ext/cy/antlr.pyx":399
 *             if r is not None:
 *                 return r
 *         if l is None:             # <<<<<<<<<<<<<<
 *             l = [config]
 *             self.configLookup[h] = l
 */
    goto __pyx_L5;
  }

  /* "omnibus/_ext/cy/antlr.pyx":403
 *             self.configLookup[h] = l
 *         else:
 *             l.append(config)             # <<<<<<<<<<<<<<
 *         return config
 * 
 */
  /*else*/ {
    __pyx_t_8 = __Pyx_PyObject_Append(__pyx_cur_scope->__pyx_v_l, __pyx_cur_scope->__pyx_v_config); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(0, 403, __pyx_L1_error)
  }
  __pyx_L5:;

  /* "omnibus/_ext/cy/antlr.pyx":404
 *         else:
 *             l.append(config)
 *         return config             # <<<<<<<<<<<<<<
 * 
 *     def getStates(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_config);
  __pyx_r = __pyx_cur_scope->__pyx_v_config;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":392
 *         return True
 * 
 *     def getOrAdd(self, config: ATNConfig):             # <<<<<<<<<<<<<<
 *         h = config.hashCodeForConfigSet()
 *         l = self.configLookup.get(h, None)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.getOrAdd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_h);
  __Pyx_XDECREF(__pyx_v_r);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":406
 *         return config
 * 
 *     def getStates(self):             # <<<<<<<<<<<<<<
 *         return set(c.state for c in self.configs)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_9getStates(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_8getStates[] = "CyATNConfigSet.getStates(self)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_9getStates = {"getStates", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_9getStates, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_8getStates};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_9getStates(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getStates (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_8getStates(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_9getStates_2generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "omnibus/_ext/cy/antlr.pyx":407
 * 
 *     def getStates(self):
 *         return set(c.state for c in self.configs)             # <<<<<<<<<<<<<<
 * 
 *     def getPredicates(self):
 */

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_9getStates_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr *)__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr(__pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 407, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_9getStates_2generator1, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_getStates_locals_genexpr, __pyx_n_s_omnibus__ext_cy_antlr); if (unlikely(!gen)) __PYX_ERR(0, 407, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.getStates.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_9getStates_2generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr *__pyx_cur_scope = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 407, __pyx_L1_error)
  __pyx_r = PySet_New(NULL); if (unlikely(!__pyx_r)) __PYX_ERR(0, 407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_r);
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); __PYX_ERR(0, 407, __pyx_L1_error) }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self->configs)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self->configs)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_outer_scope->__pyx_v_self->configs; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self->configs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 407, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 407, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 407, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 407, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 407, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 407, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 407, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_c);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_c, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_c, __pyx_n_s_state); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 407, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(PySet_Add(__pyx_r, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 407, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":406
 *         return config
 * 
 *     def getStates(self):             # <<<<<<<<<<<<<<
 *         return set(c.state for c in self.configs)
 * 
 */

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_8getStates(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getStates", 0);
  __pyx_cur_scope = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates *)__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates(__pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 406, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);

  /* "omnibus/_ext/cy/antlr.pyx":407
 * 
 *     def getStates(self):
 *         return set(c.state for c in self.configs)             # <<<<<<<<<<<<<<
 * 
 *     def getPredicates(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_9getStates_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Generator_Next(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":406
 *         return config
 * 
 *     def getStates(self):             # <<<<<<<<<<<<<<
 *         return set(c.state for c in self.configs)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.getStates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":409
 *         return set(c.state for c in self.configs)
 * 
 *     def getPredicates(self):             # <<<<<<<<<<<<<<
 *         return list(cfg.semanticContext for cfg in self.configs if cfg.semanticContext != SemanticContext.NONE)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_11getPredicates(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_10getPredicates[] = "CyATNConfigSet.getPredicates(self)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_11getPredicates = {"getPredicates", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_11getPredicates, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_10getPredicates};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_11getPredicates(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getPredicates (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_10getPredicates(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_13getPredicates_2generator2(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "omnibus/_ext/cy/antlr.pyx":410
 * 
 *     def getPredicates(self):
 *         return list(cfg.semanticContext for cfg in self.configs if cfg.semanticContext != SemanticContext.NONE)             # <<<<<<<<<<<<<<
 * 
 *     def get(self, i: int):
 */

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_13getPredicates_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr *)__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr(__pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 410, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_13getPredicates_2generator2, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_getPredicates_locals_genexpr, __pyx_n_s_omnibus__ext_cy_antlr); if (unlikely(!gen)) __PYX_ERR(0, 410, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.getPredicates.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_13getPredicates_2generator2(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr *__pyx_cur_scope = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 410, __pyx_L1_error)
  __pyx_r = PyList_New(0); if (unlikely(!__pyx_r)) __PYX_ERR(0, 410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_r);
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); __PYX_ERR(0, 410, __pyx_L1_error) }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self->configs)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self->configs)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_outer_scope->__pyx_v_self->configs; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self->configs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 410, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 410, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 410, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 410, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 410, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 410, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 410, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_cfg);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_cfg, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_cfg, __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 410, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_SemanticContext); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 410, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_NONE); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 410, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_4, __pyx_t_6, Py_NE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 410, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 410, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_7) {
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_cfg, __pyx_n_s_semanticContext); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 410, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (unlikely(__Pyx_ListComp_Append(__pyx_r, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 410, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":409
 *         return set(c.state for c in self.configs)
 * 
 *     def getPredicates(self):             # <<<<<<<<<<<<<<
 *         return list(cfg.semanticContext for cfg in self.configs if cfg.semanticContext != SemanticContext.NONE)
 * 
 */

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_10getPredicates(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getPredicates", 0);
  __pyx_cur_scope = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates *)__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates(__pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 409, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);

  /* "omnibus/_ext/cy/antlr.pyx":410
 * 
 *     def getPredicates(self):
 *         return list(cfg.semanticContext for cfg in self.configs if cfg.semanticContext != SemanticContext.NONE)             # <<<<<<<<<<<<<<
 * 
 *     def get(self, i: int):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_13getPredicates_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Generator_Next(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":409
 *         return set(c.state for c in self.configs)
 * 
 *     def getPredicates(self):             # <<<<<<<<<<<<<<
 *         return list(cfg.semanticContext for cfg in self.configs if cfg.semanticContext != SemanticContext.NONE)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.getPredicates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":412
 *         return list(cfg.semanticContext for cfg in self.configs if cfg.semanticContext != SemanticContext.NONE)
 * 
 *     def get(self, i: int):             # <<<<<<<<<<<<<<
 *         return self.configs[i]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_13get(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_12get[] = "CyATNConfigSet.get(self, i: int)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_13get = {"get", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_13get, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_12get};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_13get(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_12get(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_12get(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get", 0);

  /* "omnibus/_ext/cy/antlr.pyx":413
 * 
 *     def get(self, i: int):
 *         return self.configs[i]             # <<<<<<<<<<<<<<
 * 
 *     def optimizeConfigs(self, interpreter: ATNSimulator):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_self->configs, __pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":412
 *         return list(cfg.semanticContext for cfg in self.configs if cfg.semanticContext != SemanticContext.NONE)
 * 
 *     def get(self, i: int):             # <<<<<<<<<<<<<<
 *         return self.configs[i]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":415
 *         return self.configs[i]
 * 
 *     def optimizeConfigs(self, interpreter: ATNSimulator):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             raise IllegalStateException("This set is readonly")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_15optimizeConfigs(PyObject *__pyx_v_self, PyObject *__pyx_v_interpreter); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_14optimizeConfigs[] = "CyATNConfigSet.optimizeConfigs(self, interpreter: ATNSimulator)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_15optimizeConfigs = {"optimizeConfigs", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_15optimizeConfigs, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_14optimizeConfigs};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_15optimizeConfigs(PyObject *__pyx_v_self, PyObject *__pyx_v_interpreter) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("optimizeConfigs (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_14optimizeConfigs(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self), ((PyObject *)__pyx_v_interpreter));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_14optimizeConfigs(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_interpreter) {
  PyObject *__pyx_v_config = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("optimizeConfigs", 0);

  /* "omnibus/_ext/cy/antlr.pyx":416
 * 
 *     def optimizeConfigs(self, interpreter: ATNSimulator):
 *         if self.readonly_:             # <<<<<<<<<<<<<<
 *             raise IllegalStateException("This set is readonly")
 *         if len(self.configs) == 0:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->readonly_); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 416, __pyx_L1_error)
  if (unlikely(__pyx_t_1)) {

    /* "omnibus/_ext/cy/antlr.pyx":417
 *     def optimizeConfigs(self, interpreter: ATNSimulator):
 *         if self.readonly_:
 *             raise IllegalStateException("This set is readonly")             # <<<<<<<<<<<<<<
 *         if len(self.configs) == 0:
 *             return
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_IllegalStateException); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 417, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_u_This_set_is_readonly) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_u_This_set_is_readonly);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 417, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 417, __pyx_L1_error)

    /* "omnibus/_ext/cy/antlr.pyx":416
 * 
 *     def optimizeConfigs(self, interpreter: ATNSimulator):
 *         if self.readonly_:             # <<<<<<<<<<<<<<
 *             raise IllegalStateException("This set is readonly")
 *         if len(self.configs) == 0:
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":418
 *         if self.readonly_:
 *             raise IllegalStateException("This set is readonly")
 *         if len(self.configs) == 0:             # <<<<<<<<<<<<<<
 *             return
 *         for config in self.configs:
 */
  __pyx_t_2 = __pyx_v_self->configs;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_5 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 418, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_1 = ((__pyx_t_5 == 0) != 0);
  if (__pyx_t_1) {

    /* "omnibus/_ext/cy/antlr.pyx":419
 *             raise IllegalStateException("This set is readonly")
 *         if len(self.configs) == 0:
 *             return             # <<<<<<<<<<<<<<
 *         for config in self.configs:
 *             config.context = interpreter.getCachedContext(config.context)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":418
 *         if self.readonly_:
 *             raise IllegalStateException("This set is readonly")
 *         if len(self.configs) == 0:             # <<<<<<<<<<<<<<
 *             return
 *         for config in self.configs:
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":420
 *         if len(self.configs) == 0:
 *             return
 *         for config in self.configs:             # <<<<<<<<<<<<<<
 *             config.context = interpreter.getCachedContext(config.context)
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_self->configs)) || PyTuple_CheckExact(__pyx_v_self->configs)) {
    __pyx_t_2 = __pyx_v_self->configs; __Pyx_INCREF(__pyx_t_2); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_self->configs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 420, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 420, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 420, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 420, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 420, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 420, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_2);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 420, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_config, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "omnibus/_ext/cy/antlr.pyx":421
 *             return
 *         for config in self.configs:
 *             config.context = interpreter.getCachedContext(config.context)             # <<<<<<<<<<<<<<
 * 
 *     def addAll(self, coll: list):
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_interpreter, __pyx_n_s_getCachedContext); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 421, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_context); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 421, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_3 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 421, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_config, __pyx_n_s_context, __pyx_t_3) < 0) __PYX_ERR(0, 421, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "omnibus/_ext/cy/antlr.pyx":420
 *         if len(self.configs) == 0:
 *             return
 *         for config in self.configs:             # <<<<<<<<<<<<<<
 *             config.context = interpreter.getCachedContext(config.context)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":415
 *         return self.configs[i]
 * 
 *     def optimizeConfigs(self, interpreter: ATNSimulator):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             raise IllegalStateException("This set is readonly")
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.optimizeConfigs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_config);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":423
 *             config.context = interpreter.getCachedContext(config.context)
 * 
 *     def addAll(self, coll: list):             # <<<<<<<<<<<<<<
 *         for c in coll:
 *             self.add(c)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_17addAll(PyObject *__pyx_v_self, PyObject *__pyx_v_coll); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_16addAll[] = "CyATNConfigSet.addAll(self, list coll: list)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_17addAll = {"addAll", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_17addAll, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_16addAll};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_17addAll(PyObject *__pyx_v_self, PyObject *__pyx_v_coll) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addAll (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_coll), (&PyList_Type), 1, "coll", 1))) __PYX_ERR(0, 423, __pyx_L1_error)
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_16addAll(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self), ((PyObject*)__pyx_v_coll));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_16addAll(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_coll) {
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("addAll", 0);

  /* "omnibus/_ext/cy/antlr.pyx":424
 * 
 *     def addAll(self, coll: list):
 *         for c in coll:             # <<<<<<<<<<<<<<
 *             self.add(c)
 *         return False
 */
  if (unlikely(__pyx_v_coll == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 424, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_coll; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 424, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 424, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "omnibus/_ext/cy/antlr.pyx":425
 *     def addAll(self, coll: list):
 *         for c in coll:
 *             self.add(c)             # <<<<<<<<<<<<<<
 *         return False
 * 
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_add); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 425, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_v_c) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_c);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 425, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "omnibus/_ext/cy/antlr.pyx":424
 * 
 *     def addAll(self, coll: list):
 *         for c in coll:             # <<<<<<<<<<<<<<
 *             self.add(c)
 *         return False
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":426
 *         for c in coll:
 *             self.add(c)
 *         return False             # <<<<<<<<<<<<<<
 * 
 *     def __eq__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_False);
  __pyx_r = Py_False;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":423
 *             config.context = interpreter.getCachedContext(config.context)
 * 
 *     def addAll(self, coll: list):             # <<<<<<<<<<<<<<
 *         for c in coll:
 *             self.add(c)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.addAll", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":428
 *         return False
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         if self is other:
 *             return True
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_19__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_19__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__eq__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18__eq__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18__eq__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_v_same = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__eq__", 0);

  /* "omnibus/_ext/cy/antlr.pyx":429
 * 
 *     def __eq__(self, other):
 *         if self is other:             # <<<<<<<<<<<<<<
 *             return True
 *         elif not isinstance(other, ATNConfigSet):
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_self) == __pyx_v_other);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "omnibus/_ext/cy/antlr.pyx":430
 *     def __eq__(self, other):
 *         if self is other:
 *             return True             # <<<<<<<<<<<<<<
 *         elif not isinstance(other, ATNConfigSet):
 *             return False
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_True);
    __pyx_r = Py_True;
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":429
 * 
 *     def __eq__(self, other):
 *         if self is other:             # <<<<<<<<<<<<<<
 *             return True
 *         elif not isinstance(other, ATNConfigSet):
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":431
 *         if self is other:
 *             return True
 *         elif not isinstance(other, ATNConfigSet):             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_ATNConfigSet); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 431, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyObject_IsInstance(__pyx_v_other, __pyx_t_3); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 431, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_1 = ((!(__pyx_t_2 != 0)) != 0);
  if (__pyx_t_1) {

    /* "omnibus/_ext/cy/antlr.pyx":432
 *             return True
 *         elif not isinstance(other, ATNConfigSet):
 *             return False             # <<<<<<<<<<<<<<
 * 
 *         same = (
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":431
 *         if self is other:
 *             return True
 *         elif not isinstance(other, ATNConfigSet):             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":435
 * 
 *         same = (
 *                 self.configs is not None and             # <<<<<<<<<<<<<<
 *                 self.configs == other.configs and
 *                 self.fullCtx == other.fullCtx and
 */
  __pyx_t_1 = (__pyx_v_self->configs != Py_None);
  if (__pyx_t_1) {
  } else {
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 435, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L4_bool_binop_done;
  }

  /* "omnibus/_ext/cy/antlr.pyx":436
 *         same = (
 *                 self.configs is not None and
 *                 self.configs == other.configs and             # <<<<<<<<<<<<<<
 *                 self.fullCtx == other.fullCtx and
 *                 self.uniqueAlt == other.uniqueAlt and
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_configs); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 436, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_RichCompare(__pyx_v_self->configs, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 436, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 436, __pyx_L1_error)
  if (__pyx_t_1) {
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_5);
    __pyx_t_3 = __pyx_t_5;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L4_bool_binop_done;
  }

  /* "omnibus/_ext/cy/antlr.pyx":437
 *                 self.configs is not None and
 *                 self.configs == other.configs and
 *                 self.fullCtx == other.fullCtx and             # <<<<<<<<<<<<<<
 *                 self.uniqueAlt == other.uniqueAlt and
 *                 self.conflictingAlts == other.conflictingAlts and
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_fullCtx); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyObject_RichCompare(__pyx_v_self->fullCtx, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 437, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 437, __pyx_L1_error)
  if (__pyx_t_1) {
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_4);
    __pyx_t_3 = __pyx_t_4;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L4_bool_binop_done;
  }

  /* "omnibus/_ext/cy/antlr.pyx":438
 *                 self.configs == other.configs and
 *                 self.fullCtx == other.fullCtx and
 *                 self.uniqueAlt == other.uniqueAlt and             # <<<<<<<<<<<<<<
 *                 self.conflictingAlts == other.conflictingAlts and
 *                 self.hasSemanticContext == other.hasSemanticContext and
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_uniqueAlt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 438, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_RichCompare(__pyx_v_self->uniqueAlt, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 438, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 438, __pyx_L1_error)
  if (__pyx_t_1) {
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_5);
    __pyx_t_3 = __pyx_t_5;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L4_bool_binop_done;
  }

  /* "omnibus/_ext/cy/antlr.pyx":439
 *                 self.fullCtx == other.fullCtx and
 *                 self.uniqueAlt == other.uniqueAlt and
 *                 self.conflictingAlts == other.conflictingAlts and             # <<<<<<<<<<<<<<
 *                 self.hasSemanticContext == other.hasSemanticContext and
 *                 self.dipsIntoOuterContext == other.dipsIntoOuterContext
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_conflictingAlts); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyObject_RichCompare(__pyx_v_self->conflictingAlts, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 439, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 439, __pyx_L1_error)
  if (__pyx_t_1) {
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_4);
    __pyx_t_3 = __pyx_t_4;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L4_bool_binop_done;
  }

  /* "omnibus/_ext/cy/antlr.pyx":440
 *                 self.uniqueAlt == other.uniqueAlt and
 *                 self.conflictingAlts == other.conflictingAlts and
 *                 self.hasSemanticContext == other.hasSemanticContext and             # <<<<<<<<<<<<<<
 *                 self.dipsIntoOuterContext == other.dipsIntoOuterContext
 *         )
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_hasSemanticContext); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_RichCompare(__pyx_v_self->hasSemanticContext, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 440, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 440, __pyx_L1_error)
  if (__pyx_t_1) {
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_5);
    __pyx_t_3 = __pyx_t_5;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L4_bool_binop_done;
  }

  /* "omnibus/_ext/cy/antlr.pyx":441
 *                 self.conflictingAlts == other.conflictingAlts and
 *                 self.hasSemanticContext == other.hasSemanticContext and
 *                 self.dipsIntoOuterContext == other.dipsIntoOuterContext             # <<<<<<<<<<<<<<
 *         )
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_dipsIntoOuterContext); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyObject_RichCompare(__pyx_v_self->dipsIntoOuterContext, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 441, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_INCREF(__pyx_t_4);
  __pyx_t_3 = __pyx_t_4;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_L4_bool_binop_done:;
  __pyx_v_same = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":444
 *         )
 * 
 *         return same             # <<<<<<<<<<<<<<
 * 
 *     def __hash__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_same);
  __pyx_r = __pyx_v_same;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":428
 *         return False
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         if self is other:
 *             return True
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.__eq__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_same);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":446
 *         return same
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             if self.cachedHashCode == -1:
 */

/* Python wrapper */
static Py_hash_t __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_21__hash__(PyObject *__pyx_v_self); /*proto*/
static Py_hash_t __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_21__hash__(PyObject *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__hash__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_20__hash__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_hash_t __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_20__hash__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_hash_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__hash__", 0);

  /* "omnibus/_ext/cy/antlr.pyx":447
 * 
 *     def __hash__(self):
 *         if self.readonly_:             # <<<<<<<<<<<<<<
 *             if self.cachedHashCode == -1:
 *                 self.cachedHashCode = self.hashConfigs()
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->readonly_); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 447, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "omnibus/_ext/cy/antlr.pyx":448
 *     def __hash__(self):
 *         if self.readonly_:
 *             if self.cachedHashCode == -1:             # <<<<<<<<<<<<<<
 *                 self.cachedHashCode = self.hashConfigs()
 *             return self.cachedHashCode
 */
    __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_v_self->cachedHashCode, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 448, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 448, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_1) {

      /* "omnibus/_ext/cy/antlr.pyx":449
 *         if self.readonly_:
 *             if self.cachedHashCode == -1:
 *                 self.cachedHashCode = self.hashConfigs()             # <<<<<<<<<<<<<<
 *             return self.cachedHashCode
 *         return self.hashConfigs()
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_hashConfigs); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 449, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 449, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GIVEREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_v_self->cachedHashCode);
      __Pyx_DECREF(__pyx_v_self->cachedHashCode);
      __pyx_v_self->cachedHashCode = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "omnibus/_ext/cy/antlr.pyx":448
 *     def __hash__(self):
 *         if self.readonly_:
 *             if self.cachedHashCode == -1:             # <<<<<<<<<<<<<<
 *                 self.cachedHashCode = self.hashConfigs()
 *             return self.cachedHashCode
 */
    }

    /* "omnibus/_ext/cy/antlr.pyx":450
 *             if self.cachedHashCode == -1:
 *                 self.cachedHashCode = self.hashConfigs()
 *             return self.cachedHashCode             # <<<<<<<<<<<<<<
 *         return self.hashConfigs()
 * 
 */
    __pyx_t_5 = __Pyx_PyInt_AsHash_t(__pyx_v_self->cachedHashCode); if (unlikely((__pyx_t_5 == (Py_hash_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 450, __pyx_L1_error)
    __pyx_r = __pyx_t_5;
    goto __pyx_L0;

    /* "omnibus/_ext/cy/antlr.pyx":447
 * 
 *     def __hash__(self):
 *         if self.readonly_:             # <<<<<<<<<<<<<<
 *             if self.cachedHashCode == -1:
 *                 self.cachedHashCode = self.hashConfigs()
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":451
 *                 self.cachedHashCode = self.hashConfigs()
 *             return self.cachedHashCode
 *         return self.hashConfigs()             # <<<<<<<<<<<<<<
 * 
 *     def hashConfigs(self):
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_hashConfigs); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyInt_AsHash_t(__pyx_t_2); if (unlikely((__pyx_t_5 == (Py_hash_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":446
 *         return same
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             if self.cachedHashCode == -1:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.__hash__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  if (unlikely(__pyx_r == -1) && !PyErr_Occurred()) __pyx_r = -2;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":453
 *         return self.hashConfigs()
 * 
 *     def hashConfigs(self):             # <<<<<<<<<<<<<<
 *         return reduce(lambda h, cfg: hash((h, cfg)), self.configs, 0)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_23hashConfigs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_22hashConfigs[] = "CyATNConfigSet.hashConfigs(self)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_23hashConfigs = {"hashConfigs", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_23hashConfigs, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_22hashConfigs};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_23hashConfigs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("hashConfigs (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_22hashConfigs(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":454
 * 
 *     def hashConfigs(self):
 *         return reduce(lambda h, cfg: hash((h, cfg)), self.configs, 0)             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_11hashConfigs_lambda3(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_11hashConfigs_lambda3 = {"lambda3", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_11hashConfigs_lambda3, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_11hashConfigs_lambda3(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_h = 0;
  PyObject *__pyx_v_cfg = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lambda3 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_h,&__pyx_n_s_cfg,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_h)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cfg)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("lambda3", 1, 2, 2, 1); __PYX_ERR(0, 454, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "lambda3") < 0)) __PYX_ERR(0, 454, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_h = values[0];
    __pyx_v_cfg = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("lambda3", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 454, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.hashConfigs.lambda3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_lambda_funcdef_lambda3(__pyx_self, __pyx_v_h, __pyx_v_cfg);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_lambda_funcdef_lambda3(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_h, PyObject *__pyx_v_cfg) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_hash_t __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lambda3", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 454, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_h);
  __Pyx_GIVEREF(__pyx_v_h);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_h);
  __Pyx_INCREF(__pyx_v_cfg);
  __Pyx_GIVEREF(__pyx_v_cfg);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_cfg);
  __pyx_t_2 = PyObject_Hash(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_hash_t)-1))) __PYX_ERR(0, 454, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_FromHash_t(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 454, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.hashConfigs.lambda3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":453
 *         return self.hashConfigs()
 * 
 *     def hashConfigs(self):             # <<<<<<<<<<<<<<
 *         return reduce(lambda h, cfg: hash((h, cfg)), self.configs, 0)
 * 
 */

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_22hashConfigs(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("hashConfigs", 0);

  /* "omnibus/_ext/cy/antlr.pyx":454
 * 
 *     def hashConfigs(self):
 *         return reduce(lambda h, cfg: hash((h, cfg)), self.configs, 0)             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_reduce); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 454, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_11hashConfigs_lambda3, 0, __pyx_n_s_hashConfigs_locals_lambda, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 454, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_t_3, __pyx_v_self->configs, __pyx_int_0};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 454, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_t_3, __pyx_v_self->configs, __pyx_int_0};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 454, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 454, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_3);
    __Pyx_INCREF(__pyx_v_self->configs);
    __Pyx_GIVEREF(__pyx_v_self->configs);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_self->configs);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_int_0);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 454, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":453
 *         return self.hashConfigs()
 * 
 *     def hashConfigs(self):             # <<<<<<<<<<<<<<
 *         return reduce(lambda h, cfg: hash((h, cfg)), self.configs, 0)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.hashConfigs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":456
 *         return reduce(lambda h, cfg: hash((h, cfg)), self.configs, 0)
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return len(self.configs)
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_25__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_25__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_24__len__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_24__len__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "omnibus/_ext/cy/antlr.pyx":457
 * 
 *     def __len__(self):
 *         return len(self.configs)             # <<<<<<<<<<<<<<
 * 
 *     def isEmpty(self):
 */
  __pyx_t_1 = __pyx_v_self->configs;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 457, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":456
 *         return reduce(lambda h, cfg: hash((h, cfg)), self.configs, 0)
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return len(self.configs)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.__len__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":459
 *         return len(self.configs)
 * 
 *     def isEmpty(self):             # <<<<<<<<<<<<<<
 *         return len(self.configs) == 0
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_27isEmpty(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_26isEmpty[] = "CyATNConfigSet.isEmpty(self)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_27isEmpty = {"isEmpty", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_27isEmpty, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_26isEmpty};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_27isEmpty(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isEmpty (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_26isEmpty(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_26isEmpty(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isEmpty", 0);

  /* "omnibus/_ext/cy/antlr.pyx":460
 * 
 *     def isEmpty(self):
 *         return len(self.configs) == 0             # <<<<<<<<<<<<<<
 * 
 *     def __contains__(self, config):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->configs;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyBool_FromLong((__pyx_t_2 == 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":459
 *         return len(self.configs)
 * 
 *     def isEmpty(self):             # <<<<<<<<<<<<<<
 *         return len(self.configs) == 0
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.isEmpty", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":462
 *         return len(self.configs) == 0
 * 
 *     def __contains__(self, config):             # <<<<<<<<<<<<<<
 *         if self.configLookup is None:
 *             raise UnsupportedOperationException("This method is not implemented for readonly sets.")
 */

/* Python wrapper */
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_29__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_config); /*proto*/
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_29__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_config) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__contains__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_28__contains__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self), ((PyObject *)__pyx_v_config));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_28__contains__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_config) {
  PyObject *__pyx_v_h = NULL;
  PyObject *__pyx_v_l = NULL;
  PyObject *__pyx_v_c = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__contains__", 0);

  /* "omnibus/_ext/cy/antlr.pyx":463
 * 
 *     def __contains__(self, config):
 *         if self.configLookup is None:             # <<<<<<<<<<<<<<
 *             raise UnsupportedOperationException("This method is not implemented for readonly sets.")
 *         h = config.hashCodeForConfigSet()
 */
  __pyx_t_1 = (__pyx_v_self->configLookup == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (unlikely(__pyx_t_2)) {

    /* "omnibus/_ext/cy/antlr.pyx":464
 *     def __contains__(self, config):
 *         if self.configLookup is None:
 *             raise UnsupportedOperationException("This method is not implemented for readonly sets.")             # <<<<<<<<<<<<<<
 *         h = config.hashCodeForConfigSet()
 *         l = self.configLookup.get(h, None)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_UnsupportedOperationException); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 464, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_u_This_method_is_not_implemented_f) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_u_This_method_is_not_implemented_f);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 464, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 464, __pyx_L1_error)

    /* "omnibus/_ext/cy/antlr.pyx":463
 * 
 *     def __contains__(self, config):
 *         if self.configLookup is None:             # <<<<<<<<<<<<<<
 *             raise UnsupportedOperationException("This method is not implemented for readonly sets.")
 *         h = config.hashCodeForConfigSet()
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":465
 *         if self.configLookup is None:
 *             raise UnsupportedOperationException("This method is not implemented for readonly sets.")
 *         h = config.hashCodeForConfigSet()             # <<<<<<<<<<<<<<
 *         l = self.configLookup.get(h, None)
 *         if l is not None:
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_hashCodeForConfigSet); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_h = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":466
 *             raise UnsupportedOperationException("This method is not implemented for readonly sets.")
 *         h = config.hashCodeForConfigSet()
 *         l = self.configLookup.get(h, None)             # <<<<<<<<<<<<<<
 *         if l is not None:
 *             for c in l:
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->configLookup, __pyx_n_s_get); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_6 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_4)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_v_h, Py_None};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 466, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_v_h, Py_None};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 466, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
  } else
  #endif
  {
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 466, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_v_h);
    __Pyx_GIVEREF(__pyx_v_h);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v_h);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, Py_None);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 466, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_l = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":467
 *         h = config.hashCodeForConfigSet()
 *         l = self.configLookup.get(h, None)
 *         if l is not None:             # <<<<<<<<<<<<<<
 *             for c in l:
 *                 if config.equalsForConfigSet(c):
 */
  __pyx_t_2 = (__pyx_v_l != Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "omnibus/_ext/cy/antlr.pyx":468
 *         l = self.configLookup.get(h, None)
 *         if l is not None:
 *             for c in l:             # <<<<<<<<<<<<<<
 *                 if config.equalsForConfigSet(c):
 *                     return True
 */
    if (likely(PyList_CheckExact(__pyx_v_l)) || PyTuple_CheckExact(__pyx_v_l)) {
      __pyx_t_3 = __pyx_v_l; __Pyx_INCREF(__pyx_t_3); __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_8 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_l); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 468, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_9 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 468, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_3))) {
          if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_4); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 468, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 468, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_4); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 468, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 468, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_9(__pyx_t_3);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 468, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "omnibus/_ext/cy/antlr.pyx":469
 *         if l is not None:
 *             for c in l:
 *                 if config.equalsForConfigSet(c):             # <<<<<<<<<<<<<<
 *                     return True
 *         return False
 */
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_config, __pyx_n_s_equalsForConfigSet); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 469, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
        }
      }
      __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_v_c) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_v_c);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 469, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 469, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_1) {

        /* "omnibus/_ext/cy/antlr.pyx":470
 *             for c in l:
 *                 if config.equalsForConfigSet(c):
 *                     return True             # <<<<<<<<<<<<<<
 *         return False
 * 
 */
        __pyx_r = 1;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        goto __pyx_L0;

        /* "omnibus/_ext/cy/antlr.pyx":469
 *         if l is not None:
 *             for c in l:
 *                 if config.equalsForConfigSet(c):             # <<<<<<<<<<<<<<
 *                     return True
 *         return False
 */
      }

      /* "omnibus/_ext/cy/antlr.pyx":468
 *         l = self.configLookup.get(h, None)
 *         if l is not None:
 *             for c in l:             # <<<<<<<<<<<<<<
 *                 if config.equalsForConfigSet(c):
 *                     return True
 */
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "omnibus/_ext/cy/antlr.pyx":467
 *         h = config.hashCodeForConfigSet()
 *         l = self.configLookup.get(h, None)
 *         if l is not None:             # <<<<<<<<<<<<<<
 *             for c in l:
 *                 if config.equalsForConfigSet(c):
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":471
 *                 if config.equalsForConfigSet(c):
 *                     return True
 *         return False             # <<<<<<<<<<<<<<
 * 
 *     def clear(self):
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "omnibus/_ext/cy/antlr.pyx":462
 *         return len(self.configs) == 0
 * 
 *     def __contains__(self, config):             # <<<<<<<<<<<<<<
 *         if self.configLookup is None:
 *             raise UnsupportedOperationException("This method is not implemented for readonly sets.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.__contains__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_h);
  __Pyx_XDECREF(__pyx_v_l);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":473
 *         return False
 * 
 *     def clear(self):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             raise IllegalStateException("This set is readonly")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_31clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_30clear[] = "CyATNConfigSet.clear(self)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_31clear = {"clear", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_31clear, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_30clear};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_31clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_30clear(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_30clear(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clear", 0);

  /* "omnibus/_ext/cy/antlr.pyx":474
 * 
 *     def clear(self):
 *         if self.readonly_:             # <<<<<<<<<<<<<<
 *             raise IllegalStateException("This set is readonly")
 *         self.configs.clear()
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->readonly_); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 474, __pyx_L1_error)
  if (unlikely(__pyx_t_1)) {

    /* "omnibus/_ext/cy/antlr.pyx":475
 *     def clear(self):
 *         if self.readonly_:
 *             raise IllegalStateException("This set is readonly")             # <<<<<<<<<<<<<<
 *         self.configs.clear()
 *         self.cachedHashCode = -1
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_IllegalStateException); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 475, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_u_This_set_is_readonly) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_u_This_set_is_readonly);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 475, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 475, __pyx_L1_error)

    /* "omnibus/_ext/cy/antlr.pyx":474
 * 
 *     def clear(self):
 *         if self.readonly_:             # <<<<<<<<<<<<<<
 *             raise IllegalStateException("This set is readonly")
 *         self.configs.clear()
 */
  }

  /* "omnibus/_ext/cy/antlr.pyx":476
 *         if self.readonly_:
 *             raise IllegalStateException("This set is readonly")
 *         self.configs.clear()             # <<<<<<<<<<<<<<
 *         self.cachedHashCode = -1
 *         self.configLookup.clear()
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->configs, __pyx_n_s_clear); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 476, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 476, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":477
 *             raise IllegalStateException("This set is readonly")
 *         self.configs.clear()
 *         self.cachedHashCode = -1             # <<<<<<<<<<<<<<
 *         self.configLookup.clear()
 * 
 */
  __Pyx_INCREF(__pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_int_neg_1);
  __Pyx_GOTREF(__pyx_v_self->cachedHashCode);
  __Pyx_DECREF(__pyx_v_self->cachedHashCode);
  __pyx_v_self->cachedHashCode = __pyx_int_neg_1;

  /* "omnibus/_ext/cy/antlr.pyx":478
 *         self.configs.clear()
 *         self.cachedHashCode = -1
 *         self.configLookup.clear()             # <<<<<<<<<<<<<<
 * 
 *     def setReadonly(self, readonly: bool):
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->configLookup, __pyx_n_s_clear); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 478, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 478, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":473
 *         return False
 * 
 *     def clear(self):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             raise IllegalStateException("This set is readonly")
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.clear", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":480
 *         self.configLookup.clear()
 * 
 *     def setReadonly(self, readonly: bool):             # <<<<<<<<<<<<<<
 *         self.readonly_ = readonly
 *         self.configLookup = None  # can't mod, no need for lookup cache
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_33setReadonly(PyObject *__pyx_v_self, PyObject *__pyx_arg_readonly); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_32setReadonly[] = "CyATNConfigSet.setReadonly(self, bool readonly: bool)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_33setReadonly = {"setReadonly", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_33setReadonly, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_32setReadonly};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_33setReadonly(PyObject *__pyx_v_self, PyObject *__pyx_arg_readonly) {
  bool __pyx_v_readonly;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setReadonly (wrapper)", 0);
  assert(__pyx_arg_readonly); {
    __pyx_v_readonly = __Pyx_PyObject_IsTrue(__pyx_arg_readonly); if (unlikely((__pyx_v_readonly == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 480, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.setReadonly", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_32setReadonly(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self), ((bool)__pyx_v_readonly));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_32setReadonly(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, bool __pyx_v_readonly) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setReadonly", 0);

  /* "omnibus/_ext/cy/antlr.pyx":481
 * 
 *     def setReadonly(self, readonly: bool):
 *         self.readonly_ = readonly             # <<<<<<<<<<<<<<
 *         self.configLookup = None  # can't mod, no need for lookup cache
 * 
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_readonly); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->readonly_);
  __Pyx_DECREF(__pyx_v_self->readonly_);
  __pyx_v_self->readonly_ = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":482
 *     def setReadonly(self, readonly: bool):
 *         self.readonly_ = readonly
 *         self.configLookup = None  # can't mod, no need for lookup cache             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->configLookup);
  __Pyx_DECREF(__pyx_v_self->configLookup);
  __pyx_v_self->configLookup = Py_None;

  /* "omnibus/_ext/cy/antlr.pyx":480
 *         self.configLookup.clear()
 * 
 *     def setReadonly(self, readonly: bool):             # <<<<<<<<<<<<<<
 *         self.readonly_ = readonly
 *         self.configLookup = None  # can't mod, no need for lookup cache
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.setReadonly", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":484
 *         self.configLookup = None  # can't mod, no need for lookup cache
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         with io.StringIO() as buf:
 *             buf.write(str_list(self.configs))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_35__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_35__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_34__str__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_34__str__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self) {
  PyObject *__pyx_v_buf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "omnibus/_ext/cy/antlr.pyx":485
 * 
 *     def __str__(self):
 *         with io.StringIO() as buf:             # <<<<<<<<<<<<<<
 *             buf.write(str_list(self.configs))
 *             if self.hasSemanticContext:
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_io); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 485, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_StringIO); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 485, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 485, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 485, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_enter); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 485, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 485, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __pyx_t_3;
    __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {
          __pyx_v_buf = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "omnibus/_ext/cy/antlr.pyx":486
 *     def __str__(self):
 *         with io.StringIO() as buf:
 *             buf.write(str_list(self.configs))             # <<<<<<<<<<<<<<
 *             if self.hasSemanticContext:
 *                 buf.write(",hasSemanticContext=")
 */
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 486, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_str_list); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 486, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_9 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_9)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_9);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_3 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_9, __pyx_v_self->configs) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_self->configs);
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 486, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 486, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "omnibus/_ext/cy/antlr.pyx":487
 *         with io.StringIO() as buf:
 *             buf.write(str_list(self.configs))
 *             if self.hasSemanticContext:             # <<<<<<<<<<<<<<
 *                 buf.write(",hasSemanticContext=")
 *                 buf.write(str(self.hasSemanticContext))
 */
          __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_v_self->hasSemanticContext); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 487, __pyx_L7_error)
          if (__pyx_t_10) {

            /* "omnibus/_ext/cy/antlr.pyx":488
 *             buf.write(str_list(self.configs))
 *             if self.hasSemanticContext:
 *                 buf.write(",hasSemanticContext=")             # <<<<<<<<<<<<<<
 *                 buf.write(str(self.hasSemanticContext))
 *             if self.uniqueAlt != ATN.INVALID_ALT_NUMBER:
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 488, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_1, function);
              }
            }
            __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_3, __pyx_kp_u_hasSemanticContext_2) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_kp_u_hasSemanticContext_2);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 488, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":489
 *             if self.hasSemanticContext:
 *                 buf.write(",hasSemanticContext=")
 *                 buf.write(str(self.hasSemanticContext))             # <<<<<<<<<<<<<<
 *             if self.uniqueAlt != ATN.INVALID_ALT_NUMBER:
 *                 buf.write(",uniqueAlt=")
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_self->hasSemanticContext); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 489, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_1, function);
              }
            }
            __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 489, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":487
 *         with io.StringIO() as buf:
 *             buf.write(str_list(self.configs))
 *             if self.hasSemanticContext:             # <<<<<<<<<<<<<<
 *                 buf.write(",hasSemanticContext=")
 *                 buf.write(str(self.hasSemanticContext))
 */
          }

          /* "omnibus/_ext/cy/antlr.pyx":490
 *                 buf.write(",hasSemanticContext=")
 *                 buf.write(str(self.hasSemanticContext))
 *             if self.uniqueAlt != ATN.INVALID_ALT_NUMBER:             # <<<<<<<<<<<<<<
 *                 buf.write(",uniqueAlt=")
 *                 buf.write(str(self.uniqueAlt))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_ATN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 490, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_INVALID_ALT_NUMBER); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 490, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = PyObject_RichCompare(__pyx_v_self->uniqueAlt, __pyx_t_1, Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 490, __pyx_L7_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 490, __pyx_L7_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (__pyx_t_10) {

            /* "omnibus/_ext/cy/antlr.pyx":491
 *                 buf.write(str(self.hasSemanticContext))
 *             if self.uniqueAlt != ATN.INVALID_ALT_NUMBER:
 *                 buf.write(",uniqueAlt=")             # <<<<<<<<<<<<<<
 *                 buf.write(str(self.uniqueAlt))
 *             if self.conflictingAlts is not None:
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 491, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_1, function);
              }
            }
            __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_3, __pyx_kp_u_uniqueAlt_2) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_kp_u_uniqueAlt_2);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 491, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":492
 *             if self.uniqueAlt != ATN.INVALID_ALT_NUMBER:
 *                 buf.write(",uniqueAlt=")
 *                 buf.write(str(self.uniqueAlt))             # <<<<<<<<<<<<<<
 *             if self.conflictingAlts is not None:
 *                 buf.write(",conflictingAlts=")
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 492, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_self->uniqueAlt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 492, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_1, function);
              }
            }
            __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 492, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":490
 *                 buf.write(",hasSemanticContext=")
 *                 buf.write(str(self.hasSemanticContext))
 *             if self.uniqueAlt != ATN.INVALID_ALT_NUMBER:             # <<<<<<<<<<<<<<
 *                 buf.write(",uniqueAlt=")
 *                 buf.write(str(self.uniqueAlt))
 */
          }

          /* "omnibus/_ext/cy/antlr.pyx":493
 *                 buf.write(",uniqueAlt=")
 *                 buf.write(str(self.uniqueAlt))
 *             if self.conflictingAlts is not None:             # <<<<<<<<<<<<<<
 *                 buf.write(",conflictingAlts=")
 *                 buf.write(str(self.conflictingAlts))
 */
          __pyx_t_10 = (__pyx_v_self->conflictingAlts != Py_None);
          __pyx_t_11 = (__pyx_t_10 != 0);
          if (__pyx_t_11) {

            /* "omnibus/_ext/cy/antlr.pyx":494
 *                 buf.write(str(self.uniqueAlt))
 *             if self.conflictingAlts is not None:
 *                 buf.write(",conflictingAlts=")             # <<<<<<<<<<<<<<
 *                 buf.write(str(self.conflictingAlts))
 *             if self.dipsIntoOuterContext:
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 494, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_1, function);
              }
            }
            __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_3, __pyx_kp_u_conflictingAlts_2) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_kp_u_conflictingAlts_2);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 494, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":495
 *             if self.conflictingAlts is not None:
 *                 buf.write(",conflictingAlts=")
 *                 buf.write(str(self.conflictingAlts))             # <<<<<<<<<<<<<<
 *             if self.dipsIntoOuterContext:
 *                 buf.write(",dipsIntoOuterContext")
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 495, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_self->conflictingAlts); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 495, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_1, function);
              }
            }
            __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 495, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":493
 *                 buf.write(",uniqueAlt=")
 *                 buf.write(str(self.uniqueAlt))
 *             if self.conflictingAlts is not None:             # <<<<<<<<<<<<<<
 *                 buf.write(",conflictingAlts=")
 *                 buf.write(str(self.conflictingAlts))
 */
          }

          /* "omnibus/_ext/cy/antlr.pyx":496
 *                 buf.write(",conflictingAlts=")
 *                 buf.write(str(self.conflictingAlts))
 *             if self.dipsIntoOuterContext:             # <<<<<<<<<<<<<<
 *                 buf.write(",dipsIntoOuterContext")
 *             return buf.getvalue()
 */
          __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_v_self->dipsIntoOuterContext); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 496, __pyx_L7_error)
          if (__pyx_t_11) {

            /* "omnibus/_ext/cy/antlr.pyx":497
 *                 buf.write(str(self.conflictingAlts))
 *             if self.dipsIntoOuterContext:
 *                 buf.write(",dipsIntoOuterContext")             # <<<<<<<<<<<<<<
 *             return buf.getvalue()
 * 
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 497, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_1, function);
              }
            }
            __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_3, __pyx_kp_u_dipsIntoOuterContext_2) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_kp_u_dipsIntoOuterContext_2);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 497, __pyx_L7_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "omnibus/_ext/cy/antlr.pyx":496
 *                 buf.write(",conflictingAlts=")
 *                 buf.write(str(self.conflictingAlts))
 *             if self.dipsIntoOuterContext:             # <<<<<<<<<<<<<<
 *                 buf.write(",dipsIntoOuterContext")
 *             return buf.getvalue()
 */
          }

          /* "omnibus/_ext/cy/antlr.pyx":498
 *             if self.dipsIntoOuterContext:
 *                 buf.write(",dipsIntoOuterContext")
 *             return buf.getvalue()             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __Pyx_XDECREF(__pyx_r);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_getvalue); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 498, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_1);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 498, __pyx_L7_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_r = __pyx_t_2;
          __pyx_t_2 = 0;
          goto __pyx_L11_try_return;

          /* "omnibus/_ext/cy/antlr.pyx":485
 * 
 *     def __str__(self):
 *         with io.StringIO() as buf:             # <<<<<<<<<<<<<<
 *             buf.write(str_list(self.configs))
 *             if self.hasSemanticContext:
 */
        }
        __pyx_L7_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_1, &__pyx_t_3) < 0) __PYX_ERR(0, 485, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = PyTuple_Pack(3, __pyx_t_2, __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 485, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 485, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_12);
          __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          if (__pyx_t_11 < 0) __PYX_ERR(0, 485, __pyx_L9_except_error)
          __pyx_t_10 = ((!(__pyx_t_11 != 0)) != 0);
          if (__pyx_t_10) {
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_XGIVEREF(__pyx_t_3);
            __Pyx_ErrRestoreWithState(__pyx_t_2, __pyx_t_1, __pyx_t_3);
            __pyx_t_2 = 0; __pyx_t_1 = 0; __pyx_t_3 = 0; 
            __PYX_ERR(0, 485, __pyx_L9_except_error)
          }
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L8_exception_handled;
        }
        __pyx_L9_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L1_error;
        __pyx_L11_try_return:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L4_return;
        __pyx_L8_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__6, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 485, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L6;
      }
      __pyx_L4_return: {
        __pyx_t_8 = __pyx_r;
        __pyx_r = 0;
        if (__pyx_t_4) {
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__6, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 485, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        __pyx_r = __pyx_t_8;
        __pyx_t_8 = 0;
        goto __pyx_L0;
      }
      __pyx_L6:;
    }
    goto __pyx_L20;
    __pyx_L3_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L20:;
  }

  /* "omnibus/_ext/cy/antlr.pyx":484
 *         self.configLookup = None  # can't mod, no need for lookup cache
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         with io.StringIO() as buf:
 *             buf.write(str_list(self.configs))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_buf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":342
 *     cdef object conflictingAlts
 * 
 *     cdef public object hasSemanticContext             # <<<<<<<<<<<<<<
 *     cdef object dipsIntoOuterContext
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext___get__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext___get__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->hasSemanticContext);
  __pyx_r = __pyx_v_self->hasSemanticContext;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_2__set__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_2__set__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->hasSemanticContext);
  __Pyx_DECREF(__pyx_v_self->hasSemanticContext);
  __pyx_v_self->hasSemanticContext = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_4__del__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_4__del__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->hasSemanticContext);
  __Pyx_DECREF(__pyx_v_self->hasSemanticContext);
  __pyx_v_self->hasSemanticContext = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_37__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_36__reduce_cython__[] = "CyATNConfigSet.__reduce_cython__(self)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_37__reduce_cython__ = {"__reduce_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_37__reduce_cython__, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_36__reduce_cython__};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_37__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_36__reduce_cython__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_36__reduce_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.cachedHashCode, self.configLookup, self.configs, self.conflictingAlts, self.dipsIntoOuterContext, self.fullCtx, self.hasSemanticContext, self.readonly_, self.uniqueAlt)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyTuple_New(9); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->cachedHashCode);
  __Pyx_GIVEREF(__pyx_v_self->cachedHashCode);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self->cachedHashCode);
  __Pyx_INCREF(__pyx_v_self->configLookup);
  __Pyx_GIVEREF(__pyx_v_self->configLookup);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_self->configLookup);
  __Pyx_INCREF(__pyx_v_self->configs);
  __Pyx_GIVEREF(__pyx_v_self->configs);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_self->configs);
  __Pyx_INCREF(__pyx_v_self->conflictingAlts);
  __Pyx_GIVEREF(__pyx_v_self->conflictingAlts);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_v_self->conflictingAlts);
  __Pyx_INCREF(__pyx_v_self->dipsIntoOuterContext);
  __Pyx_GIVEREF(__pyx_v_self->dipsIntoOuterContext);
  PyTuple_SET_ITEM(__pyx_t_1, 4, __pyx_v_self->dipsIntoOuterContext);
  __Pyx_INCREF(__pyx_v_self->fullCtx);
  __Pyx_GIVEREF(__pyx_v_self->fullCtx);
  PyTuple_SET_ITEM(__pyx_t_1, 5, __pyx_v_self->fullCtx);
  __Pyx_INCREF(__pyx_v_self->hasSemanticContext);
  __Pyx_GIVEREF(__pyx_v_self->hasSemanticContext);
  PyTuple_SET_ITEM(__pyx_t_1, 6, __pyx_v_self->hasSemanticContext);
  __Pyx_INCREF(__pyx_v_self->readonly_);
  __Pyx_GIVEREF(__pyx_v_self->readonly_);
  PyTuple_SET_ITEM(__pyx_t_1, 7, __pyx_v_self->readonly_);
  __Pyx_INCREF(__pyx_v_self->uniqueAlt);
  __Pyx_GIVEREF(__pyx_v_self->uniqueAlt);
  PyTuple_SET_ITEM(__pyx_t_1, 8, __pyx_v_self->uniqueAlt);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.cachedHashCode, self.configLookup, self.configs, self.conflictingAlts, self.dipsIntoOuterContext, self.fullCtx, self.hasSemanticContext, self.readonly_, self.uniqueAlt)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = (self.cachedHashCode, self.configLookup, self.configs, self.conflictingAlts, self.dipsIntoOuterContext, self.fullCtx, self.hasSemanticContext, self.readonly_, self.uniqueAlt)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict);
    __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.cachedHashCode is not None or self.configLookup is not None or self.configs is not None or self.conflictingAlts is not None or self.dipsIntoOuterContext is not None or self.fullCtx is not None or self.hasSemanticContext is not None or self.readonly_ is not None or self.uniqueAlt is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.cachedHashCode, self.configLookup, self.configs, self.conflictingAlts, self.dipsIntoOuterContext, self.fullCtx, self.hasSemanticContext, self.readonly_, self.uniqueAlt)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.cachedHashCode is not None or self.configLookup is not None or self.configs is not None or self.conflictingAlts is not None or self.dipsIntoOuterContext is not None or self.fullCtx is not None or self.hasSemanticContext is not None or self.readonly_ is not None or self.uniqueAlt is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_CyATNConfigSet, (type(self), 0x1c4e82d, None), state
 */
  /*else*/ {
    __pyx_t_2 = (__pyx_v_self->cachedHashCode != Py_None);
    __pyx_t_5 = (__pyx_t_2 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_3 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->configLookup != Py_None);
    __pyx_t_2 = (__pyx_t_5 != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_3 = __pyx_t_2;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_2 = (__pyx_v_self->configs != Py_None);
    __pyx_t_5 = (__pyx_t_2 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_3 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->conflictingAlts != Py_None);
    __pyx_t_2 = (__pyx_t_5 != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_3 = __pyx_t_2;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_2 = (__pyx_v_self->dipsIntoOuterContext != Py_None);
    __pyx_t_5 = (__pyx_t_2 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_3 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->fullCtx != Py_None);
    __pyx_t_2 = (__pyx_t_5 != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_3 = __pyx_t_2;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_2 = (__pyx_v_self->hasSemanticContext != Py_None);
    __pyx_t_5 = (__pyx_t_2 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_3 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->readonly_ != Py_None);
    __pyx_t_2 = (__pyx_t_5 != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_3 = __pyx_t_2;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_2 = (__pyx_v_self->uniqueAlt != Py_None);
    __pyx_t_5 = (__pyx_t_2 != 0);
    __pyx_t_3 = __pyx_t_5;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_3;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.cachedHashCode is not None or self.configLookup is not None or self.configs is not None or self.conflictingAlts is not None or self.dipsIntoOuterContext is not None or self.fullCtx is not None or self.hasSemanticContext is not None or self.readonly_ is not None or self.uniqueAlt is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_CyATNConfigSet, (type(self), 0x1c4e82d, None), state
 *     else:
 */
  __pyx_t_3 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":13
 *         use_setstate = self.cachedHashCode is not None or self.configLookup is not None or self.configs is not None or self.conflictingAlts is not None or self.dipsIntoOuterContext is not None or self.fullCtx is not None or self.hasSemanticContext is not None or self.readonly_ is not None or self.uniqueAlt is not None
 *     if use_setstate:
 *         return __pyx_unpickle_CyATNConfigSet, (type(self), 0x1c4e82d, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_CyATNConfigSet, (type(self), 0x1c4e82d, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_CyATNConfigSet); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_29681709);
    __Pyx_GIVEREF(__pyx_int_29681709);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_29681709);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.cachedHashCode is not None or self.configLookup is not None or self.configs is not None or self.conflictingAlts is not None or self.dipsIntoOuterContext is not None or self.fullCtx is not None or self.hasSemanticContext is not None or self.readonly_ is not None or self.uniqueAlt is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_CyATNConfigSet, (type(self), 0x1c4e82d, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_CyATNConfigSet, (type(self), 0x1c4e82d, None), state
 *     else:
 *         return __pyx_unpickle_CyATNConfigSet, (type(self), 0x1c4e82d, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_CyATNConfigSet__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pyx_unpickle_CyATNConfigSet); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_29681709);
    __Pyx_GIVEREF(__pyx_int_29681709);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_29681709);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
    __pyx_t_6 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyATNConfigSet, (type(self), 0x1c4e82d, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyATNConfigSet__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_39__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_38__setstate_cython__[] = "CyATNConfigSet.__setstate_cython__(self, __pyx_state)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_39__setstate_cython__ = {"__setstate_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_39__setstate_cython__, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_38__setstate_cython__};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_39__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_38__setstate_cython__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_38__setstate_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_CyATNConfigSet, (type(self), 0x1c4e82d, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_CyATNConfigSet__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyATNConfigSet__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyATNConfigSet, (type(self), 0x1c4e82d, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyATNConfigSet__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyATNConfigSet.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "omnibus/_ext/cy/antlr.pyx":503
 * cdef class CyOrderedATNConfigSet(CyATNConfigSet):
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         super().__init__()
 */

/* Python wrapper */
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet___init__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet___init__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "omnibus/_ext/cy/antlr.pyx":504
 * 
 *     def __init__(self):
 *         super().__init__()             # <<<<<<<<<<<<<<
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet));
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_init); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":503
 * cdef class CyOrderedATNConfigSet(CyATNConfigSet):
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         super().__init__()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyOrderedATNConfigSet.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_2__reduce_cython__[] = "CyOrderedATNConfigSet.__reduce_cython__(self)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_3__reduce_cython__, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_2__reduce_cython__};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_2__reduce_cython__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_2__reduce_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.cachedHashCode, self.configLookup, self.configs, self.conflictingAlts, self.dipsIntoOuterContext, self.fullCtx, self.hasSemanticContext, self.readonly_, self.uniqueAlt)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyTuple_New(9); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.cachedHashCode);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.cachedHashCode);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self->__pyx_base.cachedHashCode);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.configLookup);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.configLookup);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_self->__pyx_base.configLookup);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.configs);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.configs);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_self->__pyx_base.configs);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.conflictingAlts);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.conflictingAlts);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_v_self->__pyx_base.conflictingAlts);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.dipsIntoOuterContext);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.dipsIntoOuterContext);
  PyTuple_SET_ITEM(__pyx_t_1, 4, __pyx_v_self->__pyx_base.dipsIntoOuterContext);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.fullCtx);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.fullCtx);
  PyTuple_SET_ITEM(__pyx_t_1, 5, __pyx_v_self->__pyx_base.fullCtx);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.hasSemanticContext);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.hasSemanticContext);
  PyTuple_SET_ITEM(__pyx_t_1, 6, __pyx_v_self->__pyx_base.hasSemanticContext);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.readonly_);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.readonly_);
  PyTuple_SET_ITEM(__pyx_t_1, 7, __pyx_v_self->__pyx_base.readonly_);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.uniqueAlt);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.uniqueAlt);
  PyTuple_SET_ITEM(__pyx_t_1, 8, __pyx_v_self->__pyx_base.uniqueAlt);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.cachedHashCode, self.configLookup, self.configs, self.conflictingAlts, self.dipsIntoOuterContext, self.fullCtx, self.hasSemanticContext, self.readonly_, self.uniqueAlt)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = (self.cachedHashCode, self.configLookup, self.configs, self.conflictingAlts, self.dipsIntoOuterContext, self.fullCtx, self.hasSemanticContext, self.readonly_, self.uniqueAlt)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict);
    __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.cachedHashCode is not None or self.configLookup is not None or self.configs is not None or self.conflictingAlts is not None or self.dipsIntoOuterContext is not None or self.fullCtx is not None or self.hasSemanticContext is not None or self.readonly_ is not None or self.uniqueAlt is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.cachedHashCode, self.configLookup, self.configs, self.conflictingAlts, self.dipsIntoOuterContext, self.fullCtx, self.hasSemanticContext, self.readonly_, self.uniqueAlt)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.cachedHashCode is not None or self.configLookup is not None or self.configs is not None or self.conflictingAlts is not None or self.dipsIntoOuterContext is not None or self.fullCtx is not None or self.hasSemanticContext is not None or self.readonly_ is not None or self.uniqueAlt is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_CyOrderedATNConfigSet, (type(self), 0x1c4e82d, None), state
 */
  /*else*/ {
    __pyx_t_2 = (__pyx_v_self->__pyx_base.cachedHashCode != Py_None);
    __pyx_t_5 = (__pyx_t_2 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_3 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->__pyx_base.configLookup != Py_None);
    __pyx_t_2 = (__pyx_t_5 != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_3 = __pyx_t_2;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_2 = (__pyx_v_self->__pyx_base.configs != Py_None);
    __pyx_t_5 = (__pyx_t_2 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_3 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->__pyx_base.conflictingAlts != Py_None);
    __pyx_t_2 = (__pyx_t_5 != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_3 = __pyx_t_2;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_2 = (__pyx_v_self->__pyx_base.dipsIntoOuterContext != Py_None);
    __pyx_t_5 = (__pyx_t_2 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_3 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->__pyx_base.fullCtx != Py_None);
    __pyx_t_2 = (__pyx_t_5 != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_3 = __pyx_t_2;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_2 = (__pyx_v_self->__pyx_base.hasSemanticContext != Py_None);
    __pyx_t_5 = (__pyx_t_2 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_3 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->__pyx_base.readonly_ != Py_None);
    __pyx_t_2 = (__pyx_t_5 != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_3 = __pyx_t_2;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_2 = (__pyx_v_self->__pyx_base.uniqueAlt != Py_None);
    __pyx_t_5 = (__pyx_t_2 != 0);
    __pyx_t_3 = __pyx_t_5;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_3;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.cachedHashCode is not None or self.configLookup is not None or self.configs is not None or self.conflictingAlts is not None or self.dipsIntoOuterContext is not None or self.fullCtx is not None or self.hasSemanticContext is not None or self.readonly_ is not None or self.uniqueAlt is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_CyOrderedATNConfigSet, (type(self), 0x1c4e82d, None), state
 *     else:
 */
  __pyx_t_3 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":13
 *         use_setstate = self.cachedHashCode is not None or self.configLookup is not None or self.configs is not None or self.conflictingAlts is not None or self.dipsIntoOuterContext is not None or self.fullCtx is not None or self.hasSemanticContext is not None or self.readonly_ is not None or self.uniqueAlt is not None
 *     if use_setstate:
 *         return __pyx_unpickle_CyOrderedATNConfigSet, (type(self), 0x1c4e82d, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_CyOrderedATNConfigSet, (type(self), 0x1c4e82d, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_CyOrderedATNConfi); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_29681709);
    __Pyx_GIVEREF(__pyx_int_29681709);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_29681709);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.cachedHashCode is not None or self.configLookup is not None or self.configs is not None or self.conflictingAlts is not None or self.dipsIntoOuterContext is not None or self.fullCtx is not None or self.hasSemanticContext is not None or self.readonly_ is not None or self.uniqueAlt is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_CyOrderedATNConfigSet, (type(self), 0x1c4e82d, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_CyOrderedATNConfigSet, (type(self), 0x1c4e82d, None), state
 *     else:
 *         return __pyx_unpickle_CyOrderedATNConfigSet, (type(self), 0x1c4e82d, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_CyOrderedATNConfigSet__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pyx_unpickle_CyOrderedATNConfi); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_29681709);
    __Pyx_GIVEREF(__pyx_int_29681709);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_29681709);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
    __pyx_t_6 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyOrderedATNConfigSet.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyOrderedATNConfigSet, (type(self), 0x1c4e82d, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyOrderedATNConfigSet__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_4__setstate_cython__[] = "CyOrderedATNConfigSet.__setstate_cython__(self, __pyx_state)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_5__setstate_cython__, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_4__setstate_cython__};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_4__setstate_cython__(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_4__setstate_cython__(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_CyOrderedATNConfigSet, (type(self), 0x1c4e82d, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_CyOrderedATNConfigSet__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyOrderedATNConfigSet__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyOrderedATNConfigSet, (type(self), 0x1c4e82d, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyOrderedATNConfigSet__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.CyOrderedATNConfigSet.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_CyATNConfig(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_5__pyx_unpickle_CyATNConfig(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_4__pyx_unpickle_CyATNConfig[] = "__pyx_unpickle_CyATNConfig(__pyx_type, long __pyx_checksum, __pyx_state)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_5__pyx_unpickle_CyATNConfig = {"__pyx_unpickle_CyATNConfig", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7omnibus_4_ext_2cy_5antlr_5__pyx_unpickle_CyATNConfig, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_4__pyx_unpickle_CyATNConfig};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_5__pyx_unpickle_CyATNConfig(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_CyATNConfig (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CyATNConfig", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CyATNConfig", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_CyATNConfig") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CyATNConfig", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.__pyx_unpickle_CyATNConfig", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_4__pyx_unpickle_CyATNConfig(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_4__pyx_unpickle_CyATNConfig(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_CyATNConfig", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x52fdf41:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x52fdf41 = (alt, context, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x52fdf41) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x52fdf41:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x52fdf41 = (alt, context, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)
 *     __pyx_result = CyATNConfig.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum != 0x52fdf41:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x52fdf41 = (alt, context, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = CyATNConfig.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x52, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x52fdf41:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x52fdf41 = (alt, context, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x52fdf41 = (alt, context, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)
 *     __pyx_result = CyATNConfig.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CyATNConfig__set_state(<CyATNConfig> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x52fdf41 = (alt, context, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)
 *     __pyx_result = CyATNConfig.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_CyATNConfig__set_state(<CyATNConfig> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_6 = (__pyx_t_1 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":9
 *     __pyx_result = CyATNConfig.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CyATNConfig__set_state(<CyATNConfig> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_CyATNConfig__set_state(CyATNConfig __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyATNConfig__set_state(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x52fdf41 = (alt, context, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)
 *     __pyx_result = CyATNConfig.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_CyATNConfig__set_state(<CyATNConfig> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CyATNConfig__set_state(<CyATNConfig> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_CyATNConfig__set_state(CyATNConfig __pyx_result, tuple __pyx_state):
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.precedenceFilterSuppressed = __pyx_state[2]; __pyx_result.reachesIntoOuterContext = __pyx_state[3]; __pyx_result.semantic = __pyx_state[4]; __pyx_result.state = __pyx_state[5]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_CyATNConfig(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.__pyx_unpickle_CyATNConfig", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_CyATNConfig__set_state(<CyATNConfig> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_CyATNConfig__set_state(CyATNConfig __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.precedenceFilterSuppressed = __pyx_state[2]; __pyx_result.reachesIntoOuterContext = __pyx_state[3]; __pyx_result.semantic = __pyx_state[4]; __pyx_result.state = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyATNConfig__set_state(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  bool __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_CyATNConfig__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_CyATNConfig__set_state(CyATNConfig __pyx_result, tuple __pyx_state):
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.precedenceFilterSuppressed = __pyx_state[2]; __pyx_result.reachesIntoOuterContext = __pyx_state[3]; __pyx_result.semantic = __pyx_state[4]; __pyx_result.state = __pyx_state[5]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->alt = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->context);
  __Pyx_DECREF(__pyx_v___pyx_result->context);
  __pyx_v___pyx_result->context = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_3 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->precedenceFilterSuppressed = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->reachesIntoOuterContext = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->semantic);
  __Pyx_DECREF(__pyx_v___pyx_result->semantic);
  __pyx_v___pyx_result->semantic = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->state);
  __Pyx_DECREF(__pyx_v___pyx_result->state);
  __pyx_v___pyx_result->state = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_CyATNConfig__set_state(CyATNConfig __pyx_result, tuple __pyx_state):
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.precedenceFilterSuppressed = __pyx_state[2]; __pyx_result.reachesIntoOuterContext = __pyx_state[3]; __pyx_result.semantic = __pyx_state[4]; __pyx_result.state = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_5 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = ((__pyx_t_5 > 6) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_4 = __pyx_t_6;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_6 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_7 = (__pyx_t_6 != 0);
  __pyx_t_4 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_4) {

    /* "(tree fragment)":14
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.precedenceFilterSuppressed = __pyx_state[2]; __pyx_result.reachesIntoOuterContext = __pyx_state[3]; __pyx_result.semantic = __pyx_state[4]; __pyx_result.state = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[6])             # <<<<<<<<<<<<<<
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_update); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_8 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_1 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_10, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_8);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_CyATNConfig__set_state(CyATNConfig __pyx_result, tuple __pyx_state):
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.precedenceFilterSuppressed = __pyx_state[2]; __pyx_result.reachesIntoOuterContext = __pyx_state[3]; __pyx_result.semantic = __pyx_state[4]; __pyx_result.state = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_CyATNConfig__set_state(<CyATNConfig> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_CyATNConfig__set_state(CyATNConfig __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.precedenceFilterSuppressed = __pyx_state[2]; __pyx_result.reachesIntoOuterContext = __pyx_state[3]; __pyx_result.semantic = __pyx_state[4]; __pyx_result.state = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.__pyx_unpickle_CyATNConfig__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_CyLexerATNConfig(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_7__pyx_unpickle_CyLexerATNConfig(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_6__pyx_unpickle_CyLexerATNConfig[] = "__pyx_unpickle_CyLexerATNConfig(__pyx_type, long __pyx_checksum, __pyx_state)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_7__pyx_unpickle_CyLexerATNConfig = {"__pyx_unpickle_CyLexerATNConfig", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7omnibus_4_ext_2cy_5antlr_7__pyx_unpickle_CyLexerATNConfig, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_6__pyx_unpickle_CyLexerATNConfig};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_7__pyx_unpickle_CyLexerATNConfig(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_CyLexerATNConfig (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CyLexerATNConfig", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CyLexerATNConfig", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_CyLexerATNConfig") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CyLexerATNConfig", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.__pyx_unpickle_CyLexerATNConfig", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_6__pyx_unpickle_CyLexerATNConfig(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_6__pyx_unpickle_CyLexerATNConfig(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_CyLexerATNConfig", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x55e4a68:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x55e4a68 = (alt, context, lexerActionExecutor, passedThroughNonGreedyDecision, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x55e4a68) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x55e4a68:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x55e4a68 = (alt, context, lexerActionExecutor, passedThroughNonGreedyDecision, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)
 *     __pyx_result = CyLexerATNConfig.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum != 0x55e4a68:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x55e4a68 = (alt, context, lexerActionExecutor, passedThroughNonGreedyDecision, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = CyLexerATNConfig.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x55, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x55e4a68:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x55e4a68 = (alt, context, lexerActionExecutor, passedThroughNonGreedyDecision, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x55e4a68 = (alt, context, lexerActionExecutor, passedThroughNonGreedyDecision, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)
 *     __pyx_result = CyLexerATNConfig.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CyLexerATNConfig__set_state(<CyLexerATNConfig> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x55e4a68 = (alt, context, lexerActionExecutor, passedThroughNonGreedyDecision, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)
 *     __pyx_result = CyLexerATNConfig.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_CyLexerATNConfig__set_state(<CyLexerATNConfig> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_6 = (__pyx_t_1 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":9
 *     __pyx_result = CyLexerATNConfig.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CyLexerATNConfig__set_state(<CyLexerATNConfig> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_CyLexerATNConfig__set_state(CyLexerATNConfig __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyLexerATNConfig__set_state(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x55e4a68 = (alt, context, lexerActionExecutor, passedThroughNonGreedyDecision, precedenceFilterSuppressed, reachesIntoOuterContext, semantic, state))" % __pyx_checksum)
 *     __pyx_result = CyLexerATNConfig.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_CyLexerATNConfig__set_state(<CyLexerATNConfig> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CyLexerATNConfig__set_state(<CyLexerATNConfig> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_CyLexerATNConfig__set_state(CyLexerATNConfig __pyx_result, tuple __pyx_state):
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.lexerActionExecutor = __pyx_state[2]; __pyx_result.passedThroughNonGreedyDecision = __pyx_state[3]; __pyx_result.precedenceFilterSuppressed = __pyx_state[4]; __pyx_result.reachesIntoOuterContext = __pyx_state[5]; __pyx_result.semantic = __pyx_state[6]; __pyx_result.state = __pyx_state[7]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_CyLexerATNConfig(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.__pyx_unpickle_CyLexerATNConfig", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_CyLexerATNConfig__set_state(<CyLexerATNConfig> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_CyLexerATNConfig__set_state(CyLexerATNConfig __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.lexerActionExecutor = __pyx_state[2]; __pyx_result.passedThroughNonGreedyDecision = __pyx_state[3]; __pyx_result.precedenceFilterSuppressed = __pyx_state[4]; __pyx_result.reachesIntoOuterContext = __pyx_state[5]; __pyx_result.semantic = __pyx_state[6]; __pyx_result.state = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyLexerATNConfig__set_state(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  bool __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_CyLexerATNConfig__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_CyLexerATNConfig__set_state(CyLexerATNConfig __pyx_result, tuple __pyx_state):
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.lexerActionExecutor = __pyx_state[2]; __pyx_result.passedThroughNonGreedyDecision = __pyx_state[3]; __pyx_result.precedenceFilterSuppressed = __pyx_state[4]; __pyx_result.reachesIntoOuterContext = __pyx_state[5]; __pyx_result.semantic = __pyx_state[6]; __pyx_result.state = __pyx_state[7]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->__pyx_base.alt = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.context);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.context);
  __pyx_v___pyx_result->__pyx_base.context = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->lexerActionExecutor);
  __Pyx_DECREF(__pyx_v___pyx_result->lexerActionExecutor);
  __pyx_v___pyx_result->lexerActionExecutor = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_3 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->passedThroughNonGreedyDecision = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_3 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->__pyx_base.precedenceFilterSuppressed = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->__pyx_base.reachesIntoOuterContext = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.semantic);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.semantic);
  __pyx_v___pyx_result->__pyx_base.semantic = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.state);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.state);
  __pyx_v___pyx_result->__pyx_base.state = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_CyLexerATNConfig__set_state(CyLexerATNConfig __pyx_result, tuple __pyx_state):
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.lexerActionExecutor = __pyx_state[2]; __pyx_result.passedThroughNonGreedyDecision = __pyx_state[3]; __pyx_result.precedenceFilterSuppressed = __pyx_state[4]; __pyx_result.reachesIntoOuterContext = __pyx_state[5]; __pyx_result.semantic = __pyx_state[6]; __pyx_result.state = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_5 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = ((__pyx_t_5 > 8) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_4 = __pyx_t_6;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_6 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_7 = (__pyx_t_6 != 0);
  __pyx_t_4 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_4) {

    /* "(tree fragment)":14
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.lexerActionExecutor = __pyx_state[2]; __pyx_result.passedThroughNonGreedyDecision = __pyx_state[3]; __pyx_result.precedenceFilterSuppressed = __pyx_state[4]; __pyx_result.reachesIntoOuterContext = __pyx_state[5]; __pyx_result.semantic = __pyx_state[6]; __pyx_result.state = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[8])             # <<<<<<<<<<<<<<
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_update); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_8 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_1 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_10, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_8);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_CyLexerATNConfig__set_state(CyLexerATNConfig __pyx_result, tuple __pyx_state):
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.lexerActionExecutor = __pyx_state[2]; __pyx_result.passedThroughNonGreedyDecision = __pyx_state[3]; __pyx_result.precedenceFilterSuppressed = __pyx_state[4]; __pyx_result.reachesIntoOuterContext = __pyx_state[5]; __pyx_result.semantic = __pyx_state[6]; __pyx_result.state = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_CyLexerATNConfig__set_state(<CyLexerATNConfig> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_CyLexerATNConfig__set_state(CyLexerATNConfig __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.lexerActionExecutor = __pyx_state[2]; __pyx_result.passedThroughNonGreedyDecision = __pyx_state[3]; __pyx_result.precedenceFilterSuppressed = __pyx_state[4]; __pyx_result.reachesIntoOuterContext = __pyx_state[5]; __pyx_result.semantic = __pyx_state[6]; __pyx_result.state = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.__pyx_unpickle_CyLexerATNConfig__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_CyATNConfigSet(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_9__pyx_unpickle_CyATNConfigSet(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_8__pyx_unpickle_CyATNConfigSet[] = "__pyx_unpickle_CyATNConfigSet(__pyx_type, long __pyx_checksum, __pyx_state)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_9__pyx_unpickle_CyATNConfigSet = {"__pyx_unpickle_CyATNConfigSet", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7omnibus_4_ext_2cy_5antlr_9__pyx_unpickle_CyATNConfigSet, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_8__pyx_unpickle_CyATNConfigSet};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_9__pyx_unpickle_CyATNConfigSet(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_CyATNConfigSet (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CyATNConfigSet", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CyATNConfigSet", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_CyATNConfigSet") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CyATNConfigSet", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.__pyx_unpickle_CyATNConfigSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_8__pyx_unpickle_CyATNConfigSet(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_8__pyx_unpickle_CyATNConfigSet(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_CyATNConfigSet", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x1c4e82d:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x1c4e82d) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x1c4e82d:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)
 *     __pyx_result = CyATNConfigSet.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum != 0x1c4e82d:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = CyATNConfigSet.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x1c, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x1c4e82d:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)
 *     __pyx_result = CyATNConfigSet.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CyATNConfigSet__set_state(<CyATNConfigSet> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)
 *     __pyx_result = CyATNConfigSet.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_CyATNConfigSet__set_state(<CyATNConfigSet> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_6 = (__pyx_t_1 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":9
 *     __pyx_result = CyATNConfigSet.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CyATNConfigSet__set_state(<CyATNConfigSet> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_CyATNConfigSet__set_state(CyATNConfigSet __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyATNConfigSet__set_state(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)
 *     __pyx_result = CyATNConfigSet.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_CyATNConfigSet__set_state(<CyATNConfigSet> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CyATNConfigSet__set_state(<CyATNConfigSet> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_CyATNConfigSet__set_state(CyATNConfigSet __pyx_result, tuple __pyx_state):
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_CyATNConfigSet(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.__pyx_unpickle_CyATNConfigSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_CyATNConfigSet__set_state(<CyATNConfigSet> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_CyATNConfigSet__set_state(CyATNConfigSet __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyATNConfigSet__set_state(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_CyATNConfigSet__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_CyATNConfigSet__set_state(CyATNConfigSet __pyx_result, tuple __pyx_state):
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->cachedHashCode);
  __Pyx_DECREF(__pyx_v___pyx_result->cachedHashCode);
  __pyx_v___pyx_result->cachedHashCode = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->configLookup);
  __Pyx_DECREF(__pyx_v___pyx_result->configLookup);
  __pyx_v___pyx_result->configLookup = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->configs);
  __Pyx_DECREF(__pyx_v___pyx_result->configs);
  __pyx_v___pyx_result->configs = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->conflictingAlts);
  __Pyx_DECREF(__pyx_v___pyx_result->conflictingAlts);
  __pyx_v___pyx_result->conflictingAlts = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->dipsIntoOuterContext);
  __Pyx_DECREF(__pyx_v___pyx_result->dipsIntoOuterContext);
  __pyx_v___pyx_result->dipsIntoOuterContext = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->fullCtx);
  __Pyx_DECREF(__pyx_v___pyx_result->fullCtx);
  __pyx_v___pyx_result->fullCtx = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->hasSemanticContext);
  __Pyx_DECREF(__pyx_v___pyx_result->hasSemanticContext);
  __pyx_v___pyx_result->hasSemanticContext = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->readonly_);
  __Pyx_DECREF(__pyx_v___pyx_result->readonly_);
  __pyx_v___pyx_result->readonly_ = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->uniqueAlt);
  __Pyx_DECREF(__pyx_v___pyx_result->uniqueAlt);
  __pyx_v___pyx_result->uniqueAlt = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_CyATNConfigSet__set_state(CyATNConfigSet __pyx_result, tuple __pyx_state):
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_3 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_4 = ((__pyx_t_3 > 9) != 0);
  if (__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = (__pyx_t_4 != 0);
  __pyx_t_2 = __pyx_t_5;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_2) {

    /* "(tree fragment)":14
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[9])             # <<<<<<<<<<<<<<
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_update); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_6 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 9, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_CyATNConfigSet__set_state(CyATNConfigSet __pyx_result, tuple __pyx_state):
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_CyATNConfigSet__set_state(<CyATNConfigSet> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_CyATNConfigSet__set_state(CyATNConfigSet __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.__pyx_unpickle_CyATNConfigSet__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_CyOrderedATNConfigSet(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11__pyx_unpickle_CyOrderedATNConfigSet(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7omnibus_4_ext_2cy_5antlr_10__pyx_unpickle_CyOrderedATNConfigSet[] = "__pyx_unpickle_CyOrderedATNConfigSet(__pyx_type, long __pyx_checksum, __pyx_state)";
static PyMethodDef __pyx_mdef_7omnibus_4_ext_2cy_5antlr_11__pyx_unpickle_CyOrderedATNConfigSet = {"__pyx_unpickle_CyOrderedATNConfigSet", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7omnibus_4_ext_2cy_5antlr_11__pyx_unpickle_CyOrderedATNConfigSet, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_10__pyx_unpickle_CyOrderedATNConfigSet};
static PyObject *__pyx_pw_7omnibus_4_ext_2cy_5antlr_11__pyx_unpickle_CyOrderedATNConfigSet(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_CyOrderedATNConfigSet (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CyOrderedATNConfigSet", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CyOrderedATNConfigSet", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_CyOrderedATNConfigSet") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CyOrderedATNConfigSet", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.__pyx_unpickle_CyOrderedATNConfigSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7omnibus_4_ext_2cy_5antlr_10__pyx_unpickle_CyOrderedATNConfigSet(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7omnibus_4_ext_2cy_5antlr_10__pyx_unpickle_CyOrderedATNConfigSet(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_CyOrderedATNConfigSet", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x1c4e82d:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x1c4e82d) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x1c4e82d:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)
 *     __pyx_result = CyOrderedATNConfigSet.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum != 0x1c4e82d:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = CyOrderedATNConfigSet.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x1c, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x1c4e82d:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)
 *     __pyx_result = CyOrderedATNConfigSet.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CyOrderedATNConfigSet__set_state(<CyOrderedATNConfigSet> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)
 *     __pyx_result = CyOrderedATNConfigSet.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_CyOrderedATNConfigSet__set_state(<CyOrderedATNConfigSet> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_6 = (__pyx_t_1 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":9
 *     __pyx_result = CyOrderedATNConfigSet.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CyOrderedATNConfigSet__set_state(<CyOrderedATNConfigSet> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_CyOrderedATNConfigSet__set_state(CyOrderedATNConfigSet __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyOrderedATNConfigSet__set_state(((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x1c4e82d = (cachedHashCode, configLookup, configs, conflictingAlts, dipsIntoOuterContext, fullCtx, hasSemanticContext, readonly_, uniqueAlt))" % __pyx_checksum)
 *     __pyx_result = CyOrderedATNConfigSet.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_CyOrderedATNConfigSet__set_state(<CyOrderedATNConfigSet> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CyOrderedATNConfigSet__set_state(<CyOrderedATNConfigSet> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_CyOrderedATNConfigSet__set_state(CyOrderedATNConfigSet __pyx_result, tuple __pyx_state):
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_CyOrderedATNConfigSet(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.__pyx_unpickle_CyOrderedATNConfigSet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_CyOrderedATNConfigSet__set_state(<CyOrderedATNConfigSet> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_CyOrderedATNConfigSet__set_state(CyOrderedATNConfigSet __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_7omnibus_4_ext_2cy_5antlr___pyx_unpickle_CyOrderedATNConfigSet__set_state(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_CyOrderedATNConfigSet__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_CyOrderedATNConfigSet__set_state(CyOrderedATNConfigSet __pyx_result, tuple __pyx_state):
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.cachedHashCode);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.cachedHashCode);
  __pyx_v___pyx_result->__pyx_base.cachedHashCode = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.configLookup);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.configLookup);
  __pyx_v___pyx_result->__pyx_base.configLookup = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.configs);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.configs);
  __pyx_v___pyx_result->__pyx_base.configs = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.conflictingAlts);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.conflictingAlts);
  __pyx_v___pyx_result->__pyx_base.conflictingAlts = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.dipsIntoOuterContext);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.dipsIntoOuterContext);
  __pyx_v___pyx_result->__pyx_base.dipsIntoOuterContext = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.fullCtx);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.fullCtx);
  __pyx_v___pyx_result->__pyx_base.fullCtx = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.hasSemanticContext);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.hasSemanticContext);
  __pyx_v___pyx_result->__pyx_base.hasSemanticContext = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.readonly_);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.readonly_);
  __pyx_v___pyx_result->__pyx_base.readonly_ = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.uniqueAlt);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.uniqueAlt);
  __pyx_v___pyx_result->__pyx_base.uniqueAlt = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_CyOrderedATNConfigSet__set_state(CyOrderedATNConfigSet __pyx_result, tuple __pyx_state):
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_3 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_4 = ((__pyx_t_3 > 9) != 0);
  if (__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = (__pyx_t_4 != 0);
  __pyx_t_2 = __pyx_t_5;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_2) {

    /* "(tree fragment)":14
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[9])             # <<<<<<<<<<<<<<
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_update); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_6 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 9, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_CyOrderedATNConfigSet__set_state(CyOrderedATNConfigSet __pyx_result, tuple __pyx_state):
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_CyOrderedATNConfigSet__set_state(<CyOrderedATNConfigSet> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_CyOrderedATNConfigSet__set_state(CyOrderedATNConfigSet __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("omnibus._ext.cy.antlr.__pyx_unpickle_CyOrderedATNConfigSet__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_7omnibus_4_ext_2cy_5antlr_CyATNConfig __pyx_vtable_7omnibus_4_ext_2cy_5antlr_CyATNConfig;

static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyATNConfig(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *)o);
  p->__pyx_vtab = __pyx_vtabptr_7omnibus_4_ext_2cy_5antlr_CyATNConfig;
  p->state = Py_None; Py_INCREF(Py_None);
  p->context = Py_None; Py_INCREF(Py_None);
  p->semantic = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr_CyATNConfig(PyObject *o) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->state);
  Py_CLEAR(p->context);
  Py_CLEAR(p->semantic);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr_CyATNConfig(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *)o;
  if (p->state) {
    e = (*v)(p->state, a); if (e) return e;
  }
  if (p->context) {
    e = (*v)(p->context, a); if (e) return e;
  }
  if (p->semantic) {
    e = (*v)(p->semantic, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr_CyATNConfig(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *)o;
  tmp = ((PyObject*)p->state);
  p->state = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->context);
  p->context = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->semantic);
  p->semantic = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_tp_richcompare_7omnibus_4_ext_2cy_5antlr_CyATNConfig(PyObject *o1, PyObject *o2, int op) {
  switch (op) {
    case Py_EQ: {
      return __pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_3__eq__(o1, o2);
    }
    case Py_NE: {
      PyObject *ret;
      ret = __pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_3__eq__(o1, o2);
      if (likely(ret && ret != Py_NotImplemented)) {
        int b = __Pyx_PyObject_IsTrue(ret); Py_DECREF(ret);
        if (unlikely(b < 0)) return NULL;
        ret = (b) ? Py_False : Py_True;
        Py_INCREF(ret);
      }
      return ret;
    }
    default: {
      return __Pyx_NewRef(Py_NotImplemented);
    }
  }
}

static PyMethodDef __pyx_methods_7omnibus_4_ext_2cy_5antlr_CyATNConfig[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_13__reduce_cython__, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_12__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_15__setstate_cython__, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_14__setstate_cython__},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfig = {
  PyVarObject_HEAD_INIT(0, 0)
  "omnibus._ext.cy.antlr.CyATNConfig", /*tp_name*/
  sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr_CyATNConfig, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_5__hash__, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_11__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "CyATNConfig(state: ATNState = None, alt: int = None, context: PredictionContext = None, semantic: SemanticContext = None, config: ATNConfig = None)", /*tp_doc*/
  __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr_CyATNConfig, /*tp_traverse*/
  __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr_CyATNConfig, /*tp_clear*/
  __pyx_tp_richcompare_7omnibus_4_ext_2cy_5antlr_CyATNConfig, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7omnibus_4_ext_2cy_5antlr_CyATNConfig, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyATNConfig, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};
static struct __pyx_vtabstruct_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig __pyx_vtable_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig;

static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *p;
  PyObject *o = __pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyATNConfig(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7omnibus_4_ext_2cy_5antlr_CyATNConfig*)__pyx_vtabptr_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig;
  p->lexerActionExecutor = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig(PyObject *o) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->lexerActionExecutor);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr_CyATNConfig(o);
}

static int __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)o;
  e = __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr_CyATNConfig(o, v, a); if (e) return e;
  if (p->lexerActionExecutor) {
    e = (*v)(p->lexerActionExecutor, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *)o;
  __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr_CyATNConfig(o);
  tmp = ((PyObject*)p->lexerActionExecutor);
  p->lexerActionExecutor = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_tp_richcompare_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig(PyObject *o1, PyObject *o2, int op) {
  switch (op) {
    case Py_EQ: {
      return __pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_5__eq__(o1, o2);
    }
    case Py_NE: {
      PyObject *ret;
      ret = __pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_5__eq__(o1, o2);
      if (likely(ret && ret != Py_NotImplemented)) {
        int b = __Pyx_PyObject_IsTrue(ret); Py_DECREF(ret);
        if (unlikely(b < 0)) return NULL;
        ret = (b) ? Py_False : Py_True;
        Py_INCREF(ret);
      }
      return ret;
    }
    default: {
      return __Pyx_NewRef(Py_NotImplemented);
    }
  }
}

static PyMethodDef __pyx_methods_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_13__reduce_cython__, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_12__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_15__setstate_cython__, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_14__setstate_cython__},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig = {
  PyVarObject_HEAD_INIT(0, 0)
  "omnibus._ext.cy.antlr.CyLexerATNConfig", /*tp_name*/
  sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_3__hash__, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_11__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "CyLexerATNConfig(state: ATNState, alt: int = None, context: PredictionContext = None, semantic: SemanticContext = SemanticContext.NONE, lexerActionExecutor: LexerActionExecutor = None, config: LexerATNConfig = None)", /*tp_doc*/
  __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig, /*tp_traverse*/
  __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig, /*tp_clear*/
  __pyx_tp_richcompare_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)o);
  p->configLookup = Py_None; Py_INCREF(Py_None);
  p->fullCtx = Py_None; Py_INCREF(Py_None);
  p->readonly_ = Py_None; Py_INCREF(Py_None);
  p->configs = Py_None; Py_INCREF(Py_None);
  p->uniqueAlt = Py_None; Py_INCREF(Py_None);
  p->conflictingAlts = Py_None; Py_INCREF(Py_None);
  p->hasSemanticContext = Py_None; Py_INCREF(Py_None);
  p->dipsIntoOuterContext = Py_None; Py_INCREF(Py_None);
  p->cachedHashCode = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet(PyObject *o) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->configLookup);
  Py_CLEAR(p->fullCtx);
  Py_CLEAR(p->readonly_);
  Py_CLEAR(p->configs);
  Py_CLEAR(p->uniqueAlt);
  Py_CLEAR(p->conflictingAlts);
  Py_CLEAR(p->hasSemanticContext);
  Py_CLEAR(p->dipsIntoOuterContext);
  Py_CLEAR(p->cachedHashCode);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)o;
  if (p->configLookup) {
    e = (*v)(p->configLookup, a); if (e) return e;
  }
  if (p->fullCtx) {
    e = (*v)(p->fullCtx, a); if (e) return e;
  }
  if (p->readonly_) {
    e = (*v)(p->readonly_, a); if (e) return e;
  }
  if (p->configs) {
    e = (*v)(p->configs, a); if (e) return e;
  }
  if (p->uniqueAlt) {
    e = (*v)(p->uniqueAlt, a); if (e) return e;
  }
  if (p->conflictingAlts) {
    e = (*v)(p->conflictingAlts, a); if (e) return e;
  }
  if (p->hasSemanticContext) {
    e = (*v)(p->hasSemanticContext, a); if (e) return e;
  }
  if (p->dipsIntoOuterContext) {
    e = (*v)(p->dipsIntoOuterContext, a); if (e) return e;
  }
  if (p->cachedHashCode) {
    e = (*v)(p->cachedHashCode, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)o;
  tmp = ((PyObject*)p->configLookup);
  p->configLookup = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->fullCtx);
  p->fullCtx = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->readonly_);
  p->readonly_ = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->configs);
  p->configs = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->uniqueAlt);
  p->uniqueAlt = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->conflictingAlts);
  p->conflictingAlts = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->hasSemanticContext);
  p->hasSemanticContext = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->dipsIntoOuterContext);
  p->dipsIntoOuterContext = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->cachedHashCode);
  p->cachedHashCode = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_tp_richcompare_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet(PyObject *o1, PyObject *o2, int op) {
  switch (op) {
    case Py_EQ: {
      return __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_19__eq__(o1, o2);
    }
    case Py_NE: {
      PyObject *ret;
      ret = __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_19__eq__(o1, o2);
      if (likely(ret && ret != Py_NotImplemented)) {
        int b = __Pyx_PyObject_IsTrue(ret); Py_DECREF(ret);
        if (unlikely(b < 0)) return NULL;
        ret = (b) ? Py_False : Py_True;
        Py_INCREF(ret);
      }
      return ret;
    }
    default: {
      return __Pyx_NewRef(Py_NotImplemented);
    }
  }
}

static PyObject *__pyx_getprop_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_hasSemanticContext(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_1__get__(o);
}

static int __pyx_setprop_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_hasSemanticContext(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_3__set__(o, v);
  }
  else {
    return __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_18hasSemanticContext_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet[] = {
  {"add", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_5add, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_4add},
  {"getOrAdd", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_7getOrAdd, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_6getOrAdd},
  {"getStates", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_9getStates, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_8getStates},
  {"getPredicates", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_11getPredicates, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_10getPredicates},
  {"get", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_13get, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_12get},
  {"optimizeConfigs", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_15optimizeConfigs, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_14optimizeConfigs},
  {"addAll", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_17addAll, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_16addAll},
  {"hashConfigs", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_23hashConfigs, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_22hashConfigs},
  {"isEmpty", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_27isEmpty, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_26isEmpty},
  {"clear", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_31clear, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_30clear},
  {"setReadonly", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_33setReadonly, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_32setReadonly},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_37__reduce_cython__, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_36__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_39__setstate_cython__, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_38__setstate_cython__},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet[] = {
  {(char *)"hasSemanticContext", __pyx_getprop_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_hasSemanticContext, __pyx_setprop_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_hasSemanticContext, (char *)"hasSemanticContext: object", 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_CyATNConfigSet = {
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_25__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_29__contains__, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CyATNConfigSet = {
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_25__len__, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet = {
  PyVarObject_HEAD_INIT(0, 0)
  "omnibus._ext.cy.antlr.CyATNConfigSet", /*tp_name*/
  sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_CyATNConfigSet, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CyATNConfigSet, /*tp_as_mapping*/
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_21__hash__, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_35__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "CyATNConfigSet(bool fullCtx: bool = True)", /*tp_doc*/
  __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet, /*tp_traverse*/
  __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet, /*tp_clear*/
  __pyx_tp_richcompare_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_3__iter__, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static PyMethodDef __pyx_methods_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_3__reduce_cython__, METH_NOARGS, __pyx_doc_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_2__reduce_cython__},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_5__setstate_cython__, METH_O, __pyx_doc_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_4__setstate_cython__},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet = {
  PyVarObject_HEAD_INIT(0, 0)
  "omnibus._ext.cy.antlr.CyOrderedATNConfigSet", /*tp_name*/
  sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_35__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "CyOrderedATNConfigSet()", /*tp_doc*/
  __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet, /*tp_traverse*/
  __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_3__iter__, /*tp_iter*/
  #else
  0, /*tp_iter*/
  #endif
  0, /*tp_iternext*/
  __pyx_methods_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd *__pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd[8];
static int __pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd = 0;

static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd)))) {
    o = (PyObject*)__pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd[--__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd];
    memset(o, 0, sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd(PyObject *o) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_config);
  Py_CLEAR(p->__pyx_v_l);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd)))) {
    __pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd[__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd++] = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd *)o;
  if (p->__pyx_v_config) {
    e = (*v)(p->__pyx_v_config, a); if (e) return e;
  }
  if (p->__pyx_v_l) {
    e = (*v)(p->__pyx_v_l, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd *)o;
  tmp = ((PyObject*)p->__pyx_v_config);
  p->__pyx_v_config = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_l);
  p->__pyx_v_l = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd = {
  PyVarObject_HEAD_INIT(0, 0)
  "omnibus._ext.cy.antlr.__pyx_scope_struct__getOrAdd", /*tp_name*/
  sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd, /*tp_traverse*/
  __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr *__pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr[8];
static int __pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr = 0;

static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr)))) {
    o = (PyObject*)__pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr[--__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr(PyObject *o) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_cfg);
  Py_CLEAR(p->__pyx_t_0);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr)))) {
    __pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr[__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr++] = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject *)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_cfg) {
    e = (*v)(p->__pyx_v_cfg, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "omnibus._ext.cy.antlr.__pyx_scope_struct_1_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates *__pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates[8];
static int __pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates = 0;

static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates)))) {
    o = (PyObject*)__pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates[--__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates];
    memset(o, 0, sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates(PyObject *o) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates)))) {
    __pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates[__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates++] = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates *)o;
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates = {
  PyVarObject_HEAD_INIT(0, 0)
  "omnibus._ext.cy.antlr.__pyx_scope_struct_2_getStates", /*tp_name*/
  sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates, /*tp_traverse*/
  __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr *__pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr[8];
static int __pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr = 0;

static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr)))) {
    o = (PyObject*)__pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr[--__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr(PyObject *o) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_c);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr)))) {
    __pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr[__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr++] = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject *)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_c) {
    e = (*v)(p->__pyx_v_c, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "omnibus._ext.cy.antlr.__pyx_scope_struct_3_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates *__pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates[8];
static int __pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates = 0;

static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates)))) {
    o = (PyObject*)__pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates[--__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates];
    memset(o, 0, sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates(PyObject *o) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates)))) {
    __pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates[__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates++] = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates *)o;
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates = {
  PyVarObject_HEAD_INIT(0, 0)
  "omnibus._ext.cy.antlr.__pyx_scope_struct_4_getPredicates", /*tp_name*/
  sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates, /*tp_traverse*/
  __pyx_tp_clear_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr *__pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr[8];
static int __pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr = 0;

static PyObject *__pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr)))) {
    o = (PyObject*)__pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr[--__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr(PyObject *o) {
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_cfg);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr)))) {
    __pyx_freelist_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr[__pyx_freecount_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr++] = ((struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr *p = (struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject *)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_cfg) {
    e = (*v)(p->__pyx_v_cfg, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "omnibus._ext.cy.antlr.__pyx_scope_struct_5_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_antlr(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_antlr},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "antlr",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_u_, __pyx_k_, sizeof(__pyx_k_), 0, 1, 0, 0},
  {&__pyx_kp_u_10_Transition_PRECEDENCE, __pyx_k_10_Transition_PRECEDENCE, sizeof(__pyx_k_10_Transition_PRECEDENCE), 0, 1, 0, 0},
  {&__pyx_kp_u_1_Transition_EPSILON, __pyx_k_1_Transition_EPSILON, sizeof(__pyx_k_1_Transition_EPSILON), 0, 1, 0, 0},
  {&__pyx_kp_u_2_Transition_RANGE, __pyx_k_2_Transition_RANGE, sizeof(__pyx_k_2_Transition_RANGE), 0, 1, 0, 0},
  {&__pyx_kp_u_3_Transition_RULE, __pyx_k_3_Transition_RULE, sizeof(__pyx_k_3_Transition_RULE), 0, 1, 0, 0},
  {&__pyx_kp_u_4_Transition_PREDICATE, __pyx_k_4_Transition_PREDICATE, sizeof(__pyx_k_4_Transition_PREDICATE), 0, 1, 0, 0},
  {&__pyx_kp_u_5_Transition_ATOM, __pyx_k_5_Transition_ATOM, sizeof(__pyx_k_5_Transition_ATOM), 0, 1, 0, 0},
  {&__pyx_kp_u_6_Transition_ACTION, __pyx_k_6_Transition_ACTION, sizeof(__pyx_k_6_Transition_ACTION), 0, 1, 0, 0},
  {&__pyx_kp_u_7_Transition_SET, __pyx_k_7_Transition_SET, sizeof(__pyx_k_7_Transition_SET), 0, 1, 0, 0},
  {&__pyx_kp_u_8_Transition_NOT_SET, __pyx_k_8_Transition_NOT_SET, sizeof(__pyx_k_8_Transition_NOT_SET), 0, 1, 0, 0},
  {&__pyx_kp_u_9_Transition_WILDCARD, __pyx_k_9_Transition_WILDCARD, sizeof(__pyx_k_9_Transition_WILDCARD), 0, 1, 0, 0},
  {&__pyx_n_s_ATN, __pyx_k_ATN, sizeof(__pyx_k_ATN), 0, 0, 1, 1},
  {&__pyx_n_s_ATNConfig, __pyx_k_ATNConfig, sizeof(__pyx_k_ATNConfig), 0, 0, 1, 1},
  {&__pyx_n_s_ATNConfigSet, __pyx_k_ATNConfigSet, sizeof(__pyx_k_ATNConfigSet), 0, 0, 1, 1},
  {&__pyx_kp_u_ATNConfig___subclasses___LexerAT, __pyx_k_ATNConfig___subclasses___LexerAT, sizeof(__pyx_k_ATNConfig___subclasses___LexerAT), 0, 1, 0, 0},
  {&__pyx_n_s_ATNSimulator, __pyx_k_ATNSimulator, sizeof(__pyx_k_ATNSimulator), 0, 0, 1, 1},
  {&__pyx_n_s_ATNState, __pyx_k_ATNState, sizeof(__pyx_k_ATNState), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfig, __pyx_k_CyATNConfig, sizeof(__pyx_k_CyATNConfig), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet, __pyx_k_CyATNConfigSet, sizeof(__pyx_k_CyATNConfigSet), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet___reduce_cython, __pyx_k_CyATNConfigSet___reduce_cython, sizeof(__pyx_k_CyATNConfigSet___reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet___setstate_cython, __pyx_k_CyATNConfigSet___setstate_cython, sizeof(__pyx_k_CyATNConfigSet___setstate_cython), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet_add, __pyx_k_CyATNConfigSet_add, sizeof(__pyx_k_CyATNConfigSet_add), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet_addAll, __pyx_k_CyATNConfigSet_addAll, sizeof(__pyx_k_CyATNConfigSet_addAll), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet_clear, __pyx_k_CyATNConfigSet_clear, sizeof(__pyx_k_CyATNConfigSet_clear), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet_get, __pyx_k_CyATNConfigSet_get, sizeof(__pyx_k_CyATNConfigSet_get), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet_getOrAdd, __pyx_k_CyATNConfigSet_getOrAdd, sizeof(__pyx_k_CyATNConfigSet_getOrAdd), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet_getPredicates, __pyx_k_CyATNConfigSet_getPredicates, sizeof(__pyx_k_CyATNConfigSet_getPredicates), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet_getStates, __pyx_k_CyATNConfigSet_getStates, sizeof(__pyx_k_CyATNConfigSet_getStates), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet_hashConfigs, __pyx_k_CyATNConfigSet_hashConfigs, sizeof(__pyx_k_CyATNConfigSet_hashConfigs), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet_isEmpty, __pyx_k_CyATNConfigSet_isEmpty, sizeof(__pyx_k_CyATNConfigSet_isEmpty), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet_optimizeConfigs, __pyx_k_CyATNConfigSet_optimizeConfigs, sizeof(__pyx_k_CyATNConfigSet_optimizeConfigs), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfigSet_setReadonly, __pyx_k_CyATNConfigSet_setReadonly, sizeof(__pyx_k_CyATNConfigSet_setReadonly), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfig___reduce_cython, __pyx_k_CyATNConfig___reduce_cython, sizeof(__pyx_k_CyATNConfig___reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfig___setstate_cython, __pyx_k_CyATNConfig___setstate_cython, sizeof(__pyx_k_CyATNConfig___setstate_cython), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfig_equalsForConfigSet, __pyx_k_CyATNConfig_equalsForConfigSet, sizeof(__pyx_k_CyATNConfig_equalsForConfigSet), 0, 0, 1, 1},
  {&__pyx_n_s_CyATNConfig_hashCodeForConfigSet, __pyx_k_CyATNConfig_hashCodeForConfigSet, sizeof(__pyx_k_CyATNConfig_hashCodeForConfigSet), 0, 0, 1, 1},
  {&__pyx_n_s_CyLexerATNConfig, __pyx_k_CyLexerATNConfig, sizeof(__pyx_k_CyLexerATNConfig), 0, 0, 1, 1},
  {&__pyx_n_s_CyLexerATNConfig___reduce_cython, __pyx_k_CyLexerATNConfig___reduce_cython, sizeof(__pyx_k_CyLexerATNConfig___reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_CyLexerATNConfig___setstate_cyth, __pyx_k_CyLexerATNConfig___setstate_cyth, sizeof(__pyx_k_CyLexerATNConfig___setstate_cyth), 0, 0, 1, 1},
  {&__pyx_n_s_CyLexerATNConfig_checkNonGreedyD, __pyx_k_CyLexerATNConfig_checkNonGreedyD, sizeof(__pyx_k_CyLexerATNConfig_checkNonGreedyD), 0, 0, 1, 1},
  {&__pyx_n_s_CyLexerATNConfig_equalsForConfig, __pyx_k_CyLexerATNConfig_equalsForConfig, sizeof(__pyx_k_CyLexerATNConfig_equalsForConfig), 0, 0, 1, 1},
  {&__pyx_n_s_CyLexerATNConfig_hashCodeForConf, __pyx_k_CyLexerATNConfig_hashCodeForConf, sizeof(__pyx_k_CyLexerATNConfig_hashCodeForConf), 0, 0, 1, 1},
  {&__pyx_n_s_CyOrderedATNConfigSet, __pyx_k_CyOrderedATNConfigSet, sizeof(__pyx_k_CyOrderedATNConfigSet), 0, 0, 1, 1},
  {&__pyx_n_s_CyOrderedATNConfigSet___reduce_c, __pyx_k_CyOrderedATNConfigSet___reduce_c, sizeof(__pyx_k_CyOrderedATNConfigSet___reduce_c), 0, 0, 1, 1},
  {&__pyx_n_s_CyOrderedATNConfigSet___setstate, __pyx_k_CyOrderedATNConfigSet___setstate, sizeof(__pyx_k_CyOrderedATNConfigSet___setstate), 0, 0, 1, 1},
  {&__pyx_n_s_DecisionState, __pyx_k_DecisionState, sizeof(__pyx_k_DecisionState), 0, 0, 1, 1},
  {&__pyx_n_s_EMPTY, __pyx_k_EMPTY, sizeof(__pyx_k_EMPTY), 0, 0, 1, 1},
  {&__pyx_n_s_EMPTY_RETURN_STATE, __pyx_k_EMPTY_RETURN_STATE, sizeof(__pyx_k_EMPTY_RETURN_STATE), 0, 0, 1, 1},
  {&__pyx_n_s_EOF, __pyx_k_EOF, sizeof(__pyx_k_EOF), 0, 0, 1, 1},
  {&__pyx_n_s_INVALID_ALT_NUMBER, __pyx_k_INVALID_ALT_NUMBER, sizeof(__pyx_k_INVALID_ALT_NUMBER), 0, 0, 1, 1},
  {&__pyx_n_s_IllegalStateException, __pyx_k_IllegalStateException, sizeof(__pyx_k_IllegalStateException), 0, 0, 1, 1},
  {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
  {&__pyx_kp_s_Incompatible_checksums_s_vs_0x1c, __pyx_k_Incompatible_checksums_s_vs_0x1c, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x1c), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_s_vs_0x52, __pyx_k_Incompatible_checksums_s_vs_0x52, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x52), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_s_vs_0x55, __pyx_k_Incompatible_checksums_s_vs_0x55, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x55), 0, 0, 1, 0},
  {&__pyx_n_s_InputStream, __pyx_k_InputStream, sizeof(__pyx_k_InputStream), 0, 0, 1, 1},
  {&__pyx_n_s_Lexer, __pyx_k_Lexer, sizeof(__pyx_k_Lexer), 0, 0, 1, 1},
  {&__pyx_n_s_LexerATNConfig, __pyx_k_LexerATNConfig, sizeof(__pyx_k_LexerATNConfig), 0, 0, 1, 1},
  {&__pyx_n_s_LexerATNSimulator, __pyx_k_LexerATNSimulator, sizeof(__pyx_k_LexerATNSimulator), 0, 0, 1, 1},
  {&__pyx_n_s_LexerATNSimulator__closure, __pyx_k_LexerATNSimulator__closure, sizeof(__pyx_k_LexerATNSimulator__closure), 0, 0, 1, 1},
  {&__pyx_n_s_LexerATNSimulator__computeStartS, __pyx_k_LexerATNSimulator__computeStartS, sizeof(__pyx_k_LexerATNSimulator__computeStartS), 0, 0, 1, 1},
  {&__pyx_n_s_LexerActionExecutor, __pyx_k_LexerActionExecutor, sizeof(__pyx_k_LexerActionExecutor), 0, 0, 1, 1},
  {&__pyx_n_s_MAX_CHAR_VALUE, __pyx_k_MAX_CHAR_VALUE, sizeof(__pyx_k_MAX_CHAR_VALUE), 0, 0, 1, 1},
  {&__pyx_n_s_NONE, __pyx_k_NONE, sizeof(__pyx_k_NONE), 0, 0, 1, 1},
  {&__pyx_n_s_PickleError, __pyx_k_PickleError, sizeof(__pyx_k_PickleError), 0, 0, 1, 1},
  {&__pyx_kp_u_Precedence_predicates_are_not_su, __pyx_k_Precedence_predicates_are_not_su, sizeof(__pyx_k_Precedence_predicates_are_not_su), 0, 1, 0, 0},
  {&__pyx_n_s_PredictionContext, __pyx_k_PredictionContext, sizeof(__pyx_k_PredictionContext), 0, 0, 1, 1},
  {&__pyx_n_s_RuleStopState, __pyx_k_RuleStopState, sizeof(__pyx_k_RuleStopState), 0, 0, 1, 1},
  {&__pyx_n_s_SemanticContext, __pyx_k_SemanticContext, sizeof(__pyx_k_SemanticContext), 0, 0, 1, 1},
  {&__pyx_n_s_SingletonPredictionContext, __pyx_k_SingletonPredictionContext, sizeof(__pyx_k_SingletonPredictionContext), 0, 0, 1, 1},
  {&__pyx_n_s_StringIO, __pyx_k_StringIO, sizeof(__pyx_k_StringIO), 0, 0, 1, 1},
  {&__pyx_kp_u_This_method_is_not_implemented_f, __pyx_k_This_method_is_not_implemented_f, sizeof(__pyx_k_This_method_is_not_implemented_f), 0, 1, 0, 0},
  {&__pyx_kp_u_This_set_is_readonly, __pyx_k_This_set_is_readonly, sizeof(__pyx_k_This_set_is_readonly), 0, 1, 0, 0},
  {&__pyx_n_s_Token, __pyx_k_Token, sizeof(__pyx_k_Token), 0, 0, 1, 1},
  {&__pyx_n_s_Transition, __pyx_k_Transition, sizeof(__pyx_k_Transition), 0, 0, 1, 1},
  {&__pyx_n_s_UnsupportedOperationException, __pyx_k_UnsupportedOperationException, sizeof(__pyx_k_UnsupportedOperationException), 0, 0, 1, 1},
  {&__pyx_kp_u__2, __pyx_k__2, sizeof(__pyx_k__2), 0, 1, 0, 0},
  {&__pyx_kp_u__3, __pyx_k__3, sizeof(__pyx_k__3), 0, 1, 0, 0},
  {&__pyx_kp_u__4, __pyx_k__4, sizeof(__pyx_k__4), 0, 1, 0, 0},
  {&__pyx_kp_u__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 1, 0, 0},
  {&__pyx_n_s_actionIndex, __pyx_k_actionIndex, sizeof(__pyx_k_actionIndex), 0, 0, 1, 1},
  {&__pyx_n_s_add, __pyx_k_add, sizeof(__pyx_k_add), 0, 0, 1, 1},
  {&__pyx_n_s_addAll, __pyx_k_addAll, sizeof(__pyx_k_addAll), 0, 0, 1, 1},
  {&__pyx_n_s_alt, __pyx_k_alt, sizeof(__pyx_k_alt), 0, 0, 1, 1},
  {&__pyx_n_s_append, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_atn, __pyx_k_atn, sizeof(__pyx_k_atn), 0, 0, 1, 1},
  {&__pyx_n_u_bool, __pyx_k_bool, sizeof(__pyx_k_bool), 0, 1, 0, 1},
  {&__pyx_n_s_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},
  {&__pyx_n_s_cfg, __pyx_k_cfg, sizeof(__pyx_k_cfg), 0, 0, 1, 1},
  {&__pyx_n_s_check, __pyx_k_check, sizeof(__pyx_k_check), 0, 0, 1, 1},
  {&__pyx_n_s_checkNonGreedyDecision, __pyx_k_checkNonGreedyDecision, sizeof(__pyx_k_checkNonGreedyDecision), 0, 0, 1, 1},
  {&__pyx_n_s_class, __pyx_k_class, sizeof(__pyx_k_class), 0, 0, 1, 1},
  {&__pyx_n_s_clear, __pyx_k_clear, sizeof(__pyx_k_clear), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
  {&__pyx_n_s_coll, __pyx_k_coll, sizeof(__pyx_k_coll), 0, 0, 1, 1},
  {&__pyx_n_s_config, __pyx_k_config, sizeof(__pyx_k_config), 0, 0, 1, 1},
  {&__pyx_n_s_configs, __pyx_k_configs, sizeof(__pyx_k_configs), 0, 0, 1, 1},
  {&__pyx_n_s_conflictingAlts, __pyx_k_conflictingAlts, sizeof(__pyx_k_conflictingAlts), 0, 0, 1, 1},
  {&__pyx_kp_u_conflictingAlts_2, __pyx_k_conflictingAlts_2, sizeof(__pyx_k_conflictingAlts_2), 0, 1, 0, 0},
  {&__pyx_n_s_context, __pyx_k_context, sizeof(__pyx_k_context), 0, 0, 1, 1},
  {&__pyx_n_s_create, __pyx_k_create, sizeof(__pyx_k_create), 0, 0, 1, 1},
  {&__pyx_n_s_currentAltReachedAcceptState, __pyx_k_currentAltReachedAcceptState, sizeof(__pyx_k_currentAltReachedAcceptState), 0, 0, 1, 1},
  {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
  {&__pyx_n_s_dict_2, __pyx_k_dict_2, sizeof(__pyx_k_dict_2), 0, 0, 1, 1},
  {&__pyx_n_s_dipsIntoOuterContext, __pyx_k_dipsIntoOuterContext, sizeof(__pyx_k_dipsIntoOuterContext), 0, 0, 1, 1},
  {&__pyx_kp_u_dipsIntoOuterContext_2, __pyx_k_dipsIntoOuterContext_2, sizeof(__pyx_k_dipsIntoOuterContext_2), 0, 1, 0, 0},
  {&__pyx_n_s_enter, __pyx_k_enter, sizeof(__pyx_k_enter), 0, 0, 1, 1},
  {&__pyx_n_s_epsilonOnlyTransitions, __pyx_k_epsilonOnlyTransitions, sizeof(__pyx_k_epsilonOnlyTransitions), 0, 0, 1, 1},
  {&__pyx_n_s_eq, __pyx_k_eq, sizeof(__pyx_k_eq), 0, 0, 1, 1},
  {&__pyx_n_s_equalsForConfigSet, __pyx_k_equalsForConfigSet, sizeof(__pyx_k_equalsForConfigSet), 0, 0, 1, 1},
  {&__pyx_n_s_eval, __pyx_k_eval, sizeof(__pyx_k_eval), 0, 0, 1, 1},
  {&__pyx_n_s_evaluatePredicate, __pyx_k_evaluatePredicate, sizeof(__pyx_k_evaluatePredicate), 0, 0, 1, 1},
  {&__pyx_n_s_existing, __pyx_k_existing, sizeof(__pyx_k_existing), 0, 0, 1, 1},
  {&__pyx_n_s_exit, __pyx_k_exit, sizeof(__pyx_k_exit), 0, 0, 1, 1},
  {&__pyx_n_s_followState, __pyx_k_followState, sizeof(__pyx_k_followState), 0, 0, 1, 1},
  {&__pyx_n_s_fullCtx, __pyx_k_fullCtx, sizeof(__pyx_k_fullCtx), 0, 0, 1, 1},
  {&__pyx_n_s_functools, __pyx_k_functools, sizeof(__pyx_k_functools), 0, 0, 1, 1},
  {&__pyx_n_s_genexpr, __pyx_k_genexpr, sizeof(__pyx_k_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
  {&__pyx_n_s_getCachedContext, __pyx_k_getCachedContext, sizeof(__pyx_k_getCachedContext), 0, 0, 1, 1},
  {&__pyx_n_s_getOrAdd, __pyx_k_getOrAdd, sizeof(__pyx_k_getOrAdd), 0, 0, 1, 1},
  {&__pyx_n_s_getOrAdd_locals_genexpr, __pyx_k_getOrAdd_locals_genexpr, sizeof(__pyx_k_getOrAdd_locals_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_getParent, __pyx_k_getParent, sizeof(__pyx_k_getParent), 0, 0, 1, 1},
  {&__pyx_n_s_getPredicates, __pyx_k_getPredicates, sizeof(__pyx_k_getPredicates), 0, 0, 1, 1},
  {&__pyx_n_s_getPredicates_locals_genexpr, __pyx_k_getPredicates_locals_genexpr, sizeof(__pyx_k_getPredicates_locals_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_getReturnState, __pyx_k_getReturnState, sizeof(__pyx_k_getReturnState), 0, 0, 1, 1},
  {&__pyx_n_s_getStates, __pyx_k_getStates, sizeof(__pyx_k_getStates), 0, 0, 1, 1},
  {&__pyx_n_s_getStates_locals_genexpr, __pyx_k_getStates_locals_genexpr, sizeof(__pyx_k_getStates_locals_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
  {&__pyx_n_s_getvalue, __pyx_k_getvalue, sizeof(__pyx_k_getvalue), 0, 0, 1, 1},
  {&__pyx_n_s_h, __pyx_k_h, sizeof(__pyx_k_h), 0, 0, 1, 1},
  {&__pyx_n_s_hasEmptyPath, __pyx_k_hasEmptyPath, sizeof(__pyx_k_hasEmptyPath), 0, 0, 1, 1},
  {&__pyx_n_s_hasSemanticContext, __pyx_k_hasSemanticContext, sizeof(__pyx_k_hasSemanticContext), 0, 0, 1, 1},
  {&__pyx_kp_u_hasSemanticContext_2, __pyx_k_hasSemanticContext_2, sizeof(__pyx_k_hasSemanticContext_2), 0, 1, 0, 0},
  {&__pyx_n_s_hashCodeForConfigSet, __pyx_k_hashCodeForConfigSet, sizeof(__pyx_k_hashCodeForConfigSet), 0, 0, 1, 1},
  {&__pyx_n_s_hashConfigs, __pyx_k_hashConfigs, sizeof(__pyx_k_hashConfigs), 0, 0, 1, 1},
  {&__pyx_n_s_hashConfigs_locals_lambda, __pyx_k_hashConfigs_locals_lambda, sizeof(__pyx_k_hashConfigs_locals_lambda), 0, 0, 1, 1},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
  {&__pyx_n_s_initialContext, __pyx_k_initialContext, sizeof(__pyx_k_initialContext), 0, 0, 1, 1},
  {&__pyx_n_s_input, __pyx_k_input, sizeof(__pyx_k_input), 0, 0, 1, 1},
  {&__pyx_n_u_int, __pyx_k_int, sizeof(__pyx_k_int), 0, 1, 0, 1},
  {&__pyx_n_s_interpreter, __pyx_k_interpreter, sizeof(__pyx_k_interpreter), 0, 0, 1, 1},
  {&__pyx_n_s_io, __pyx_k_io, sizeof(__pyx_k_io), 0, 0, 1, 1},
  {&__pyx_n_s_isEmpty, __pyx_k_isEmpty, sizeof(__pyx_k_isEmpty), 0, 0, 1, 1},
  {&__pyx_n_s_iter, __pyx_k_iter, sizeof(__pyx_k_iter), 0, 0, 1, 1},
  {&__pyx_n_s_l, __pyx_k_l, sizeof(__pyx_k_l), 0, 0, 1, 1},
  {&__pyx_n_s_lexerActionExecutor, __pyx_k_lexerActionExecutor, sizeof(__pyx_k_lexerActionExecutor), 0, 0, 1, 1},
  {&__pyx_n_s_lexerActions, __pyx_k_lexerActions, sizeof(__pyx_k_lexerActions), 0, 0, 1, 1},
  {&__pyx_n_u_list, __pyx_k_list, sizeof(__pyx_k_list), 0, 1, 0, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_matches, __pyx_k_matches, sizeof(__pyx_k_matches), 0, 0, 1, 1},
  {&__pyx_n_s_merge, __pyx_k_merge, sizeof(__pyx_k_merge), 0, 0, 1, 1},
  {&__pyx_n_s_mergeCache, __pyx_k_mergeCache, sizeof(__pyx_k_mergeCache), 0, 0, 1, 1},
  {&__pyx_n_s_merged, __pyx_k_merged, sizeof(__pyx_k_merged), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
  {&__pyx_n_s_nonGreedy, __pyx_k_nonGreedy, sizeof(__pyx_k_nonGreedy), 0, 0, 1, 1},
  {&__pyx_kp_u_not_LexerATNConfig___subclasses, __pyx_k_not_LexerATNConfig___subclasses, sizeof(__pyx_k_not_LexerATNConfig___subclasses), 0, 1, 0, 0},
  {&__pyx_kp_u_not_RuleStopState___subclasses, __pyx_k_not_RuleStopState___subclasses, sizeof(__pyx_k_not_RuleStopState___subclasses), 0, 1, 0, 0},
  {&__pyx_n_s_omnibus__ext_cy_antlr, __pyx_k_omnibus__ext_cy_antlr, sizeof(__pyx_k_omnibus__ext_cy_antlr), 0, 0, 1, 1},
  {&__pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_k_omnibus__ext_cy_antlr_pyx, sizeof(__pyx_k_omnibus__ext_cy_antlr_pyx), 0, 0, 1, 0},
  {&__pyx_n_s_optimizeConfigs, __pyx_k_optimizeConfigs, sizeof(__pyx_k_optimizeConfigs), 0, 0, 1, 1},
  {&__pyx_n_s_other, __pyx_k_other, sizeof(__pyx_k_other), 0, 0, 1, 1},
  {&__pyx_n_s_p, __pyx_k_p, sizeof(__pyx_k_p), 0, 0, 1, 1},
  {&__pyx_n_s_passedThroughNonGreedyDecision, __pyx_k_passedThroughNonGreedyDecision, sizeof(__pyx_k_passedThroughNonGreedyDecision), 0, 0, 1, 1},
  {&__pyx_n_s_pickle, __pyx_k_pickle, sizeof(__pyx_k_pickle), 0, 0, 1, 1},
  {&__pyx_n_s_precedenceFilterSuppressed, __pyx_k_precedenceFilterSuppressed, sizeof(__pyx_k_precedenceFilterSuppressed), 0, 0, 1, 1},
  {&__pyx_n_s_predIndex, __pyx_k_predIndex, sizeof(__pyx_k_predIndex), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_PickleError, __pyx_k_pyx_PickleError, sizeof(__pyx_k_pyx_PickleError), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_checksum, __pyx_k_pyx_checksum, sizeof(__pyx_k_pyx_checksum), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_result, __pyx_k_pyx_result, sizeof(__pyx_k_pyx_result), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_state, __pyx_k_pyx_state, sizeof(__pyx_k_pyx_state), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_type, __pyx_k_pyx_type, sizeof(__pyx_k_pyx_type), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_CyATNConfig, __pyx_k_pyx_unpickle_CyATNConfig, sizeof(__pyx_k_pyx_unpickle_CyATNConfig), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_CyATNConfigSet, __pyx_k_pyx_unpickle_CyATNConfigSet, sizeof(__pyx_k_pyx_unpickle_CyATNConfigSet), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_CyLexerATNConfig, __pyx_k_pyx_unpickle_CyLexerATNConfig, sizeof(__pyx_k_pyx_unpickle_CyLexerATNConfig), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_CyOrderedATNConfi, __pyx_k_pyx_unpickle_CyOrderedATNConfi, sizeof(__pyx_k_pyx_unpickle_CyOrderedATNConfi), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_reachesIntoOuterContext, __pyx_k_reachesIntoOuterContext, sizeof(__pyx_k_reachesIntoOuterContext), 0, 0, 1, 1},
  {&__pyx_n_s_readonly, __pyx_k_readonly, sizeof(__pyx_k_readonly), 0, 0, 1, 1},
  {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_2, __pyx_k_reduce_2, sizeof(__pyx_k_reduce_2), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
  {&__pyx_n_s_rootIsWildcard, __pyx_k_rootIsWildcard, sizeof(__pyx_k_rootIsWildcard), 0, 0, 1, 1},
  {&__pyx_n_s_ruleIndex, __pyx_k_ruleIndex, sizeof(__pyx_k_ruleIndex), 0, 0, 1, 1},
  {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
  {&__pyx_n_s_semantic, __pyx_k_semantic, sizeof(__pyx_k_semantic), 0, 0, 1, 1},
  {&__pyx_n_s_semanticContext, __pyx_k_semanticContext, sizeof(__pyx_k_semanticContext), 0, 0, 1, 1},
  {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
  {&__pyx_n_s_serializationType, __pyx_k_serializationType, sizeof(__pyx_k_serializationType), 0, 0, 1, 1},
  {&__pyx_n_s_setReadonly, __pyx_k_setReadonly, sizeof(__pyx_k_setReadonly), 0, 0, 1, 1},
  {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
  {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
  {&__pyx_n_s_source, __pyx_k_source, sizeof(__pyx_k_source), 0, 0, 1, 1},
  {&__pyx_n_s_speculative, __pyx_k_speculative, sizeof(__pyx_k_speculative), 0, 0, 1, 1},
  {&__pyx_n_s_state, __pyx_k_state, sizeof(__pyx_k_state), 0, 0, 1, 1},
  {&__pyx_n_s_stateNumber, __pyx_k_stateNumber, sizeof(__pyx_k_stateNumber), 0, 0, 1, 1},
  {&__pyx_n_s_states, __pyx_k_states, sizeof(__pyx_k_states), 0, 0, 1, 1},
  {&__pyx_n_s_str_list, __pyx_k_str_list, sizeof(__pyx_k_str_list), 0, 0, 1, 1},
  {&__pyx_kp_s_stringsource, __pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 0, 1, 0},
  {&__pyx_n_s_super, __pyx_k_super, sizeof(__pyx_k_super), 0, 0, 1, 1},
  {&__pyx_n_s_target, __pyx_k_target, sizeof(__pyx_k_target), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
  {&__pyx_n_s_transitions, __pyx_k_transitions, sizeof(__pyx_k_transitions), 0, 0, 1, 1},
  {&__pyx_n_s_treatEofAsEpsilon, __pyx_k_treatEofAsEpsilon, sizeof(__pyx_k_treatEofAsEpsilon), 0, 0, 1, 1},
  {&__pyx_n_s_uniqueAlt, __pyx_k_uniqueAlt, sizeof(__pyx_k_uniqueAlt), 0, 0, 1, 1},
  {&__pyx_kp_u_uniqueAlt_2, __pyx_k_uniqueAlt_2, sizeof(__pyx_k_uniqueAlt_2), 0, 1, 0, 0},
  {&__pyx_kp_u_up, __pyx_k_up, sizeof(__pyx_k_up), 0, 1, 0, 0},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_use_setstate, __pyx_k_use_setstate, sizeof(__pyx_k_use_setstate), 0, 0, 1, 1},
  {&__pyx_n_s_vendor_antlr4, __pyx_k_vendor_antlr4, sizeof(__pyx_k_vendor_antlr4), 0, 0, 1, 1},
  {&__pyx_n_s_vendor_antlr4_PredictionContext, __pyx_k_vendor_antlr4_PredictionContext, sizeof(__pyx_k_vendor_antlr4_PredictionContext), 0, 0, 1, 1},
  {&__pyx_n_s_vendor_antlr4_Utils, __pyx_k_vendor_antlr4_Utils, sizeof(__pyx_k_vendor_antlr4_Utils), 0, 0, 1, 1},
  {&__pyx_n_s_vendor_antlr4_atn_ATN, __pyx_k_vendor_antlr4_atn_ATN, sizeof(__pyx_k_vendor_antlr4_atn_ATN), 0, 0, 1, 1},
  {&__pyx_n_s_vendor_antlr4_atn_ATNConfig, __pyx_k_vendor_antlr4_atn_ATNConfig, sizeof(__pyx_k_vendor_antlr4_atn_ATNConfig), 0, 0, 1, 1},
  {&__pyx_n_s_vendor_antlr4_atn_ATNConfigSet, __pyx_k_vendor_antlr4_atn_ATNConfigSet, sizeof(__pyx_k_vendor_antlr4_atn_ATNConfigSet), 0, 0, 1, 1},
  {&__pyx_n_s_vendor_antlr4_atn_ATNSimulator, __pyx_k_vendor_antlr4_atn_ATNSimulator, sizeof(__pyx_k_vendor_antlr4_atn_ATNSimulator), 0, 0, 1, 1},
  {&__pyx_n_s_vendor_antlr4_atn_ATNState, __pyx_k_vendor_antlr4_atn_ATNState, sizeof(__pyx_k_vendor_antlr4_atn_ATNState), 0, 0, 1, 1},
  {&__pyx_n_s_vendor_antlr4_atn_LexerActionEx, __pyx_k_vendor_antlr4_atn_LexerActionEx, sizeof(__pyx_k_vendor_antlr4_atn_LexerActionEx), 0, 0, 1, 1},
  {&__pyx_n_s_vendor_antlr4_atn_SemanticConte, __pyx_k_vendor_antlr4_atn_SemanticConte, sizeof(__pyx_k_vendor_antlr4_atn_SemanticConte), 0, 0, 1, 1},
  {&__pyx_n_s_vendor_antlr4_atn_Transition, __pyx_k_vendor_antlr4_atn_Transition, sizeof(__pyx_k_vendor_antlr4_atn_Transition), 0, 0, 1, 1},
  {&__pyx_n_s_vendor_antlr4_error_Errors, __pyx_k_vendor_antlr4_error_Errors, sizeof(__pyx_k_vendor_antlr4_error_Errors), 0, 0, 1, 1},
  {&__pyx_n_s_write, __pyx_k_write, sizeof(__pyx_k_write), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_eval = __Pyx_GetBuiltinName(__pyx_n_s_eval); if (!__pyx_builtin_eval) __PYX_ERR(0, 56, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(0, 57, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 63, __pyx_L1_error)
  __pyx_builtin_super = __Pyx_GetBuiltinName(__pyx_n_s_super); if (!__pyx_builtin_super) __PYX_ERR(0, 504, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "omnibus/_ext/cy/antlr.pyx":258
 * 
 *     def __str__(self):
 *         with io.StringIO() as buf:             # <<<<<<<<<<<<<<
 *             buf.write('(')
 *             buf.write(str(self.state))
 */
  __pyx_tuple__6 = PyTuple_Pack(3, Py_None, Py_None, Py_None); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "omnibus/_ext/cy/antlr.pyx":366
 *     def add(self, config: ATNConfig, mergeCache=None):
 *         if self.readonly_:
 *             raise Exception("This set is readonly")             # <<<<<<<<<<<<<<
 * 
 *         if config.semanticContext is not SemanticContext.NONE:
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_u_This_set_is_readonly); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "omnibus/_ext/cy/antlr.pyx":41
 * 
 * 
 * for _check in [             # <<<<<<<<<<<<<<
 *     'not RuleStopState.__subclasses__()',
 *     f'{Transition__EPSILON}     == Transition.EPSILON',
 */
  __pyx_tuple__9 = PyTuple_Pack(13, __pyx_kp_u_not_RuleStopState___subclasses, __pyx_kp_u_1_Transition_EPSILON, __pyx_kp_u_2_Transition_RANGE, __pyx_kp_u_3_Transition_RULE, __pyx_kp_u_4_Transition_PREDICATE, __pyx_kp_u_5_Transition_ATOM, __pyx_kp_u_6_Transition_ACTION, __pyx_kp_u_7_Transition_SET, __pyx_kp_u_8_Transition_NOT_SET, __pyx_kp_u_9_Transition_WILDCARD, __pyx_kp_u_10_Transition_PRECEDENCE, __pyx_kp_u_ATNConfig___subclasses___LexerAT, __pyx_kp_u_not_LexerATNConfig___subclasses); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(0, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "omnibus/_ext/cy/antlr.pyx":60
 * 
 * 
 * def LexerATNSimulator__computeStartState(self, input: InputStream, p: ATNState):             # <<<<<<<<<<<<<<
 *     initialContext = PredictionContext.EMPTY
 *     configs = CyATNConfigSet()
 */
  __pyx_tuple__10 = PyTuple_Pack(8, __pyx_n_s_self, __pyx_n_s_input, __pyx_n_s_p, __pyx_n_s_initialContext, __pyx_n_s_configs, __pyx_n_s_i, __pyx_n_s_target, __pyx_n_s_c); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);
  __pyx_codeobj__11 = (PyObject*)__Pyx_PyCode_New(3, 0, 8, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__10, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_LexerATNSimulator__computeStartS, 60, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__11)) __PYX_ERR(0, 60, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":70
 * 
 * 
 * cpdef bool LexerATNSimulator__closure(             # <<<<<<<<<<<<<<
 *         self: LexerATNSimulator,
 *         input: InputStream,
 */
  __pyx_tuple__12 = PyTuple_Pack(7, __pyx_n_s_self, __pyx_n_s_input, __pyx_n_s_config, __pyx_n_s_configs, __pyx_n_s_currentAltReachedAcceptState, __pyx_n_s_speculative, __pyx_n_s_treatEofAsEpsilon); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);
  __pyx_codeobj__13 = (PyObject*)__Pyx_PyCode_New(7, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__12, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_LexerATNSimulator__closure, 70, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__13)) __PYX_ERR(0, 70, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":242
 *         return hash((self.state.stateNumber, self.alt, self.context, self.semanticContext))
 * 
 *     cpdef hashCodeForConfigSet(self):             # <<<<<<<<<<<<<<
 *         return hash((self.state.stateNumber, self.alt, hash(self.semanticContext)))
 * 
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);
  __pyx_codeobj__15 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_hashCodeForConfigSet, 242, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__15)) __PYX_ERR(0, 242, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":245
 *         return hash((self.state.stateNumber, self.alt, hash(self.semanticContext)))
 * 
 *     cpdef equalsForConfigSet(self, other):             # <<<<<<<<<<<<<<
 *         if self is other:
 *             return True
 */
  __pyx_tuple__16 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_other); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);
  __pyx_codeobj__17 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__16, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_equalsForConfigSet, 245, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__17)) __PYX_ERR(0, 245, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_tuple__18 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_state, __pyx_n_s_dict_2, __pyx_n_s_use_setstate); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);
  __pyx_codeobj__19 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__18, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__19)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyATNConfig, (type(self), 0x52fdf41, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyATNConfig__set_state(self, __pyx_state)
 */
  __pyx_tuple__20 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);
  __pyx_codeobj__21 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__20, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__21)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":322
 *         return CyATNConfig.__eq__(other)
 * 
 *     cpdef hashCodeForConfigSet(self):             # <<<<<<<<<<<<<<
 *         return hash(self)
 * 
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);
  __pyx_codeobj__23 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_hashCodeForConfigSet, 322, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__23)) __PYX_ERR(0, 322, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":325
 *         return hash(self)
 * 
 *     cpdef equalsForConfigSet(self, other):             # <<<<<<<<<<<<<<
 *         return self == other
 * 
 */
  __pyx_tuple__24 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_other); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);
  __pyx_codeobj__25 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__24, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_equalsForConfigSet, 325, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__25)) __PYX_ERR(0, 325, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":328
 *         return self == other
 * 
 *     cpdef checkNonGreedyDecision(self, source: LexerATNConfig, target: ATNState):             # <<<<<<<<<<<<<<
 *         return source.passedThroughNonGreedyDecision or isinstance(target, DecisionState) and target.nonGreedy
 * 
 */
  __pyx_tuple__26 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_source, __pyx_n_s_target); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);
  __pyx_codeobj__27 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__26, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_checkNonGreedyDecision, 328, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__27)) __PYX_ERR(0, 328, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_tuple__28 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_state, __pyx_n_s_dict_2, __pyx_n_s_use_setstate); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);
  __pyx_codeobj__29 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__28, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__29)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyLexerATNConfig, (type(self), 0x55e4a68, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyLexerATNConfig__set_state(self, __pyx_state)
 */
  __pyx_tuple__30 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);
  __pyx_codeobj__31 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__30, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__31)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":364
 *         return self.configs.__iter__()
 * 
 *     def add(self, config: ATNConfig, mergeCache=None):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             raise Exception("This set is readonly")
 */
  __pyx_tuple__32 = PyTuple_Pack(6, __pyx_n_s_self, __pyx_n_s_config, __pyx_n_s_mergeCache, __pyx_n_s_existing, __pyx_n_s_rootIsWildcard, __pyx_n_s_merged); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(0, 364, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);
  __pyx_codeobj__33 = (PyObject*)__Pyx_PyCode_New(3, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__32, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_add, 364, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__33)) __PYX_ERR(0, 364, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":392
 *         return True
 * 
 *     def getOrAdd(self, config: ATNConfig):             # <<<<<<<<<<<<<<
 *         h = config.hashCodeForConfigSet()
 *         l = self.configLookup.get(h, None)
 */
  __pyx_tuple__34 = PyTuple_Pack(7, __pyx_n_s_self, __pyx_n_s_config, __pyx_n_s_h, __pyx_n_s_l, __pyx_n_s_r, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);
  __pyx_codeobj__35 = (PyObject*)__Pyx_PyCode_New(2, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__34, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_getOrAdd, 392, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__35)) __PYX_ERR(0, 392, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":406
 *         return config
 * 
 *     def getStates(self):             # <<<<<<<<<<<<<<
 *         return set(c.state for c in self.configs)
 * 
 */
  __pyx_tuple__36 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(0, 406, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);
  __pyx_codeobj__37 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__36, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_getStates, 406, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__37)) __PYX_ERR(0, 406, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":409
 *         return set(c.state for c in self.configs)
 * 
 *     def getPredicates(self):             # <<<<<<<<<<<<<<
 *         return list(cfg.semanticContext for cfg in self.configs if cfg.semanticContext != SemanticContext.NONE)
 * 
 */
  __pyx_tuple__38 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(0, 409, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);
  __pyx_codeobj__39 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__38, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_getPredicates, 409, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__39)) __PYX_ERR(0, 409, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":412
 *         return list(cfg.semanticContext for cfg in self.configs if cfg.semanticContext != SemanticContext.NONE)
 * 
 *     def get(self, i: int):             # <<<<<<<<<<<<<<
 *         return self.configs[i]
 * 
 */
  __pyx_tuple__40 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_i); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(0, 412, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);
  __pyx_codeobj__41 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__40, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_get, 412, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__41)) __PYX_ERR(0, 412, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":415
 *         return self.configs[i]
 * 
 *     def optimizeConfigs(self, interpreter: ATNSimulator):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             raise IllegalStateException("This set is readonly")
 */
  __pyx_tuple__42 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_interpreter, __pyx_n_s_config); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(0, 415, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);
  __pyx_codeobj__43 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_optimizeConfigs, 415, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__43)) __PYX_ERR(0, 415, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":423
 *             config.context = interpreter.getCachedContext(config.context)
 * 
 *     def addAll(self, coll: list):             # <<<<<<<<<<<<<<
 *         for c in coll:
 *             self.add(c)
 */
  __pyx_tuple__44 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_coll, __pyx_n_s_c); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(0, 423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);
  __pyx_codeobj__45 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_addAll, 423, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__45)) __PYX_ERR(0, 423, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":453
 *         return self.hashConfigs()
 * 
 *     def hashConfigs(self):             # <<<<<<<<<<<<<<
 *         return reduce(lambda h, cfg: hash((h, cfg)), self.configs, 0)
 * 
 */
  __pyx_tuple__46 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(0, 453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);
  __pyx_codeobj__47 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__46, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_hashConfigs, 453, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__47)) __PYX_ERR(0, 453, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":459
 *         return len(self.configs)
 * 
 *     def isEmpty(self):             # <<<<<<<<<<<<<<
 *         return len(self.configs) == 0
 * 
 */
  __pyx_tuple__48 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(0, 459, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);
  __pyx_codeobj__49 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__48, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_isEmpty, 459, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__49)) __PYX_ERR(0, 459, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":473
 *         return False
 * 
 *     def clear(self):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             raise IllegalStateException("This set is readonly")
 */
  __pyx_tuple__50 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(0, 473, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);
  __pyx_codeobj__51 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__50, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_clear, 473, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__51)) __PYX_ERR(0, 473, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":480
 *         self.configLookup.clear()
 * 
 *     def setReadonly(self, readonly: bool):             # <<<<<<<<<<<<<<
 *         self.readonly_ = readonly
 *         self.configLookup = None  # can't mod, no need for lookup cache
 */
  __pyx_tuple__52 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_readonly, __pyx_n_s_readonly); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);
  __pyx_codeobj__53 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__52, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_omnibus__ext_cy_antlr_pyx, __pyx_n_s_setReadonly, 480, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__53)) __PYX_ERR(0, 480, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_tuple__54 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_state, __pyx_n_s_dict_2, __pyx_n_s_use_setstate); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__54, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyATNConfigSet, (type(self), 0x1c4e82d, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyATNConfigSet__set_state(self, __pyx_state)
 */
  __pyx_tuple__56 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);
  __pyx_codeobj__57 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__56, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__57)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_tuple__58 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_state, __pyx_n_s_dict_2, __pyx_n_s_use_setstate); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);
  __pyx_codeobj__59 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__59)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyOrderedATNConfigSet, (type(self), 0x1c4e82d, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyOrderedATNConfigSet__set_state(self, __pyx_state)
 */
  __pyx_tuple__60 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);
  __pyx_codeobj__61 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__61)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __pyx_unpickle_CyATNConfig(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_tuple__62 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);
  __pyx_codeobj__63 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__62, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_CyATNConfig, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__63)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__64 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__64)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__64);
  __Pyx_GIVEREF(__pyx_tuple__64);
  __pyx_codeobj__65 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__64, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_CyLexerATNConfig, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__65)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__66 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__66)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__66);
  __Pyx_GIVEREF(__pyx_tuple__66);
  __pyx_codeobj__67 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__66, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_CyATNConfigSet, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__67)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__68 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);
  __pyx_codeobj__69 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_CyOrderedATNConfi, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__69)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_5 = PyInt_FromLong(5); if (unlikely(!__pyx_int_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_6 = PyInt_FromLong(6); if (unlikely(!__pyx_int_6)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_7 = PyInt_FromLong(7); if (unlikely(!__pyx_int_7)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_10 = PyInt_FromLong(10); if (unlikely(!__pyx_int_10)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_29681709 = PyInt_FromLong(29681709L); if (unlikely(!__pyx_int_29681709)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_87023425 = PyInt_FromLong(87023425L); if (unlikely(!__pyx_int_87023425)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_90065512 = PyInt_FromLong(90065512L); if (unlikely(!__pyx_int_90065512)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __pyx_vtabptr_7omnibus_4_ext_2cy_5antlr_CyATNConfig = &__pyx_vtable_7omnibus_4_ext_2cy_5antlr_CyATNConfig;
  __pyx_vtable_7omnibus_4_ext_2cy_5antlr_CyATNConfig.hashCodeForConfigSet = (PyObject *(*)(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *, int __pyx_skip_dispatch))__pyx_f_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_hashCodeForConfigSet;
  __pyx_vtable_7omnibus_4_ext_2cy_5antlr_CyATNConfig.equalsForConfigSet = (PyObject *(*)(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *, PyObject *, int __pyx_skip_dispatch))__pyx_f_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_equalsForConfigSet;
  if (PyType_Ready(&__pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfig) < 0) __PYX_ERR(0, 184, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfig.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfig.tp_dictoffset && __pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfig.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfig.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfig.tp_dict, __pyx_vtabptr_7omnibus_4_ext_2cy_5antlr_CyATNConfig) < 0) __PYX_ERR(0, 184, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CyATNConfig, (PyObject *)&__pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfig) < 0) __PYX_ERR(0, 184, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfig) < 0) __PYX_ERR(0, 184, __pyx_L1_error)
  __pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig = &__pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfig;
  __pyx_vtabptr_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig = &__pyx_vtable_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig;
  __pyx_vtable_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig.__pyx_base = *__pyx_vtabptr_7omnibus_4_ext_2cy_5antlr_CyATNConfig;
  __pyx_vtable_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig.__pyx_base.hashCodeForConfigSet = (PyObject *(*)(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *, int __pyx_skip_dispatch))__pyx_f_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_hashCodeForConfigSet;
  __pyx_vtable_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig.__pyx_base.equalsForConfigSet = (PyObject *(*)(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyATNConfig *, PyObject *, int __pyx_skip_dispatch))__pyx_f_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_equalsForConfigSet;
  __pyx_vtable_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig.checkNonGreedyDecision = (PyObject *(*)(struct __pyx_obj_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig *, PyObject *, PyObject *, int __pyx_skip_dispatch))__pyx_f_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_checkNonGreedyDecision;
  __pyx_type_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig.tp_base = __pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig;
  if (PyType_Ready(&__pyx_type_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig) < 0) __PYX_ERR(0, 277, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig.tp_dictoffset && __pyx_type_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig.tp_dict, __pyx_vtabptr_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig) < 0) __PYX_ERR(0, 277, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CyLexerATNConfig, (PyObject *)&__pyx_type_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig) < 0) __PYX_ERR(0, 277, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig) < 0) __PYX_ERR(0, 277, __pyx_L1_error)
  __pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig = &__pyx_type_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig;
  if (PyType_Ready(&__pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet) < 0) __PYX_ERR(0, 332, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet.tp_dictoffset && __pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CyATNConfigSet, (PyObject *)&__pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet) < 0) __PYX_ERR(0, 332, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet) < 0) __PYX_ERR(0, 332, __pyx_L1_error)
  __pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet = &__pyx_type_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet;
  __pyx_type_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet.tp_base = __pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet;
  if (PyType_Ready(&__pyx_type_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet) < 0) __PYX_ERR(0, 501, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet.tp_dictoffset && __pyx_type_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CyOrderedATNConfigSet, (PyObject *)&__pyx_type_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet) < 0) __PYX_ERR(0, 501, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet) < 0) __PYX_ERR(0, 501, __pyx_L1_error)
  __pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet = &__pyx_type_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet;
  if (PyType_Ready(&__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd.tp_dictoffset && __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd = &__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct__getOrAdd;
  if (PyType_Ready(&__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr) < 0) __PYX_ERR(0, 396, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr.tp_dictoffset && __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr = &__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_1_genexpr;
  if (PyType_Ready(&__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates) < 0) __PYX_ERR(0, 406, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates.tp_dictoffset && __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates = &__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_2_getStates;
  if (PyType_Ready(&__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr) < 0) __PYX_ERR(0, 407, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr.tp_dictoffset && __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr = &__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_3_genexpr;
  if (PyType_Ready(&__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates) < 0) __PYX_ERR(0, 409, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates.tp_dictoffset && __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates = &__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_4_getPredicates;
  if (PyType_Ready(&__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr) < 0) __PYX_ERR(0, 410, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr.tp_dictoffset && __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr = &__pyx_type_7omnibus_4_ext_2cy_5antlr___pyx_scope_struct_5_genexpr;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initantlr(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initantlr(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_antlr(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_antlr(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_antlr(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'antlr' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_antlr(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("antlr", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_omnibus___ext__cy__antlr) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "omnibus._ext.cy.antlr")) {
      if (unlikely(PyDict_SetItemString(modules, "omnibus._ext.cy.antlr", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely(__Pyx_modinit_type_init_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_type_import_code();
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "omnibus/_ext/cy/antlr.pyx":3
 * from libcpp cimport bool
 * 
 * from functools import reduce             # <<<<<<<<<<<<<<
 * import io
 * 
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_reduce);
  __Pyx_GIVEREF(__pyx_n_s_reduce);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_reduce);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_functools, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_reduce); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce, __pyx_t_1) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":4
 * 
 * from functools import reduce
 * import io             # <<<<<<<<<<<<<<
 * 
 * from ..._vendor.antlr4 import InputStream
 */
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_io, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_io, __pyx_t_2) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":6
 * import io
 * 
 * from ..._vendor.antlr4 import InputStream             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4 import Lexer
 * from ..._vendor.antlr4 import LexerATNSimulator
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_InputStream);
  __Pyx_GIVEREF(__pyx_n_s_InputStream);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_InputStream);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_vendor_antlr4, __pyx_t_2, 3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_InputStream); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_InputStream, __pyx_t_2) < 0) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":7
 * 
 * from ..._vendor.antlr4 import InputStream
 * from ..._vendor.antlr4 import Lexer             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4 import LexerATNSimulator
 * from ..._vendor.antlr4 import Token
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_Lexer);
  __Pyx_GIVEREF(__pyx_n_s_Lexer);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_Lexer);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_vendor_antlr4, __pyx_t_1, 3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Lexer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Lexer, __pyx_t_1) < 0) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":8
 * from ..._vendor.antlr4 import InputStream
 * from ..._vendor.antlr4 import Lexer
 * from ..._vendor.antlr4 import LexerATNSimulator             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4 import Token
 * from ..._vendor.antlr4.atn.ATN import ATN
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_LexerATNSimulator);
  __Pyx_GIVEREF(__pyx_n_s_LexerATNSimulator);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_LexerATNSimulator);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_vendor_antlr4, __pyx_t_2, 3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_LexerATNSimulator); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LexerATNSimulator, __pyx_t_2) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":9
 * from ..._vendor.antlr4 import Lexer
 * from ..._vendor.antlr4 import LexerATNSimulator
 * from ..._vendor.antlr4 import Token             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.atn.ATN import ATN
 * from ..._vendor.antlr4.atn.ATNConfig import ATNConfig
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_Token);
  __Pyx_GIVEREF(__pyx_n_s_Token);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_Token);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_vendor_antlr4, __pyx_t_1, 3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Token); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Token, __pyx_t_1) < 0) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":10
 * from ..._vendor.antlr4 import LexerATNSimulator
 * from ..._vendor.antlr4 import Token
 * from ..._vendor.antlr4.atn.ATN import ATN             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.atn.ATNConfig import ATNConfig
 * from ..._vendor.antlr4.atn.ATNConfig import LexerATNConfig
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_ATN);
  __Pyx_GIVEREF(__pyx_n_s_ATN);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_ATN);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_vendor_antlr4_atn_ATN, __pyx_t_2, 3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_ATN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ATN, __pyx_t_2) < 0) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":11
 * from ..._vendor.antlr4 import Token
 * from ..._vendor.antlr4.atn.ATN import ATN
 * from ..._vendor.antlr4.atn.ATNConfig import ATNConfig             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.atn.ATNConfig import LexerATNConfig
 * from ..._vendor.antlr4.atn.ATNConfigSet import ATNConfigSet
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_ATNConfig);
  __Pyx_GIVEREF(__pyx_n_s_ATNConfig);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_ATNConfig);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_vendor_antlr4_atn_ATNConfig, __pyx_t_1, 3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_ATNConfig); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ATNConfig, __pyx_t_1) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":12
 * from ..._vendor.antlr4.atn.ATN import ATN
 * from ..._vendor.antlr4.atn.ATNConfig import ATNConfig
 * from ..._vendor.antlr4.atn.ATNConfig import LexerATNConfig             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.atn.ATNConfigSet import ATNConfigSet
 * from ..._vendor.antlr4.atn.ATNSimulator import ATNSimulator
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_LexerATNConfig);
  __Pyx_GIVEREF(__pyx_n_s_LexerATNConfig);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_LexerATNConfig);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_vendor_antlr4_atn_ATNConfig, __pyx_t_2, 3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_LexerATNConfig); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LexerATNConfig, __pyx_t_2) < 0) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":13
 * from ..._vendor.antlr4.atn.ATNConfig import ATNConfig
 * from ..._vendor.antlr4.atn.ATNConfig import LexerATNConfig
 * from ..._vendor.antlr4.atn.ATNConfigSet import ATNConfigSet             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.atn.ATNSimulator import ATNSimulator
 * from ..._vendor.antlr4.atn.ATNState import ATNState
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_ATNConfigSet);
  __Pyx_GIVEREF(__pyx_n_s_ATNConfigSet);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_ATNConfigSet);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_vendor_antlr4_atn_ATNConfigSet, __pyx_t_1, 3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_ATNConfigSet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ATNConfigSet, __pyx_t_1) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":14
 * from ..._vendor.antlr4.atn.ATNConfig import LexerATNConfig
 * from ..._vendor.antlr4.atn.ATNConfigSet import ATNConfigSet
 * from ..._vendor.antlr4.atn.ATNSimulator import ATNSimulator             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.atn.ATNState import ATNState
 * from ..._vendor.antlr4.atn.ATNState import DecisionState
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_ATNSimulator);
  __Pyx_GIVEREF(__pyx_n_s_ATNSimulator);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_ATNSimulator);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_vendor_antlr4_atn_ATNSimulator, __pyx_t_2, 3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_ATNSimulator); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ATNSimulator, __pyx_t_2) < 0) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":15
 * from ..._vendor.antlr4.atn.ATNConfigSet import ATNConfigSet
 * from ..._vendor.antlr4.atn.ATNSimulator import ATNSimulator
 * from ..._vendor.antlr4.atn.ATNState import ATNState             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.atn.ATNState import DecisionState
 * from ..._vendor.antlr4.atn.ATNState import RuleStopState
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_ATNState);
  __Pyx_GIVEREF(__pyx_n_s_ATNState);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_ATNState);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_vendor_antlr4_atn_ATNState, __pyx_t_1, 3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_ATNState); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ATNState, __pyx_t_1) < 0) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":16
 * from ..._vendor.antlr4.atn.ATNSimulator import ATNSimulator
 * from ..._vendor.antlr4.atn.ATNState import ATNState
 * from ..._vendor.antlr4.atn.ATNState import DecisionState             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.atn.ATNState import RuleStopState
 * from ..._vendor.antlr4.atn.LexerActionExecutor import LexerActionExecutor
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_DecisionState);
  __Pyx_GIVEREF(__pyx_n_s_DecisionState);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_DecisionState);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_vendor_antlr4_atn_ATNState, __pyx_t_2, 3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_DecisionState); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DecisionState, __pyx_t_2) < 0) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":17
 * from ..._vendor.antlr4.atn.ATNState import ATNState
 * from ..._vendor.antlr4.atn.ATNState import DecisionState
 * from ..._vendor.antlr4.atn.ATNState import RuleStopState             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.atn.LexerActionExecutor import LexerActionExecutor
 * from ..._vendor.antlr4.atn.SemanticContext import SemanticContext
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_RuleStopState);
  __Pyx_GIVEREF(__pyx_n_s_RuleStopState);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_RuleStopState);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_vendor_antlr4_atn_ATNState, __pyx_t_1, 3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_RuleStopState); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RuleStopState, __pyx_t_1) < 0) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":18
 * from ..._vendor.antlr4.atn.ATNState import DecisionState
 * from ..._vendor.antlr4.atn.ATNState import RuleStopState
 * from ..._vendor.antlr4.atn.LexerActionExecutor import LexerActionExecutor             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.atn.SemanticContext import SemanticContext
 * from ..._vendor.antlr4.atn.Transition import Transition  # noqa
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_LexerActionExecutor);
  __Pyx_GIVEREF(__pyx_n_s_LexerActionExecutor);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_LexerActionExecutor);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_vendor_antlr4_atn_LexerActionEx, __pyx_t_2, 3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_LexerActionExecutor); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LexerActionExecutor, __pyx_t_2) < 0) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":19
 * from ..._vendor.antlr4.atn.ATNState import RuleStopState
 * from ..._vendor.antlr4.atn.LexerActionExecutor import LexerActionExecutor
 * from ..._vendor.antlr4.atn.SemanticContext import SemanticContext             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.atn.Transition import Transition  # noqa
 * from ..._vendor.antlr4.error.Errors import IllegalStateException
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_SemanticContext);
  __Pyx_GIVEREF(__pyx_n_s_SemanticContext);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_SemanticContext);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_vendor_antlr4_atn_SemanticConte, __pyx_t_1, 3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_SemanticContext); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SemanticContext, __pyx_t_1) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":20
 * from ..._vendor.antlr4.atn.LexerActionExecutor import LexerActionExecutor
 * from ..._vendor.antlr4.atn.SemanticContext import SemanticContext
 * from ..._vendor.antlr4.atn.Transition import Transition  # noqa             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.error.Errors import IllegalStateException
 * from ..._vendor.antlr4.error.Errors import UnsupportedOperationException
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_Transition);
  __Pyx_GIVEREF(__pyx_n_s_Transition);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_Transition);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_vendor_antlr4_atn_Transition, __pyx_t_2, 3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_Transition); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Transition, __pyx_t_2) < 0) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":21
 * from ..._vendor.antlr4.atn.SemanticContext import SemanticContext
 * from ..._vendor.antlr4.atn.Transition import Transition  # noqa
 * from ..._vendor.antlr4.error.Errors import IllegalStateException             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.error.Errors import UnsupportedOperationException
 * from ..._vendor.antlr4.PredictionContext import merge
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_IllegalStateException);
  __Pyx_GIVEREF(__pyx_n_s_IllegalStateException);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_IllegalStateException);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_vendor_antlr4_error_Errors, __pyx_t_1, 3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_IllegalStateException); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_IllegalStateException, __pyx_t_1) < 0) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":22
 * from ..._vendor.antlr4.atn.Transition import Transition  # noqa
 * from ..._vendor.antlr4.error.Errors import IllegalStateException
 * from ..._vendor.antlr4.error.Errors import UnsupportedOperationException             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.PredictionContext import merge
 * from ..._vendor.antlr4.PredictionContext import PredictionContext
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_UnsupportedOperationException);
  __Pyx_GIVEREF(__pyx_n_s_UnsupportedOperationException);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_UnsupportedOperationException);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_vendor_antlr4_error_Errors, __pyx_t_2, 3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_UnsupportedOperationException); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_UnsupportedOperationException, __pyx_t_2) < 0) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":23
 * from ..._vendor.antlr4.error.Errors import IllegalStateException
 * from ..._vendor.antlr4.error.Errors import UnsupportedOperationException
 * from ..._vendor.antlr4.PredictionContext import merge             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.PredictionContext import PredictionContext
 * from ..._vendor.antlr4.PredictionContext import SingletonPredictionContext
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_merge);
  __Pyx_GIVEREF(__pyx_n_s_merge);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_merge);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_vendor_antlr4_PredictionContext, __pyx_t_1, 3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_merge); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_merge, __pyx_t_1) < 0) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":24
 * from ..._vendor.antlr4.error.Errors import UnsupportedOperationException
 * from ..._vendor.antlr4.PredictionContext import merge
 * from ..._vendor.antlr4.PredictionContext import PredictionContext             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.PredictionContext import SingletonPredictionContext
 * from ..._vendor.antlr4.Utils import str_list
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_PredictionContext);
  __Pyx_GIVEREF(__pyx_n_s_PredictionContext);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PredictionContext);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_vendor_antlr4_PredictionContext, __pyx_t_2, 3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_PredictionContext); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PredictionContext, __pyx_t_2) < 0) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":25
 * from ..._vendor.antlr4.PredictionContext import merge
 * from ..._vendor.antlr4.PredictionContext import PredictionContext
 * from ..._vendor.antlr4.PredictionContext import SingletonPredictionContext             # <<<<<<<<<<<<<<
 * from ..._vendor.antlr4.Utils import str_list
 * 
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_SingletonPredictionContext);
  __Pyx_GIVEREF(__pyx_n_s_SingletonPredictionContext);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_SingletonPredictionContext);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_vendor_antlr4_PredictionContext, __pyx_t_1, 3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_SingletonPredictionContext); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SingletonPredictionContext, __pyx_t_1) < 0) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":26
 * from ..._vendor.antlr4.PredictionContext import PredictionContext
 * from ..._vendor.antlr4.PredictionContext import SingletonPredictionContext
 * from ..._vendor.antlr4.Utils import str_list             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_str_list);
  __Pyx_GIVEREF(__pyx_n_s_str_list);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_str_list);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_vendor_antlr4_Utils, __pyx_t_2, 3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_str_list); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_str_list, __pyx_t_2) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":41
 * 
 * 
 * for _check in [             # <<<<<<<<<<<<<<
 *     'not RuleStopState.__subclasses__()',
 *     f'{Transition__EPSILON}     == Transition.EPSILON',
 */
  __pyx_t_1 = __pyx_tuple__9; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;
  for (;;) {
    if (__pyx_t_3 >= 13) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 41, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 41, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_check, __pyx_t_2) < 0) __PYX_ERR(0, 41, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "omnibus/_ext/cy/antlr.pyx":56
 *     'not LexerATNConfig.__subclasses__()',
 * ]:
 *     if not eval(_check):             # <<<<<<<<<<<<<<
 *         raise ImportError(_check)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_check); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_Globals(); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
    __pyx_t_2 = 0;
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_eval, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_7 = ((!__pyx_t_6) != 0);
    if (unlikely(__pyx_t_7)) {

      /* "omnibus/_ext/cy/antlr.pyx":57
 * ]:
 *     if not eval(_check):
 *         raise ImportError(_check)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_check); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 57, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ImportError, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 57, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __PYX_ERR(0, 57, __pyx_L1_error)

      /* "omnibus/_ext/cy/antlr.pyx":56
 *     'not LexerATNConfig.__subclasses__()',
 * ]:
 *     if not eval(_check):             # <<<<<<<<<<<<<<
 *         raise ImportError(_check)
 * 
 */
    }

    /* "omnibus/_ext/cy/antlr.pyx":41
 * 
 * 
 * for _check in [             # <<<<<<<<<<<<<<
 *     'not RuleStopState.__subclasses__()',
 *     f'{Transition__EPSILON}     == Transition.EPSILON',
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":60
 * 
 * 
 * def LexerATNSimulator__computeStartState(self, input: InputStream, p: ATNState):             # <<<<<<<<<<<<<<
 *     initialContext = PredictionContext.EMPTY
 *     configs = CyATNConfigSet()
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_InputStream); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_input, __pyx_t_5) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_ATNState); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_p, __pyx_t_5) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_1LexerATNSimulator__computeStartState, 0, __pyx_n_s_LexerATNSimulator__computeStartS, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__11)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LexerATNSimulator__computeStartS, __pyx_t_5) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":70
 * 
 * 
 * cpdef bool LexerATNSimulator__closure(             # <<<<<<<<<<<<<<
 *         self: LexerATNSimulator,
 *         input: InputStream,
 */
  __pyx_t_5 = __Pyx_PyDict_NewPresized(7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "omnibus/_ext/cy/antlr.pyx":71
 * 
 * cpdef bool LexerATNSimulator__closure(
 *         self: LexerATNSimulator,             # <<<<<<<<<<<<<<
 *         input: InputStream,
 *         config: LexerATNConfig,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_LexerATNSimulator); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_self, __pyx_t_1) < 0) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":72
 * cpdef bool LexerATNSimulator__closure(
 *         self: LexerATNSimulator,
 *         input: InputStream,             # <<<<<<<<<<<<<<
 *         config: LexerATNConfig,
 *         configs: ATNConfigSet,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_InputStream); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_input, __pyx_t_1) < 0) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":73
 *         self: LexerATNSimulator,
 *         input: InputStream,
 *         config: LexerATNConfig,             # <<<<<<<<<<<<<<
 *         configs: ATNConfigSet,
 *         currentAltReachedAcceptState: bool,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_LexerATNConfig); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_config, __pyx_t_1) < 0) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":74
 *         input: InputStream,
 *         config: LexerATNConfig,
 *         configs: ATNConfigSet,             # <<<<<<<<<<<<<<
 *         currentAltReachedAcceptState: bool,
 *         speculative: bool,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_ATNConfigSet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_configs, __pyx_t_1) < 0) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_currentAltReachedAcceptState, __pyx_n_u_bool) < 0) __PYX_ERR(0, 70, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_speculative, __pyx_n_u_bool) < 0) __PYX_ERR(0, 70, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_treatEofAsEpsilon, __pyx_n_u_bool) < 0) __PYX_ERR(0, 70, __pyx_L1_error)

  /* "omnibus/_ext/cy/antlr.pyx":70
 * 
 * 
 * cpdef bool LexerATNSimulator__closure(             # <<<<<<<<<<<<<<
 *         self: LexerATNSimulator,
 *         input: InputStream,
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_3LexerATNSimulator__closure, 0, __pyx_n_s_LexerATNSimulator__closure, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__13)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_1, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LexerATNSimulator__closure, __pyx_t_1) < 0) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":242
 *         return hash((self.state.stateNumber, self.alt, self.context, self.semanticContext))
 * 
 *     cpdef hashCodeForConfigSet(self):             # <<<<<<<<<<<<<<
 *         return hash((self.state.stateNumber, self.alt, hash(self.semanticContext)))
 * 
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_7hashCodeForConfigSet, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfig_hashCodeForConfigSet, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__15)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig->tp_dict, __pyx_n_s_hashCodeForConfigSet, __pyx_t_1) < 0) __PYX_ERR(0, 242, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig);

  /* "omnibus/_ext/cy/antlr.pyx":245
 *         return hash((self.state.stateNumber, self.alt, hash(self.semanticContext)))
 * 
 *     cpdef equalsForConfigSet(self, other):             # <<<<<<<<<<<<<<
 *         if self is other:
 *             return True
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_9equalsForConfigSet, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfig_equalsForConfigSet, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__17)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig->tp_dict, __pyx_n_s_equalsForConfigSet, __pyx_t_1) < 0) __PYX_ERR(0, 245, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_13__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfig___reduce_cython, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__19)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig->tp_dict, __pyx_n_s_reduce_cython, __pyx_t_1) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyATNConfig, (type(self), 0x52fdf41, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyATNConfig__set_state(self, __pyx_state)
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_11CyATNConfig_15__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfig___setstate_cython, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__21)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig->tp_dict, __pyx_n_s_setstate_cython, __pyx_t_1) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfig);

  /* "omnibus/_ext/cy/antlr.pyx":287
 *             alt: int = None,
 *             context: PredictionContext = None,
 *             semantic: SemanticContext = SemanticContext.NONE,             # <<<<<<<<<<<<<<
 *             lexerActionExecutor: LexerActionExecutor = None,
 *             config: LexerATNConfig = None,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_SemanticContext); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_NONE); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_k__7 = __pyx_t_5;
  __Pyx_GIVEREF(__pyx_t_5);
  __pyx_t_5 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":322
 *         return CyATNConfig.__eq__(other)
 * 
 *     cpdef hashCodeForConfigSet(self):             # <<<<<<<<<<<<<<
 *         return hash(self)
 * 
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_7hashCodeForConfigSet, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyLexerATNConfig_hashCodeForConf, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__23)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig->tp_dict, __pyx_n_s_hashCodeForConfigSet, __pyx_t_5) < 0) __PYX_ERR(0, 322, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig);

  /* "omnibus/_ext/cy/antlr.pyx":325
 *         return hash(self)
 * 
 *     cpdef equalsForConfigSet(self, other):             # <<<<<<<<<<<<<<
 *         return self == other
 * 
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_9equalsForConfigSet, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyLexerATNConfig_equalsForConfig, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__25)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig->tp_dict, __pyx_n_s_equalsForConfigSet, __pyx_t_5) < 0) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig);

  /* "omnibus/_ext/cy/antlr.pyx":328
 *         return self == other
 * 
 *     cpdef checkNonGreedyDecision(self, source: LexerATNConfig, target: ATNState):             # <<<<<<<<<<<<<<
 *         return source.passedThroughNonGreedyDecision or isinstance(target, DecisionState) and target.nonGreedy
 * 
 */
  __pyx_t_5 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_LexerATNConfig); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_source, __pyx_t_1) < 0) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_ATNState); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_target, __pyx_t_1) < 0) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_11checkNonGreedyDecision, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyLexerATNConfig_checkNonGreedyD, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__27)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_1, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig->tp_dict, __pyx_n_s_checkNonGreedyDecision, __pyx_t_1) < 0) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_13__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyLexerATNConfig___reduce_cython, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__29)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig->tp_dict, __pyx_n_s_reduce_cython, __pyx_t_1) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyLexerATNConfig, (type(self), 0x55e4a68, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyLexerATNConfig__set_state(self, __pyx_state)
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_16CyLexerATNConfig_15__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyLexerATNConfig___setstate_cyth, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__31)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig->tp_dict, __pyx_n_s_setstate_cython, __pyx_t_1) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyLexerATNConfig);

  /* "omnibus/_ext/cy/antlr.pyx":364
 *         return self.configs.__iter__()
 * 
 *     def add(self, config: ATNConfig, mergeCache=None):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             raise Exception("This set is readonly")
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 364, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_ATNConfig); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 364, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_config, __pyx_t_5) < 0) __PYX_ERR(0, 364, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_5add, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfigSet_add, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__33)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 364, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet->tp_dict, __pyx_n_s_add, __pyx_t_5) < 0) __PYX_ERR(0, 364, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet);

  /* "omnibus/_ext/cy/antlr.pyx":392
 *         return True
 * 
 *     def getOrAdd(self, config: ATNConfig):             # <<<<<<<<<<<<<<
 *         h = config.hashCodeForConfigSet()
 *         l = self.configLookup.get(h, None)
 */
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_ATNConfig); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_config, __pyx_t_1) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_7getOrAdd, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfigSet_getOrAdd, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__35)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_1, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet->tp_dict, __pyx_n_s_getOrAdd, __pyx_t_1) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet);

  /* "omnibus/_ext/cy/antlr.pyx":406
 *         return config
 * 
 *     def getStates(self):             # <<<<<<<<<<<<<<
 *         return set(c.state for c in self.configs)
 * 
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_9getStates, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfigSet_getStates, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__37)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 406, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet->tp_dict, __pyx_n_s_getStates, __pyx_t_1) < 0) __PYX_ERR(0, 406, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet);

  /* "omnibus/_ext/cy/antlr.pyx":409
 *         return set(c.state for c in self.configs)
 * 
 *     def getPredicates(self):             # <<<<<<<<<<<<<<
 *         return list(cfg.semanticContext for cfg in self.configs if cfg.semanticContext != SemanticContext.NONE)
 * 
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_11getPredicates, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfigSet_getPredicates, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__39)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 409, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet->tp_dict, __pyx_n_s_getPredicates, __pyx_t_1) < 0) __PYX_ERR(0, 409, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet);

  /* "omnibus/_ext/cy/antlr.pyx":412
 *         return list(cfg.semanticContext for cfg in self.configs if cfg.semanticContext != SemanticContext.NONE)
 * 
 *     def get(self, i: int):             # <<<<<<<<<<<<<<
 *         return self.configs[i]
 * 
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 412, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_i, __pyx_n_u_int) < 0) __PYX_ERR(0, 412, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_13get, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfigSet_get, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__41)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 412, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet->tp_dict, __pyx_n_s_get, __pyx_t_5) < 0) __PYX_ERR(0, 412, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet);

  /* "omnibus/_ext/cy/antlr.pyx":415
 *         return self.configs[i]
 * 
 *     def optimizeConfigs(self, interpreter: ATNSimulator):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             raise IllegalStateException("This set is readonly")
 */
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 415, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_ATNSimulator); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 415, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_interpreter, __pyx_t_1) < 0) __PYX_ERR(0, 415, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_15optimizeConfigs, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfigSet_optimizeConfigs, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__43)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 415, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_1, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet->tp_dict, __pyx_n_s_optimizeConfigs, __pyx_t_1) < 0) __PYX_ERR(0, 415, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet);

  /* "omnibus/_ext/cy/antlr.pyx":423
 *             config.context = interpreter.getCachedContext(config.context)
 * 
 *     def addAll(self, coll: list):             # <<<<<<<<<<<<<<
 *         for c in coll:
 *             self.add(c)
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_coll, __pyx_n_u_list) < 0) __PYX_ERR(0, 423, __pyx_L1_error)
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_17addAll, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfigSet_addAll, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__45)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_5, __pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet->tp_dict, __pyx_n_s_addAll, __pyx_t_5) < 0) __PYX_ERR(0, 423, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet);

  /* "omnibus/_ext/cy/antlr.pyx":453
 *         return self.hashConfigs()
 * 
 *     def hashConfigs(self):             # <<<<<<<<<<<<<<
 *         return reduce(lambda h, cfg: hash((h, cfg)), self.configs, 0)
 * 
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_23hashConfigs, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfigSet_hashConfigs, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__47)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet->tp_dict, __pyx_n_s_hashConfigs, __pyx_t_5) < 0) __PYX_ERR(0, 453, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet);

  /* "omnibus/_ext/cy/antlr.pyx":459
 *         return len(self.configs)
 * 
 *     def isEmpty(self):             # <<<<<<<<<<<<<<
 *         return len(self.configs) == 0
 * 
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_27isEmpty, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfigSet_isEmpty, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__49)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 459, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet->tp_dict, __pyx_n_s_isEmpty, __pyx_t_5) < 0) __PYX_ERR(0, 459, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet);

  /* "omnibus/_ext/cy/antlr.pyx":473
 *         return False
 * 
 *     def clear(self):             # <<<<<<<<<<<<<<
 *         if self.readonly_:
 *             raise IllegalStateException("This set is readonly")
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_31clear, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfigSet_clear, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__51)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 473, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet->tp_dict, __pyx_n_s_clear, __pyx_t_5) < 0) __PYX_ERR(0, 473, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet);

  /* "omnibus/_ext/cy/antlr.pyx":480
 *         self.configLookup.clear()
 * 
 *     def setReadonly(self, readonly: bool):             # <<<<<<<<<<<<<<
 *         self.readonly_ = readonly
 *         self.configLookup = None  # can't mod, no need for lookup cache
 */
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_readonly, __pyx_n_u_bool) < 0) __PYX_ERR(0, 480, __pyx_L1_error)
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_33setReadonly, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfigSet_setReadonly, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__53)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_1, __pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet->tp_dict, __pyx_n_s_setReadonly, __pyx_t_1) < 0) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_37__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfigSet___reduce_cython, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__55)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet->tp_dict, __pyx_n_s_reduce_cython, __pyx_t_1) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyATNConfigSet, (type(self), 0x1c4e82d, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyATNConfigSet__set_state(self, __pyx_state)
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_14CyATNConfigSet_39__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyATNConfigSet___setstate_cython, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__57)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet->tp_dict, __pyx_n_s_setstate_cython, __pyx_t_1) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyATNConfigSet);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyOrderedATNConfigSet___reduce_c, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__59)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet->tp_dict, __pyx_n_s_reduce_cython, __pyx_t_1) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CyOrderedATNConfigSet, (type(self), 0x1c4e82d, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CyOrderedATNConfigSet__set_state(self, __pyx_state)
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_21CyOrderedATNConfigSet_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CyOrderedATNConfigSet___setstate, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__61)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet->tp_dict, __pyx_n_s_setstate_cython, __pyx_t_1) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_7omnibus_4_ext_2cy_5antlr_CyOrderedATNConfigSet);

  /* "(tree fragment)":1
 * def __pyx_unpickle_CyATNConfig(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_5__pyx_unpickle_CyATNConfig, 0, __pyx_n_s_pyx_unpickle_CyATNConfig, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__63)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_CyATNConfig, __pyx_t_1) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_CyATNConfig__set_state(<CyATNConfig> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_CyATNConfig__set_state(CyATNConfig __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.alt = __pyx_state[0]; __pyx_result.context = __pyx_state[1]; __pyx_result.precedenceFilterSuppressed = __pyx_state[2]; __pyx_result.reachesIntoOuterContext = __pyx_state[3]; __pyx_result.semantic = __pyx_state[4]; __pyx_result.state = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_7__pyx_unpickle_CyLexerATNConfig, 0, __pyx_n_s_pyx_unpickle_CyLexerATNConfig, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__65)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_CyLexerATNConfig, __pyx_t_1) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_CyATNConfigSet(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_9__pyx_unpickle_CyATNConfigSet, 0, __pyx_n_s_pyx_unpickle_CyATNConfigSet, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__67)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_CyATNConfigSet, __pyx_t_1) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_CyATNConfigSet__set_state(<CyATNConfigSet> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_CyATNConfigSet__set_state(CyATNConfigSet __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.cachedHashCode = __pyx_state[0]; __pyx_result.configLookup = __pyx_state[1]; __pyx_result.configs = __pyx_state[2]; __pyx_result.conflictingAlts = __pyx_state[3]; __pyx_result.dipsIntoOuterContext = __pyx_state[4]; __pyx_result.fullCtx = __pyx_state[5]; __pyx_result.hasSemanticContext = __pyx_state[6]; __pyx_result.readonly_ = __pyx_state[7]; __pyx_result.uniqueAlt = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7omnibus_4_ext_2cy_5antlr_11__pyx_unpickle_CyOrderedATNConfigSet, 0, __pyx_n_s_pyx_unpickle_CyOrderedATNConfi, NULL, __pyx_n_s_omnibus__ext_cy_antlr, __pyx_d, ((PyObject *)__pyx_codeobj__69)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_CyOrderedATNConfi, __pyx_t_1) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "omnibus/_ext/cy/antlr.pyx":1
 * from libcpp cimport bool             # <<<<<<<<<<<<<<
 * 
 * from functools import reduce
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init omnibus._ext.cy.antlr", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init omnibus._ext.cy.antlr");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* ObjectGetItem */
#if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject* index) {
    PyObject *runerr;
    Py_ssize_t key_value;
    PySequenceMethods *m = Py_TYPE(obj)->tp_as_sequence;
    if (unlikely(!(m && m->sq_item))) {
        PyErr_Format(PyExc_TypeError, "'%.200s' object is not subscriptable", Py_TYPE(obj)->tp_name);
        return NULL;
    }
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError, "cannot fit '%.200s' into an index-sized integer", Py_TYPE(index)->tp_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key) {
    PyMappingMethods *m = Py_TYPE(obj)->tp_as_mapping;
    if (likely(m && m->mp_subscript)) {
        return m->mp_subscript(obj, key);
    }
    return __Pyx_PyObject_GetIndex(obj, key);
}
#endif

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (__Pyx_PyFastCFunction_Check(func)) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyIntCompare */
static CYTHON_INLINE PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED long inplace) {
    if (op1 == op2) {
        Py_RETURN_TRUE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a == b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = Py_SIZE(op1);
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        if (intval == 0) {
            if (size == 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
        } else if (intval < 0) {
            if (size >= 0)
                Py_RETURN_FALSE;
            intval = -intval;
            size = -size;
        } else {
            if (size <= 0)
                Py_RETURN_FALSE;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        if (unequal == 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
        if ((double)a == (double)b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    return (
        PyObject_RichCompare(op1, op2, Py_EQ));
}

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* GetAttr3 */
static PyObject *__Pyx_GetAttr3Default(PyObject *d) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    Py_INCREF(d);
    return d;
}
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *o, PyObject *n, PyObject *d) {
    PyObject *r = __Pyx_GetAttr(o, n);
    return (likely(r)) ? r : __Pyx_GetAttr3Default(d);
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (descr != NULL) {
        *method = descr;
        return 0;
    }
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(name));
#endif
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod1 */
static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
    Py_DECREF(method);
    return result;
}
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method = NULL, *result;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_Call2Args(method, obj, arg);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) return NULL;
    return __Pyx__PyObject_CallMethod1(method, arg);
}

/* append */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (unlikely(__Pyx_PyList_Append(L, x) < 0)) return -1;
    } else {
        PyObject* retval = __Pyx_PyObject_CallMethod1(L, __pyx_n_s_append, x);
        if (unlikely(!retval))
            return -1;
        Py_DECREF(retval);
    }
    return 0;
}

/* None */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
    PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
}

/* IterNext */
static PyObject *__Pyx_PyIter_Next2Default(PyObject* defval) {
    PyObject* exc_type;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    exc_type = __Pyx_PyErr_Occurred();
    if (unlikely(exc_type)) {
        if (!defval || unlikely(!__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))
            return NULL;
        __Pyx_PyErr_Clear();
        Py_INCREF(defval);
        return defval;
    }
    if (defval) {
        Py_INCREF(defval);
        return defval;
    }
    __Pyx_PyErr_SetNone(PyExc_StopIteration);
    return NULL;
}
static void __Pyx_PyIter_Next_ErrorNoIterator(PyObject *iterator) {
    PyErr_Format(PyExc_TypeError,
        "%.200s object is not an iterator", Py_TYPE(iterator)->tp_name);
}
static CYTHON_INLINE PyObject *__Pyx_PyIter_Next2(PyObject* iterator, PyObject* defval) {
    PyObject* next;
    iternextfunc iternext = Py_TYPE(iterator)->tp_iternext;
    if (likely(iternext)) {
#if CYTHON_USE_TYPE_SLOTS
        next = iternext(iterator);
        if (likely(next))
            return next;
        #if PY_VERSION_HEX >= 0x02070000
        if (unlikely(iternext == &_PyObject_NextNotImplemented))
            return NULL;
        #endif
#else
        next = PyIter_Next(iterator);
        if (likely(next))
            return next;
#endif
    } else if (CYTHON_USE_TYPE_SLOTS || unlikely(!PyIter_Check(iterator))) {
        __Pyx_PyIter_Next_ErrorNoIterator(iterator);
        return NULL;
    }
#if !CYTHON_USE_TYPE_SLOTS
    else {
        next = PyIter_Next(iterator);
        if (likely(next))
            return next;
    }
#endif
    return __Pyx_PyIter_Next2Default(defval);
}

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

/* FetchCommonType */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* CythonFunctionShared */
#include <structmember.h>
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (unlikely(op->func_doc == NULL)) {
        if (op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp = op->func_doc;
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    op->func_doc = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = op->func_name;
    Py_INCREF(value);
    op->func_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = op->func_qualname;
    Py_INCREF(value);
    op->func_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    tmp = op->func_dict;
    Py_INCREF(value);
    op->func_dict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyTuple_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_tuple;
    op->defaults_tuple = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_kwdict;
    op->defaults_kwdict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value || value == Py_None) {
        value = NULL;
    } else if (!PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    tmp = op->func_annotations;
    op->func_annotations = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(m->func.m_ml->ml_name);
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    if (unlikely(op == NULL))
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults_size = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
{
#if PY_MAJOR_VERSION < 3
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(func);
        return func;
    }
    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
        if (type == NULL)
            type = (PyObject *)(Py_TYPE(obj));
        return __Pyx_PyMethod_New(func, type, (PyObject *)(Py_TYPE(type)));
    }
    if (obj == Py_None)
        obj = NULL;
#endif
    return __Pyx_PyMethod_New(func, obj, type);
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    Py_ssize_t size;
    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 0))
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags in "
                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "
                        "longer supported!");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    return __Pyx_CyFunction_CallMethod(func, ((PyCFunctionObject*)func)->m_self, arg, kw);
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
        argc = PyTuple_GET_SIZE(args);
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
    0,
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_CyFunction_descr_get,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
    0,
#endif
};
static int __pyx_CyFunction_init(void) {
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    m->defaults_size = size;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* KeywordStringCheck */
static int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* HasAttr */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!__Pyx_PyBaseString_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_GetAttr(o, n);
    if (unlikely(!r)) {
        PyErr_Clear();
        return 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}

/* PyObject_GenericGetAttrNoDict */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, attr_name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(attr_name));
#endif
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetVTable */
static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* PyObjectGetAttrStrNoError */
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
}

/* SetupReduce */
static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStr(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    if (_PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate)) goto __PYX_GOOD;
#else
    if (PyObject_HasAttr(type_obj, __pyx_n_s_getstate)) goto __PYX_GOOD;
#endif
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto __PYX_BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_2); if (!object_reduce) goto __PYX_BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_2); if (!object_reduce) goto __PYX_BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_2); if (unlikely(!reduce)) goto __PYX_BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_reduce_cython);
            if (likely(reduce_cython)) {
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_2, reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
            } else if (reduce == object_reduce || PyErr_Occurred()) {
                goto __PYX_BAD;
            }
            setstate = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate_cython);
                if (likely(setstate_cython)) {
                    ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                    ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                } else if (!setstate || PyErr_Occurred()) {
                    goto __PYX_BAD;
                }
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto __PYX_GOOD;
__PYX_BAD:
    if (!PyErr_Occurred())
        PyErr_Format(PyExc_RuntimeError, "Unable to initialize pickling for %s", ((PyTypeObject*)type_obj)->tp_name);
    ret = -1;
__PYX_GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_NCP_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* Globals */
static PyObject* __Pyx_Globals(void) {
    Py_ssize_t i;
    PyObject *names;
    PyObject *globals = __pyx_d;
    Py_INCREF(globals);
    names = PyObject_Dir(__pyx_m);
    if (!names)
        goto bad;
    for (i = PyList_GET_SIZE(names)-1; i >= 0; i--) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject* name = PySequence_ITEM(names, i);
        if (!name)
            goto bad;
#else
        PyObject* name = PyList_GET_ITEM(names, i);
#endif
        if (!PyDict_Contains(globals, name)) {
            PyObject* value = __Pyx_GetAttr(__pyx_m, name);
            if (!value) {
#if CYTHON_COMPILING_IN_PYPY
                Py_DECREF(name);
#endif
                goto bad;
            }
            if (PyDict_SetItem(globals, name, value) < 0) {
#if CYTHON_COMPILING_IN_PYPY
                Py_DECREF(name);
#endif
                Py_DECREF(value);
                goto bad;
            }
        }
#if CYTHON_COMPILING_IN_PYPY
        Py_DECREF(name);
#endif
    }
    Py_DECREF(names);
    return globals;
bad:
    Py_XDECREF(names);
    Py_XDECREF(globals);
    return NULL;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* SwapException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = *type;
    exc_info->exc_value = *value;
    exc_info->exc_traceback = *tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
    #endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#endif

/* CoroutineBase */
#include <structmember.h>
#include <frameobject.h>
#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
static int __Pyx_PyGen__FetchStopIterationValue(CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (likely(et == PyExc_StopIteration)) {
        if (!ev) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#if PY_VERSION_HEX >= 0x030300A0
        else if (Py_TYPE(ev) == (PyTypeObject*)PyExc_StopIteration) {
            value = ((PyStopIterationObject *)ev)->value;
            Py_INCREF(value);
            Py_DECREF(ev);
        }
#endif
        else if (unlikely(PyTuple_Check(ev))) {
            if (PyTuple_GET_SIZE(ev) >= 1) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                value = PyTuple_GET_ITEM(ev, 0);
                Py_INCREF(value);
#else
                value = PySequence_ITEM(ev, 0);
#endif
            } else {
                Py_INCREF(Py_None);
                value = Py_None;
            }
            Py_DECREF(ev);
        }
        else if (!__Pyx_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {
            value = ev;
        }
        if (likely(value)) {
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = value;
            return 0;
        }
    } else if (!__Pyx_PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PySequence_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
static CYTHON_INLINE
void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *exc_state) {
    PyObject *t, *v, *tb;
    t = exc_state->exc_type;
    v = exc_state->exc_value;
    tb = exc_state->exc_traceback;
    exc_state->exc_type = NULL;
    exc_state->exc_value = NULL;
    exc_state->exc_traceback = NULL;
    Py_XDECREF(t);
    Py_XDECREF(v);
    Py_XDECREF(tb);
}
#define __Pyx_Coroutine_AlreadyRunningError(gen)  (__Pyx__Coroutine_AlreadyRunningError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyRunningError(CYTHON_UNUSED __pyx_CoroutineObject *gen) {
    const char *msg;
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check((PyObject*)gen)) {
        msg = "coroutine already executing";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact((PyObject*)gen)) {
        msg = "async generator already executing";
    #endif
    } else {
        msg = "generator already executing";
    }
    PyErr_SetString(PyExc_ValueError, msg);
}
#define __Pyx_Coroutine_NotStartedError(gen)  (__Pyx__Coroutine_NotStartedError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_NotStartedError(CYTHON_UNUSED PyObject *gen) {
    const char *msg;
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check(gen)) {
        msg = "can't send non-None value to a just-started coroutine";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact(gen)) {
        msg = "can't send non-None value to a just-started async generator";
    #endif
    } else {
        msg = "can't send non-None value to a just-started generator";
    }
    PyErr_SetString(PyExc_TypeError, msg);
}
#define __Pyx_Coroutine_AlreadyTerminatedError(gen, value, closing)  (__Pyx__Coroutine_AlreadyTerminatedError(gen, value, closing), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyTerminatedError(CYTHON_UNUSED PyObject *gen, PyObject *value, CYTHON_UNUSED int closing) {
    #ifdef __Pyx_Coroutine_USED
    if (!closing && __Pyx_Coroutine_Check(gen)) {
        PyErr_SetString(PyExc_RuntimeError, "cannot reuse already awaited coroutine");
    } else
    #endif
    if (value) {
        #ifdef __Pyx_AsyncGen_USED
        if (__Pyx_AsyncGen_CheckExact(gen))
            PyErr_SetNone(__Pyx_PyExc_StopAsyncIteration);
        else
        #endif
        PyErr_SetNone(PyExc_StopIteration);
    }
}
static
PyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value, int closing) {
    __Pyx_PyThreadState_declare
    PyThreadState *tstate;
    __Pyx_ExcInfoStruct *exc_state;
    PyObject *retval;
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            return __Pyx_Coroutine_NotStartedError((PyObject*)self);
        }
    }
    if (unlikely(self->resume_label == -1)) {
        return __Pyx_Coroutine_AlreadyTerminatedError((PyObject*)self, value, closing);
    }
#if CYTHON_FAST_THREAD_STATE
    __Pyx_PyThreadState_assign
    tstate = __pyx_tstate;
#else
    tstate = __Pyx_PyThreadState_Current;
#endif
    exc_state = &self->gi_exc_state;
    if (exc_state->exc_type) {
        #if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
        #else
        if (exc_state->exc_traceback) {
            PyTracebackObject *tb = (PyTracebackObject *) exc_state->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_XINCREF(tstate->frame);
            assert(f->f_back == NULL);
            f->f_back = tstate->frame;
        }
        #endif
    }
#if CYTHON_USE_EXC_INFO_STACK
    exc_state->previous_item = tstate->exc_info;
    tstate->exc_info = exc_state;
#else
    if (exc_state->exc_type) {
        __Pyx_ExceptionSwap(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    } else {
        __Pyx_Coroutine_ExceptionClear(exc_state);
        __Pyx_ExceptionSave(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    }
#endif
    self->is_running = 1;
    retval = self->body((PyObject *) self, tstate, value);
    self->is_running = 0;
#if CYTHON_USE_EXC_INFO_STACK
    exc_state = &self->gi_exc_state;
    tstate->exc_info = exc_state->previous_item;
    exc_state->previous_item = NULL;
    __Pyx_Coroutine_ResetFrameBackpointer(exc_state);
#endif
    return retval;
}
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state) {
    PyObject *exc_tb = exc_state->exc_traceback;
    if (likely(exc_tb)) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
#else
        PyTracebackObject *tb = (PyTracebackObject *) exc_tb;
        PyFrameObject *f = tb->tb_frame;
        Py_CLEAR(f->f_back);
#endif
    }
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_MethodReturn(CYTHON_UNUSED PyObject* gen, PyObject *retval) {
    if (unlikely(!retval)) {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        if (!__Pyx_PyErr_Occurred()) {
            PyObject *exc = PyExc_StopIteration;
            #ifdef __Pyx_AsyncGen_USED
            if (__Pyx_AsyncGen_CheckExact(gen))
                exc = __Pyx_PyExc_StopAsyncIteration;
            #endif
            __Pyx_PyErr_SetNone(exc);
        }
    }
    return retval;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
static CYTHON_INLINE
PyObject *__Pyx_PyGen_Send(PyGenObject *gen, PyObject *arg) {
#if PY_VERSION_HEX <= 0x030A00A1
    return _PyGen_Send(gen, arg);
#else
    PyObject *result;
    if (PyIter_Send((PyObject*)gen, arg ? arg : Py_None, &result) == PYGEN_RETURN) {
        if (PyAsyncGen_CheckExact(gen)) {
            assert(result == Py_None);
            PyErr_SetNone(PyExc_StopAsyncIteration);
        }
        else if (result == Py_None) {
            PyErr_SetNone(PyExc_StopIteration);
        }
        else {
            _PyGen_SetStopIterationValue(result);
        }
        Py_CLEAR(result);
    }
    return result;
#endif
}
#endif
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Coroutine_Undelegate(gen);
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, &val);
    ret = __Pyx_Coroutine_SendEx(gen, val, 0);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {
    PyObject *retval;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_AsyncGen_USED
        if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
            ret = __Pyx_async_gen_asend_send(yf, value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03050000 && defined(PyCoro_CheckExact) && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyCoro_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        {
            if (value == Py_None)
                ret = Py_TYPE(yf)->tp_iternext(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        retval = __Pyx_Coroutine_FinishDelegation(gen);
    } else {
        retval = __Pyx_Coroutine_SendEx(gen, value, 0);
    }
    return __Pyx_Coroutine_MethodReturn(self, retval);
}
static int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    #ifdef __Pyx_Generator_USED
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_Check(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    if (__Pyx_CoroutineAwait_CheckExact(yf)) {
        retval = __Pyx_CoroutineAwait_Close((__pyx_CoroutineAwaitObject*)yf, NULL);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_AsyncGen_USED
    if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
        retval = __Pyx_async_gen_asend_close(yf, NULL);
    } else
    if (__pyx_PyAsyncGenAThrow_CheckExact(yf)) {
        retval = __Pyx_async_gen_athrow_close(yf, NULL);
    } else
    #endif
    {
        PyObject *meth;
        gen->is_running = 1;
        meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                PyErr_WriteUnraisable(yf);
            }
            PyErr_Clear();
        } else {
            retval = PyObject_CallFunction(meth, NULL);
            Py_DECREF(meth);
            if (!retval)
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Next(yf);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, NULL);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, Py_None);
        } else
        #endif
            ret = Py_TYPE(yf)->tp_iternext(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Coroutine_FinishDelegation(gen);
    }
    return __Pyx_Coroutine_SendEx(gen, Py_None, 0);
}
static PyObject *__Pyx_Coroutine_Close_Method(PyObject *self, CYTHON_UNUSED PyObject *arg) {
    return __Pyx_Coroutine_Close(self);
}
static PyObject *__Pyx_Coroutine_Close(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Coroutine_CloseIter(gen, yf);
        __Pyx_Coroutine_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Coroutine_SendEx(gen, NULL, 1);
    if (unlikely(retval)) {
        const char *msg;
        Py_DECREF(retval);
        if ((0)) {
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_Coroutine_Check(self)) {
            msg = "coroutine ignored GeneratorExit";
        #endif
        #ifdef __Pyx_AsyncGen_USED
        } else if (__Pyx_AsyncGen_CheckExact(self)) {
#if PY_VERSION_HEX < 0x03060000
            msg = "async generator ignored GeneratorExit - might require Python 3.6+ finalisation (PEP 525)";
#else
            msg = "async generator ignored GeneratorExit";
#endif
        #endif
        } else {
            msg = "generator ignored GeneratorExit";
        }
        PyErr_SetString(PyExc_RuntimeError, msg);
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (likely(!raised_exception || __Pyx_PyErr_GivenExceptionMatches2(raised_exception, PyExc_GeneratorExit, PyExc_StopIteration))) {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx__Coroutine_Throw(PyObject *self, PyObject *typ, PyObject *val, PyObject *tb,
                                        PyObject *args, int close_on_genexit) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (__Pyx_PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit) && close_on_genexit) {
            int err = __Pyx_Coroutine_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Coroutine_Undelegate(gen);
            if (err < 0)
                return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
            goto throw_here;
        }
        gen->is_running = 1;
        if (0
        #ifdef __Pyx_Generator_USED
            || __Pyx_Generator_CheckExact(yf)
        #endif
        #ifdef __Pyx_Coroutine_USED
            || __Pyx_Coroutine_Check(yf)
        #endif
            ) {
            ret = __Pyx__Coroutine_Throw(yf, typ, val, tb, args, close_on_genexit);
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_CoroutineAwait_CheckExact(yf)) {
            ret = __Pyx__Coroutine_Throw(((__pyx_CoroutineAwaitObject*)yf)->coroutine, typ, val, tb, args, close_on_genexit);
        #endif
        } else {
            PyObject *meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                    gen->is_running = 0;
                    return NULL;
                }
                PyErr_Clear();
                __Pyx_Coroutine_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            if (likely(args)) {
                ret = PyObject_CallObject(meth, args);
            } else {
                ret = PyObject_CallFunctionObjArgs(meth, typ, val, tb, NULL);
            }
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Coroutine_FinishDelegation(gen);
        }
        return __Pyx_Coroutine_MethodReturn(self, ret);
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
}
static PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {
    PyObject *typ;
    PyObject *val = NULL;
    PyObject *tb = NULL;
    if (!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb))
        return NULL;
    return __Pyx__Coroutine_Throw(self, typ, val, tb, args, 1);
}
static CYTHON_INLINE int __Pyx_Coroutine_traverse_excstate(__Pyx_ExcInfoStruct *exc_state, visitproc visit, void *arg) {
    Py_VISIT(exc_state->exc_type);
    Py_VISIT(exc_state->exc_value);
    Py_VISIT(exc_state->exc_traceback);
    return 0;
}
static int __Pyx_Coroutine_traverse(__pyx_CoroutineObject *gen, visitproc visit, void *arg) {
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    return __Pyx_Coroutine_traverse_excstate(&gen->gi_exc_state, visit, arg);
}
static int __Pyx_Coroutine_clear(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    __Pyx_Coroutine_ExceptionClear(&gen->gi_exc_state);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        Py_CLEAR(((__pyx_PyAsyncGenObject*)gen)->ag_finalizer);
    }
#endif
    Py_CLEAR(gen->gi_code);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    Py_CLEAR(gen->gi_modulename);
    return 0;
}
static void __Pyx_Coroutine_dealloc(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label >= 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1 && CYTHON_USE_TP_FINALIZE
        if (PyObject_CallFinalizerFromDealloc(self))
#else
        Py_TYPE(gen)->tp_del(self);
        if (self->ob_refcnt > 0)
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        /* We have to handle this case for asynchronous generators
           right here, because this code has to be between UNTRACK
           and GC_Del. */
        Py_CLEAR(((__pyx_PyAsyncGenObject*)self)->ag_finalizer);
    }
#endif
    __Pyx_Coroutine_clear(self);
    PyObject_GC_Del(gen);
}
static void __Pyx_Coroutine_del(PyObject *self) {
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    __Pyx_PyThreadState_declare
    if (gen->resume_label < 0) {
        return;
    }
#if !CYTHON_USE_TP_FINALIZE
    assert(self->ob_refcnt == 0);
    __Pyx_SET_REFCNT(self, 1);
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        __pyx_PyAsyncGenObject *agen = (__pyx_PyAsyncGenObject*)self;
        PyObject *finalizer = agen->ag_finalizer;
        if (finalizer && !agen->ag_closed) {
            PyObject *res = __Pyx_PyObject_CallOneArg(finalizer, self);
            if (unlikely(!res)) {
                PyErr_WriteUnraisable(self);
            } else {
                Py_DECREF(res);
            }
            __Pyx_ErrRestore(error_type, error_value, error_traceback);
            return;
        }
    }
#endif
    if (unlikely(gen->resume_label == 0 && !error_value)) {
#ifdef __Pyx_Coroutine_USED
#ifdef __Pyx_Generator_USED
    if (!__Pyx_Generator_CheckExact(self))
#endif
        {
        PyObject_GC_UnTrack(self);
#if PY_MAJOR_VERSION >= 3  || defined(PyErr_WarnFormat)
        if (unlikely(PyErr_WarnFormat(PyExc_RuntimeWarning, 1, "coroutine '%.50S' was never awaited", gen->gi_qualname) < 0))
            PyErr_WriteUnraisable(self);
#else
        {PyObject *msg;
        char *cmsg;
        #if CYTHON_COMPILING_IN_PYPY
        msg = NULL;
        cmsg = (char*) "coroutine was never awaited";
        #else
        char *cname;
        PyObject *qualname;
        qualname = gen->gi_qualname;
        cname = PyString_AS_STRING(qualname);
        msg = PyString_FromFormat("coroutine '%.50s' was never awaited", cname);
        if (unlikely(!msg)) {
            PyErr_Clear();
            cmsg = (char*) "coroutine was never awaited";
        } else {
            cmsg = PyString_AS_STRING(msg);
        }
        #endif
        if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, cmsg, 1) < 0))
            PyErr_WriteUnraisable(self);
        Py_XDECREF(msg);}
#endif
        PyObject_GC_Track(self);
        }
#endif
    } else {
        PyObject *res = __Pyx_Coroutine_Close(self);
        if (unlikely(!res)) {
            if (PyErr_Occurred())
                PyErr_WriteUnraisable(self);
        } else {
            Py_DECREF(res);
        }
    }
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if !CYTHON_USE_TP_FINALIZE
    assert(self->ob_refcnt > 0);
    if (--self->ob_refcnt == 0) {
        return;
    }
    {
        Py_ssize_t refcnt = self->ob_refcnt;
        _Py_NewReference(self);
        __Pyx_SET_REFCNT(self, refcnt);
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(self->ob_type) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self, CYTHON_UNUSED void *context)
{
    PyObject *name = self->gi_name;
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_name;
    Py_INCREF(value);
    self->gi_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self, CYTHON_UNUSED void *context)
{
    PyObject *name = self->gi_qualname;
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_qualname;
    Py_INCREF(value);
    self->gi_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
            PyTypeObject* type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);
    if (unlikely(!gen))
        return NULL;
    return __Pyx__Coroutine_NewInit(gen, body, code, closure, name, qualname, module_name);
}
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    gen->gi_exc_state.exc_type = NULL;
    gen->gi_exc_state.exc_value = NULL;
    gen->gi_exc_state.exc_traceback = NULL;
#if CYTHON_USE_EXC_INFO_STACK
    gen->gi_exc_state.previous_item = NULL;
#endif
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    Py_XINCREF(module_name);
    gen->gi_modulename = module_name;
    Py_XINCREF(code);
    gen->gi_code = code;
    PyObject_GC_Track(gen);
    return gen;
}

/* PatchModuleWithCoroutine */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    int result;
    PyObject *globals, *result_obj;
    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_coroutine_type",
    #ifdef __Pyx_Coroutine_USED
        (PyObject*)__pyx_CoroutineType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_generator_type",
    #ifdef __Pyx_Generator_USED
        (PyObject*)__pyx_GeneratorType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;
    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);
    if (unlikely(!result_obj)) goto ignore;
    Py_DECREF(result_obj);
    Py_DECREF(globals);
    return module;
ignore:
    Py_XDECREF(globals);
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    py_code++;
#endif
    return module;
}

/* PatchGeneratorABC */
#ifndef CYTHON_REGISTER_ABCS
#define CYTHON_REGISTER_ABCS 1
#endif
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
static PyObject* __Pyx_patch_abc_module(PyObject *module);
static PyObject* __Pyx_patch_abc_module(PyObject *module) {
    module = __Pyx_Coroutine_patch_module(
        module, ""
"if _cython_generator_type is not None:\n"
"    try: Generator = _module.Generator\n"
"    except AttributeError: pass\n"
"    else: Generator.register(_cython_generator_type)\n"
"if _cython_coroutine_type is not None:\n"
"    try: Coroutine = _module.Coroutine\n"
"    except AttributeError: pass\n"
"    else: Coroutine.register(_cython_coroutine_type)\n"
    );
    return module;
}
#endif
static int __Pyx_patch_abc(void) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    static int abc_patched = 0;
    if (CYTHON_REGISTER_ABCS && !abc_patched) {
        PyObject *module;
        module = PyImport_ImportModule((PY_MAJOR_VERSION >= 3) ? "collections.abc" : "collections");
        if (!module) {
            PyErr_WriteUnraisable(NULL);
            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,
                    ((PY_MAJOR_VERSION >= 3) ?
                        "Cython module failed to register with collections.abc module" :
                        "Cython module failed to register with collections module"), 1) < 0)) {
                return -1;
            }
        } else {
            module = __Pyx_patch_abc_module(module);
            abc_patched = 1;
            if (unlikely(!module))
                return -1;
            Py_DECREF(module);
        }
        module = PyImport_ImportModule("backports_abc");
        if (module) {
            module = __Pyx_patch_abc_module(module);
            Py_XDECREF(module);
        }
        if (!module) {
            PyErr_Clear();
        }
    }
#else
    if ((0)) __Pyx_Coroutine_patch_module(NULL, NULL);
#endif
    return 0;
}

/* Generator */
static PyMethodDef __pyx_Generator_methods[] = {
    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into generator,\nreturn next yielded value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in generator,\nreturn next yielded value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_Coroutine_Close_Method, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside generator.")},
    {0, 0, 0, 0}
};
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},
    {(char*) "gi_yieldfrom", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,
     (char*) PyDoc_STR("object being iterated by 'yield from', or None")},
    {(char*) "gi_code", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_code), READONLY, NULL},
    {0, 0, 0, 0, 0}
};
static PyGetSetDef __pyx_Generator_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,
     (char*) PyDoc_STR("name of the generator"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
     (char*) PyDoc_STR("qualified name of the generator"), 0},
    {0, 0, 0, 0, 0}
};
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    (destructor) __Pyx_Coroutine_dealloc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Coroutine_traverse,
    0,
    0,
    offsetof(__pyx_CoroutineObject, gi_weakreflist),
    0,
    (iternextfunc) __Pyx_Generator_Next,
    __pyx_Generator_methods,
    __pyx_Generator_memberlist,
    __pyx_Generator_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if CYTHON_USE_TP_FINALIZE
    0,
#else
    __Pyx_Coroutine_del,
#endif
    0,
#if CYTHON_USE_TP_FINALIZE
    __Pyx_Coroutine_del,
#elif PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
    0,
#endif
};
static int __pyx_Generator_init(void) {
    __pyx_GeneratorType_type.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);
    if (unlikely(!__pyx_GeneratorType)) {
        return -1;
    }
    return 0;
}

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
